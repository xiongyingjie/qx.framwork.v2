




@section scripts{
    <script type="text/javascript">
        Ext.onReady(function() {
            Ext.BLANK_IMAGE_URL = '/Include/EXT-JS/V3/resources/images/gray/s.gif';
        Ext.QuickTips.init();


        var genres = new Ext.data.Store({
            reader: new Ext.data.JsonReader({
            fields: ['id', 'genre'],
                root: 'rows'
            }),
            proxy: new Ext.data.HttpProxy({
                url: 'ProcessRequest?act=getmoive'
            }),
            autoLoad: true
        });
        //Instantiated
        var Director = new Ext.form.TextField({
        fieldLabel: 'Director',
        name: 'director',
            allowBlank: false
        });

        var movie_form = new Ext.FormPanel({
            url: 'ProcessRequest',
            renderTo: document.body,
            frame: true,
            title: 'Movie Information Form',
            width: 250,
            items: [
            //Component config
            {
                xtype:'textfield',
                fieldLabel: 'Title',
                name: 'title',
                allowBlank: false//Validation

            },Director ,
            /*
             {
                xtype: 'textfield',
                fieldLabel: 'Director',
                name: 'director'//,
                //vtype: 'alpha'//vtype only alphabetic characters.
            },
            */
             {
                xtype: 'datefield',
                fieldLabel: 'Released',
                name: 'released',
                disabledDays: [1,2,3,4,5]//Validation
            },

            {
            xtype: 'radio',
            fieldLabel: 'Filmed In',
            name: 'filmed_in',
            boxLabel: 'Color'
        },
            {
            xtype: 'radio',
            hideLabel: false,
            labelSeparator: '',
            name: 'filmed_in',
            boxLabel: 'Black & White'
        },
            {
                xtype: 'checkbox',
                fieldLabel: 'Bad Movie',
                name: 'bad_movie'
            }
            ,
            {
                xtype: 'combo',
                name: 'genre',
                fieldLabel: 'Genre',
                mode: 'local',
                store: genres,
                displayField: 'genre',
                width: 120

            },
            {
                //xtype: 'textarea',
                xtype: 'htmleditor',
                name: 'description',
                hideLabel: true,
                labelSeparator: '',
                height: 100,
                anchor: '100%'
            }


],
            buttons: [{
                text: 'Save',
                handler: function() {
                    movie_form.getForm().submit({
                        success: function(f, a) {
                            Ext.Msg.alert('Success', 'It worked');
                        },
                        failure: function(f, a) {
                        if (a.failureType === Ext.form.Action.CONNECT_FAILURE)
{Ext.Msg.alert('Failure', 'Server reported:'+a.response.status+' '+a.response.statusText);
}
if (a.failureType === Ext.form.Action.SERVER_INVALID){
Ext.Msg.alert('Warning', a.result.errormsg);
}
                        }
                    });
                }
            }, {
                text: 'Reset',
                handler: function() {
                    movie_form.getForm().reset();
                }
}]
        });
        // genres.load();
        movie_form.getForm().load({
            url: 'ProcessRequest',
            params: {
                act: 'getdata'
            }
        });

        });
</script>
}
