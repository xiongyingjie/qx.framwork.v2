<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnityEngine.Fakes</name>
    </assembly>
    <members>
        <member name="T:AOT.Fakes.ShimMonoPInvokeCallbackAttribute">
            <summary>AOT.MonoPInvokeCallbackAttribute 的填充码类型</summary>
        </member>
        <member name="M:AOT.Fakes.ShimMonoPInvokeCallbackAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AOT.Fakes.ShimMonoPInvokeCallbackAttribute.#ctor(AOT.MonoPInvokeCallbackAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:AOT.Fakes.ShimMonoPInvokeCallbackAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AOT.Fakes.ShimMonoPInvokeCallbackAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AOT.Fakes.ShimMonoPInvokeCallbackAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AOT.Fakes.ShimMonoPInvokeCallbackAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AOT.Fakes.ShimMonoPInvokeCallbackAttribute.ConstructorType">
            <summary>设置 MonoPInvokeCallbackAttribute.MonoPInvokeCallbackAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="T:AOT.Fakes.StubMonoPInvokeCallbackAttribute">
            <summary>AOT.MonoPInvokeCallbackAttribute 的存根类型</summary>
        </member>
        <member name="M:AOT.Fakes.StubMonoPInvokeCallbackAttribute.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:AOT.Fakes.StubMonoPInvokeCallbackAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:AOT.Fakes.StubMonoPInvokeCallbackAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AOT.Fakes.StubMonoPInvokeCallbackAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AOT.Fakes.StubMonoPInvokeCallbackAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AOT.Fakes.StubMonoPInvokeCallbackAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AOT.Fakes.StubMonoPInvokeCallbackAttribute.InitializeStub">
            <summary>初始化 type StubMonoPInvokeCallbackAttribute 的新实例</summary>
        </member>
        <member name="P:AOT.Fakes.StubMonoPInvokeCallbackAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AOT.Fakes.StubMonoPInvokeCallbackAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:AOT.Fakes.StubMonoPInvokeCallbackAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:AOT.Fakes.StubMonoPInvokeCallbackAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:AOT.Fakes.StubMonoPInvokeCallbackAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:AOT.Fakes.StubMonoPInvokeCallbackAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:AOT.Fakes.StubMonoPInvokeCallbackAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:AOT.Fakes.StubMonoPInvokeCallbackAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.UnityEngineDelegates">
            <summary>包含用于 UnityEngine 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimADBannerView">
            <summary>UnityEngine.ADBannerView 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimADBannerView.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimADBannerView.#ctor(UnityEngine.ADBannerView)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimADBannerView.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.OSToScreenCoordsVector2">
            <summary>设置 ADBannerView.OSToScreenCoords(Vector2 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.layoutGet">
            <summary>设置 ADBannerView.get_layout() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.layoutSetADBannerViewLayout">
            <summary>设置 ADBannerView.set_layout(Layout value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.loadedGet">
            <summary>设置 ADBannerView.get_loaded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.positionGet">
            <summary>设置 ADBannerView.get_position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.positionSetVector2">
            <summary>设置 ADBannerView.set_position(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.sizeGet">
            <summary>设置 ADBannerView.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.visibleGet">
            <summary>设置 ADBannerView.get_visible() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.AllInstances.visibleSetBoolean">
            <summary>设置 ADBannerView.set_visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimADBannerView.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimADBannerView.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.ConstructorADBannerViewTypeADBannerViewLayout">
            <summary>设置 ADBannerView.ADBannerView(Type type, Layout layout) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.FireBannerWasClicked">
            <summary>设置 ADBannerView.FireBannerWasClicked() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.FireBannerWasLoaded">
            <summary>设置 ADBannerView.FireBannerWasLoaded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.IsAvailableADBannerViewType">
            <summary>设置 ADBannerView.IsAvailable(Type type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.Native_MoveBannerIntPtrVector2">
            <summary>设置 ADBannerView.Native_MoveBanner(IntPtr view, Vector2 pos) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.OSToScreenCoordsVector2">
            <summary>设置 ADBannerView.OSToScreenCoords(Vector2 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.StaticConstructor">
            <summary>设置 ADBannerView.ADBannerView() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.layoutGet">
            <summary>设置 ADBannerView.get_layout() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.layoutSetADBannerViewLayout">
            <summary>设置 ADBannerView.set_layout(Layout value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.loadedGet">
            <summary>设置 ADBannerView.get_loaded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.onBannerWasClickedAddADBannerViewBannerWasClickedDelegate">
            <summary>设置 ADBannerView.add_onBannerWasClicked(BannerWasClickedDelegate value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.onBannerWasClickedRemoveADBannerViewBannerWasClickedDelegate">
            <summary>设置 ADBannerView.remove_onBannerWasClicked(BannerWasClickedDelegate value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.onBannerWasLoadedAddADBannerViewBannerWasLoadedDelegate">
            <summary>设置 ADBannerView.add_onBannerWasLoaded(BannerWasLoadedDelegate value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.onBannerWasLoadedRemoveADBannerViewBannerWasLoadedDelegate">
            <summary>设置 ADBannerView.remove_onBannerWasLoaded(BannerWasLoadedDelegate value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.positionGet">
            <summary>设置 ADBannerView.get_position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.positionSetVector2">
            <summary>设置 ADBannerView.set_position(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.sizeGet">
            <summary>设置 ADBannerView.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.visibleGet">
            <summary>设置 ADBannerView.get_visible() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADBannerView.visibleSetBoolean">
            <summary>设置 ADBannerView.set_visible(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimADInterstitialAd">
            <summary>UnityEngine.ADInterstitialAd 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimADInterstitialAd.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimADInterstitialAd.#ctor(UnityEngine.ADInterstitialAd)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimADInterstitialAd.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.AllInstances.CtorImplBoolean">
            <summary>设置 ADInterstitialAd.CtorImpl(Boolean autoReload) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.AllInstances.ReloadAd">
            <summary>设置 ADInterstitialAd.ReloadAd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.AllInstances.Show">
            <summary>设置 ADInterstitialAd.Show() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.AllInstances.loadedGet">
            <summary>设置 ADInterstitialAd.get_loaded() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimADInterstitialAd.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimADInterstitialAd.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.Constructor">
            <summary>设置 ADInterstitialAd.ADInterstitialAd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.ConstructorBoolean">
            <summary>设置 ADInterstitialAd.ADInterstitialAd(Boolean autoReload) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.CtorImplBoolean">
            <summary>设置 ADInterstitialAd.CtorImpl(Boolean autoReload) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.FireInterstitialWasLoaded">
            <summary>设置 ADInterstitialAd.FireInterstitialWasLoaded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.ReloadAd">
            <summary>设置 ADInterstitialAd.ReloadAd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.Show">
            <summary>设置 ADInterstitialAd.Show() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.StaticConstructor">
            <summary>设置 ADInterstitialAd.ADInterstitialAd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.isAvailableGet">
            <summary>设置 ADInterstitialAd.get_isAvailable() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.loadedGet">
            <summary>设置 ADInterstitialAd.get_loaded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.onInterstitialWasLoadedAddADInterstitialAdInterstitialWasLoadedDelegate">
            <summary>设置 ADInterstitialAd.add_onInterstitialWasLoaded(InterstitialWasLoadedDelegate value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimADInterstitialAd.onInterstitialWasLoadedRemoveADInterstitialAdInterstitialWasLoadedDelegate">
            <summary>设置 ADInterstitialAd.remove_onInterstitialWasLoaded(InterstitialWasLoadedDelegate value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAccelerationEvent">
            <summary>UnityEngine.AccelerationEvent 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAccelerationEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAccelerationEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAccelerationEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAccelerationEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAccelerationEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAddComponentMenu">
            <summary>UnityEngine.AddComponentMenu 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAddComponentMenu.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAddComponentMenu.#ctor(UnityEngine.AddComponentMenu)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAddComponentMenu.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAddComponentMenu.AllInstances.componentMenuGet">
            <summary>设置 AddComponentMenu.get_componentMenu() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAddComponentMenu.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAddComponentMenu.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAddComponentMenu.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAddComponentMenu.ConstructorString">
            <summary>设置 AddComponentMenu.AddComponentMenu(String menuName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAddComponentMenu.componentMenuGet">
            <summary>设置 AddComponentMenu.get_componentMenu() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidInput">
            <summary>UnityEngine.AndroidInput 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidInput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidInput.#ctor(UnityEngine.AndroidInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidInput.Constructor">
            <summary>设置 AndroidInput.AndroidInput() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJNI">
            <summary>UnityEngine.AndroidJNI 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNI.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNI.#ctor(UnityEngine.AndroidJNI)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJNI.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNI.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNI.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNI.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNI.Constructor">
            <summary>设置 AndroidJNI.AndroidJNI() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJNIHelper">
            <summary>UnityEngine.AndroidJNIHelper 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNIHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNIHelper.#ctor(UnityEngine.AndroidJNIHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJNIHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNIHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNIHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.Constructor">
            <summary>设置 AndroidJNIHelper.AndroidJNIHelper() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNIHelper.ConvertFromJNIArrayOf1IntPtr``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,``0})">
            <summary>设置 AndroidJNIHelper.ConvertFromJNIArray(IntPtr array) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.ConvertToJNIArrayArray">
            <summary>设置 AndroidJNIHelper.ConvertToJNIArray(Array array) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.CreateJNIArgArrayObjectArray">
            <summary>设置 AndroidJNIHelper.CreateJNIArgArray(Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.CreateJavaRunnableAndroidJavaRunnable">
            <summary>设置 AndroidJNIHelper.CreateJavaRunnable(AndroidJavaRunnable jrunnable) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.DeleteJNIArgArrayObjectArrayjvalueArray">
            <summary>设置 AndroidJNIHelper.DeleteJNIArgArray(Object[] args, jvalue[] jniArgs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetConstructorIDIntPtr">
            <summary>设置 AndroidJNIHelper.GetConstructorID(IntPtr javaClass) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetConstructorIDIntPtrObjectArray">
            <summary>设置 AndroidJNIHelper.GetConstructorID(IntPtr jclass, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetConstructorIDIntPtrString">
            <summary>设置 AndroidJNIHelper.GetConstructorID(IntPtr javaClass, String signature) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetFieldIDIntPtrString">
            <summary>设置 AndroidJNIHelper.GetFieldID(IntPtr javaClass, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetFieldIDIntPtrStringString">
            <summary>设置 AndroidJNIHelper.GetFieldID(IntPtr javaClass, String fieldName, String signature) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetFieldIDIntPtrStringStringBoolean">
            <summary>设置 AndroidJNIHelper.GetFieldID(IntPtr javaClass, String fieldName, String signature, Boolean isStatic) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNIHelper.GetFieldIDOf1IntPtrStringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,System.String,System.Boolean,System.IntPtr})">
            <summary>设置 AndroidJNIHelper.GetFieldID(IntPtr jclass, String fieldName, Boolean isStatic) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetMethodIDIntPtrString">
            <summary>设置 AndroidJNIHelper.GetMethodID(IntPtr javaClass, String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetMethodIDIntPtrStringObjectArrayBoolean">
            <summary>设置 AndroidJNIHelper.GetMethodID(IntPtr jclass, String methodName, Object[] args, Boolean isStatic) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetMethodIDIntPtrStringString">
            <summary>设置 AndroidJNIHelper.GetMethodID(IntPtr javaClass, String methodName, String signature) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetMethodIDIntPtrStringStringBoolean">
            <summary>设置 AndroidJNIHelper.GetMethodID(IntPtr javaClass, String methodName, String signature, Boolean isStatic) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNIHelper.GetMethodIDOf1IntPtrStringObjectArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,System.String,System.Object[],System.Boolean,System.IntPtr})">
            <summary>设置 AndroidJNIHelper.GetMethodID(IntPtr jclass, String methodName, Object[] args, Boolean isStatic) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetSignatureObject">
            <summary>设置 AndroidJNIHelper.GetSignature(Object obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJNIHelper.GetSignatureObjectArray">
            <summary>设置 AndroidJNIHelper.GetSignature(Object[] args) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJNIHelper.GetSignatureOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.String})">
            <summary>设置 AndroidJNIHelper.GetSignature(Object[] args) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJavaClass">
            <summary>UnityEngine.AndroidJavaClass 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaClass.#ctor(UnityEngine.AndroidJavaClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJavaClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaClass.AllInstances._AndroidJavaClassString">
            <summary>设置 AndroidJavaClass._AndroidJavaClass(String className) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaClass.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaClass.ConstructorIntPtr">
            <summary>设置 AndroidJavaClass.AndroidJavaClass(IntPtr jclass) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaClass.ConstructorString">
            <summary>设置 AndroidJavaClass.AndroidJavaClass(String className) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaClass._AndroidJavaClassString">
            <summary>设置 AndroidJavaClass._AndroidJavaClass(String className) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJavaException">
            <summary>UnityEngine.AndroidJavaException 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaException.#ctor(UnityEngine.AndroidJavaException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJavaException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaException.ConstructorString">
            <summary>设置 AndroidJavaException.AndroidJavaException(String message) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJavaObject">
            <summary>UnityEngine.AndroidJavaObject 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.#ctor(UnityEngine.AndroidJavaObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.CallOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.AndroidJavaObject,System.String,System.Object[],``0})">
            <summary>设置 AndroidJavaObject.Call(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.CallStaticOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.AndroidJavaObject,System.String,System.Object[],``0})">
            <summary>设置 AndroidJavaObject.CallStatic(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.CallStaticStringObjectArray">
            <summary>设置 AndroidJavaObject.CallStatic(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.CallStringObjectArray">
            <summary>设置 AndroidJavaObject.Call(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.DebugPrintString">
            <summary>设置 AndroidJavaObject.DebugPrint(String msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.DebugPrintStringStringStringObjectArray">
            <summary>设置 AndroidJavaObject.DebugPrint(String call, String methodName, String signature, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.Dispose">
            <summary>设置 AndroidJavaObject.Dispose() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.DisposeBoolean">
            <summary>设置 AndroidJavaObject.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.AndroidJavaObject,System.String,``0})">
            <summary>设置 AndroidJavaObject.Get(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.GetRawClass">
            <summary>设置 AndroidJavaObject.GetRawClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.GetRawObject">
            <summary>设置 AndroidJavaObject.GetRawObject() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.GetStaticOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.AndroidJavaObject,System.String,``0})">
            <summary>设置 AndroidJavaObject.GetStatic(String fieldName) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.SetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.AndroidJavaObject,System.String,``0})">
            <summary>设置 AndroidJavaObject.Set(String fieldName, !!0 val) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances.SetStaticOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.AndroidJavaObject,System.String,``0})">
            <summary>设置 AndroidJavaObject.SetStatic(String fieldName, !!0 val) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._AndroidJavaObjectStringObjectArray">
            <summary>设置 AndroidJavaObject._AndroidJavaObject(String className, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._CallOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.AndroidJavaObject,System.String,System.Object[],``0})">
            <summary>设置 AndroidJavaObject._Call(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._CallStaticOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.AndroidJavaObject,System.String,System.Object[],``0})">
            <summary>设置 AndroidJavaObject._CallStatic(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._CallStaticStringObjectArray">
            <summary>设置 AndroidJavaObject._CallStatic(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._CallStringObjectArray">
            <summary>设置 AndroidJavaObject._Call(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._Dispose">
            <summary>设置 AndroidJavaObject._Dispose() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.AndroidJavaObject,System.String,``0})">
            <summary>设置 AndroidJavaObject._Get(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._GetRawClass">
            <summary>设置 AndroidJavaObject._GetRawClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._GetRawObject">
            <summary>设置 AndroidJavaObject._GetRawObject() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._GetStaticOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.AndroidJavaObject,System.String,``0})">
            <summary>设置 AndroidJavaObject._GetStatic(String fieldName) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._SetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.AndroidJavaObject,System.String,``0})">
            <summary>设置 AndroidJavaObject._Set(String fieldName, !!0 val) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.AllInstances._SetStaticOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.AndroidJavaObject,System.String,``0})">
            <summary>设置 AndroidJavaObject._SetStatic(String fieldName, !!0 val) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AndroidJavaClassDeleteLocalRefIntPtr">
            <summary>设置 AndroidJavaObject.AndroidJavaClassDeleteLocalRef(IntPtr jclass) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.AndroidJavaObjectDeleteLocalRefIntPtr">
            <summary>设置 AndroidJavaObject.AndroidJavaObjectDeleteLocalRef(IntPtr jobject) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.CallOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>设置 AndroidJavaObject.Call(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.CallStaticOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>设置 AndroidJavaObject.CallStatic(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.CallStaticStringObjectArray">
            <summary>设置 AndroidJavaObject.CallStatic(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.CallStringObjectArray">
            <summary>设置 AndroidJavaObject.Call(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.Constructor">
            <summary>设置 AndroidJavaObject.AndroidJavaObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.ConstructorIntPtr">
            <summary>设置 AndroidJavaObject.AndroidJavaObject(IntPtr jobject) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.ConstructorStringObjectArray">
            <summary>设置 AndroidJavaObject.AndroidJavaObject(String className, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.DebugPrintString">
            <summary>设置 AndroidJavaObject.DebugPrint(String msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.DebugPrintStringStringStringObjectArray">
            <summary>设置 AndroidJavaObject.DebugPrint(String call, String methodName, String signature, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.Dispose">
            <summary>设置 AndroidJavaObject.Dispose() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.DisposeBoolean">
            <summary>设置 AndroidJavaObject.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.FindClassString">
            <summary>设置 AndroidJavaObject.FindClass(String name) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 AndroidJavaObject.Get(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.GetRawClass">
            <summary>设置 AndroidJavaObject.GetRawClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.GetRawObject">
            <summary>设置 AndroidJavaObject.GetRawObject() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.GetStaticOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 AndroidJavaObject.GetStatic(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.JavaLangClassGet">
            <summary>设置 AndroidJavaObject.get_JavaLangClass() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.SetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 AndroidJavaObject.Set(String fieldName, !!0 val) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject.SetStaticOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 AndroidJavaObject.SetStatic(String fieldName, !!0 val) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject.StaticConstructor">
            <summary>设置 AndroidJavaObject.AndroidJavaObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject._AndroidJavaObjectStringObjectArray">
            <summary>设置 AndroidJavaObject._AndroidJavaObject(String className, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject._CallOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>设置 AndroidJavaObject._Call(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject._CallStaticOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>设置 AndroidJavaObject._CallStatic(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject._CallStaticStringObjectArray">
            <summary>设置 AndroidJavaObject._CallStatic(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject._CallStringObjectArray">
            <summary>设置 AndroidJavaObject._Call(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject._Dispose">
            <summary>设置 AndroidJavaObject._Dispose() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject._GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 AndroidJavaObject._Get(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject._GetRawClass">
            <summary>设置 AndroidJavaObject._GetRawClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaObject._GetRawObject">
            <summary>设置 AndroidJavaObject._GetRawObject() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject._GetStaticOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 AndroidJavaObject._GetStatic(String fieldName) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject._SetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 AndroidJavaObject._Set(String fieldName, !!0 val) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaObject._SetStaticOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 AndroidJavaObject._SetStatic(String fieldName, !!0 val) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJavaProxy">
            <summary>UnityEngine.AndroidJavaProxy 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaProxy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaProxy.#ctor(UnityEngine.AndroidJavaProxy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAndroidJavaProxy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaProxy.AllInstances.InvokeStringAndroidJavaObjectArray">
            <summary>设置 AndroidJavaProxy.Invoke(String methodName, AndroidJavaObject[] javaArgs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaProxy.AllInstances.InvokeStringObjectArray">
            <summary>设置 AndroidJavaProxy.Invoke(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaProxy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAndroidJavaProxy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaProxy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaProxy.ConstructorAndroidJavaClass">
            <summary>设置 AndroidJavaProxy.AndroidJavaProxy(AndroidJavaClass javaInterface) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaProxy.ConstructorString">
            <summary>设置 AndroidJavaProxy.AndroidJavaProxy(String javaInterface) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaProxy.InvokeStringAndroidJavaObjectArray">
            <summary>设置 AndroidJavaProxy.Invoke(String methodName, AndroidJavaObject[] javaArgs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAndroidJavaProxy.InvokeStringObjectArray">
            <summary>设置 AndroidJavaProxy.Invoke(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimation">
            <summary>UnityEngine.Animation 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimation.#ctor(UnityEngine.Animation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AddClipAnimationClipString">
            <summary>设置 Animation.AddClip(AnimationClip clip, String newName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AddClipAnimationClipStringInt32Int32">
            <summary>设置 Animation.AddClip(AnimationClip clip, String newName, Int32 firstFrame, Int32 lastFrame) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.AddClipAnimationClipString">
            <summary>设置 Animation.AddClip(AnimationClip clip, String newName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.AddClipAnimationClipStringInt32Int32">
            <summary>设置 Animation.AddClip(AnimationClip clip, String newName, Int32 firstFrame, Int32 lastFrame) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.BlendString">
            <summary>设置 Animation.Blend(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.BlendStringSingle">
            <summary>设置 Animation.Blend(String animation, Single targetWeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.CrossFadeQueuedString">
            <summary>设置 Animation.CrossFadeQueued(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.CrossFadeQueuedStringSingle">
            <summary>设置 Animation.CrossFadeQueued(String animation, Single fadeLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.CrossFadeQueuedStringSingleQueueMode">
            <summary>设置 Animation.CrossFadeQueued(String animation, Single fadeLength, QueueMode queue) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.CrossFadeString">
            <summary>设置 Animation.CrossFade(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.CrossFadeStringSingle">
            <summary>设置 Animation.CrossFade(String animation, Single fadeLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.GetClipString">
            <summary>设置 Animation.GetClip(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.GetEnumerator">
            <summary>设置 Animation.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.ItemGetString">
            <summary>设置 Animation.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.Play">
            <summary>设置 Animation.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.PlayAnimationPlayMode">
            <summary>设置 Animation.Play(AnimationPlayMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.PlayPlayMode">
            <summary>设置 Animation.Play(PlayMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.PlayQueuedString">
            <summary>设置 Animation.PlayQueued(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.PlayQueuedStringQueueMode">
            <summary>设置 Animation.PlayQueued(String animation, QueueMode queue) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.PlayString">
            <summary>设置 Animation.Play(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.PlayStringAnimationPlayMode">
            <summary>设置 Animation.Play(String animation, AnimationPlayMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.RemoveClipString">
            <summary>设置 Animation.RemoveClip(String clipName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.Rewind">
            <summary>设置 Animation.Rewind() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.RewindString">
            <summary>设置 Animation.Rewind(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.Sample">
            <summary>设置 Animation.Sample() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.Stop">
            <summary>设置 Animation.Stop() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.StopString">
            <summary>设置 Animation.Stop(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.SyncLayerInt32">
            <summary>设置 Animation.SyncLayer(Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.localBoundsGet">
            <summary>设置 Animation.get_localBounds() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.AllInstances.localBoundsSetBounds">
            <summary>设置 Animation.set_localBounds(Bounds value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimation.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.BlendString">
            <summary>设置 Animation.Blend(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.BlendStringSingle">
            <summary>设置 Animation.Blend(String animation, Single targetWeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.Constructor">
            <summary>设置 Animation.Animation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.CrossFadeQueuedString">
            <summary>设置 Animation.CrossFadeQueued(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.CrossFadeQueuedStringSingle">
            <summary>设置 Animation.CrossFadeQueued(String animation, Single fadeLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.CrossFadeQueuedStringSingleQueueMode">
            <summary>设置 Animation.CrossFadeQueued(String animation, Single fadeLength, QueueMode queue) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.CrossFadeString">
            <summary>设置 Animation.CrossFade(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.CrossFadeStringSingle">
            <summary>设置 Animation.CrossFade(String animation, Single fadeLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.GetClipString">
            <summary>设置 Animation.GetClip(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.GetEnumerator">
            <summary>设置 Animation.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.ItemGetString">
            <summary>设置 Animation.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.Play">
            <summary>设置 Animation.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.PlayAnimationPlayMode">
            <summary>设置 Animation.Play(AnimationPlayMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.PlayPlayMode">
            <summary>设置 Animation.Play(PlayMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.PlayQueuedString">
            <summary>设置 Animation.PlayQueued(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.PlayQueuedStringQueueMode">
            <summary>设置 Animation.PlayQueued(String animation, QueueMode queue) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.PlayString">
            <summary>设置 Animation.Play(String animation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.PlayStringAnimationPlayMode">
            <summary>设置 Animation.Play(String animation, AnimationPlayMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.RemoveClipString">
            <summary>设置 Animation.RemoveClip(String clipName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.Rewind">
            <summary>设置 Animation.Rewind() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.RewindString">
            <summary>设置 Animation.Rewind(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.Sample">
            <summary>设置 Animation.Sample() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.Stop">
            <summary>设置 Animation.Stop() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.StopString">
            <summary>设置 Animation.Stop(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.SyncLayerInt32">
            <summary>设置 Animation.SyncLayer(Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.localBoundsGet">
            <summary>设置 Animation.get_localBounds() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimation.localBoundsSetBounds">
            <summary>设置 Animation.set_localBounds(Bounds value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationClip">
            <summary>UnityEngine.AnimationClip 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationClip.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationClip.#ctor(UnityEngine.AnimationClip)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationClip.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.AllInstances.ClearCurves">
            <summary>设置 AnimationClip.ClearCurves() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.AllInstances.EnsureQuaternionContinuity">
            <summary>设置 AnimationClip.EnsureQuaternionContinuity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.AllInstances.localBoundsGet">
            <summary>设置 AnimationClip.get_localBounds() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.AllInstances.localBoundsSetBounds">
            <summary>设置 AnimationClip.set_localBounds(Bounds value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationClip.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationClip.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.ClearCurves">
            <summary>设置 AnimationClip.ClearCurves() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.Constructor">
            <summary>设置 AnimationClip.AnimationClip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.EnsureQuaternionContinuity">
            <summary>设置 AnimationClip.EnsureQuaternionContinuity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.localBoundsGet">
            <summary>设置 AnimationClip.get_localBounds() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClip.localBoundsSetBounds">
            <summary>设置 AnimationClip.set_localBounds(Bounds value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationClipPair">
            <summary>UnityEngine.AnimationClipPair 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationClipPair.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationClipPair.#ctor(UnityEngine.AnimationClipPair)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationClipPair.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationClipPair.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationClipPair.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClipPair.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationClipPair.Constructor">
            <summary>设置 AnimationClipPair.AnimationClipPair() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationCurve">
            <summary>UnityEngine.AnimationCurve 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationCurve.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationCurve.#ctor(UnityEngine.AnimationCurve)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.AddKeyKeyframe">
            <summary>设置 AnimationCurve.AddKey(Keyframe key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.AddKey_InternalKeyframe">
            <summary>设置 AnimationCurve.AddKey_Internal(Keyframe key) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationCurve.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.AllInstances.AddKeyKeyframe">
            <summary>设置 AnimationCurve.AddKey(Keyframe key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.AllInstances.AddKey_InternalKeyframe">
            <summary>设置 AnimationCurve.AddKey_Internal(Keyframe key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.AllInstances.ItemGetInt32">
            <summary>设置 AnimationCurve.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.AllInstances.MoveKeyInt32Keyframe">
            <summary>设置 AnimationCurve.MoveKey(Int32 index, Keyframe key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.AllInstances.keysGet">
            <summary>设置 AnimationCurve.get_keys() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.AllInstances.keysSetKeyframeArray">
            <summary>设置 AnimationCurve.set_keys(Keyframe[] value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationCurve.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationCurve.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.Constructor">
            <summary>设置 AnimationCurve.AnimationCurve() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.ConstructorKeyframeArray">
            <summary>设置 AnimationCurve.AnimationCurve(Keyframe[] keys) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.EaseInOutSingleSingleSingleSingle">
            <summary>设置 AnimationCurve.EaseInOut(Single timeStart, Single valueStart, Single timeEnd, Single valueEnd) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.ItemGetInt32">
            <summary>设置 AnimationCurve.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.LinearSingleSingleSingleSingle">
            <summary>设置 AnimationCurve.Linear(Single timeStart, Single valueStart, Single timeEnd, Single valueEnd) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.MoveKeyInt32Keyframe">
            <summary>设置 AnimationCurve.MoveKey(Int32 index, Keyframe key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.keysGet">
            <summary>设置 AnimationCurve.get_keys() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationCurve.keysSetKeyframeArray">
            <summary>设置 AnimationCurve.set_keys(Keyframe[] value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationEvent">
            <summary>UnityEngine.AnimationEvent 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationEvent.#ctor(UnityEngine.AnimationEvent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationEvent.Constructor">
            <summary>设置 AnimationEvent.AnimationEvent() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationInfo">
            <summary>UnityEngine.AnimationInfo 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationState">
            <summary>UnityEngine.AnimationState 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationState.#ctor(UnityEngine.AnimationState)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationState.AddMixingTransformTransform">
            <summary>设置 AnimationState.AddMixingTransform(Transform mix) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimationState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationState.AllInstances.AddMixingTransformTransform">
            <summary>设置 AnimationState.AddMixingTransform(Transform mix) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimationState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimationState.Constructor">
            <summary>设置 AnimationState.AnimationState() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimator">
            <summary>UnityEngine.Animator 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimator.#ctor(UnityEngine.Animator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.CrossFadeInt32Single">
            <summary>设置 Animator.CrossFade(Int32 stateNameHash, Single transitionDuration) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.CrossFadeInt32SingleInt32">
            <summary>设置 Animator.CrossFade(Int32 stateNameHash, Single transitionDuration, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.CrossFadeStringSingle">
            <summary>设置 Animator.CrossFade(String stateName, Single transitionDuration) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.CrossFadeStringSingleInt32">
            <summary>设置 Animator.CrossFade(String stateName, Single transitionDuration, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.CrossFadeStringSingleInt32Single">
            <summary>设置 Animator.CrossFade(String stateName, Single transitionDuration, Int32 layer, Single normalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.ForceStateNormalizedTimeSingle">
            <summary>设置 Animator.ForceStateNormalizedTime(Single normalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetBoolInt32">
            <summary>设置 Animator.GetBool(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetBoolString">
            <summary>设置 Animator.GetBool(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetFloatInt32">
            <summary>设置 Animator.GetFloat(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetFloatString">
            <summary>设置 Animator.GetFloat(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetIntegerInt32">
            <summary>设置 Animator.GetInteger(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetIntegerString">
            <summary>设置 Animator.GetInteger(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetQuaternionInt32">
            <summary>设置 Animator.GetQuaternion(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetQuaternionString">
            <summary>设置 Animator.GetQuaternion(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetVectorInt32">
            <summary>设置 Animator.GetVector(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.GetVectorString">
            <summary>设置 Animator.GetVector(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.InterruptMatchTarget">
            <summary>设置 Animator.InterruptMatchTarget() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.IsParameterControlledByCurveInt32">
            <summary>设置 Animator.IsParameterControlledByCurve(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.IsParameterControlledByCurveString">
            <summary>设置 Animator.IsParameterControlledByCurve(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.MatchTargetVector3QuaternionAvatarTargetMatchTargetWeightMaskSingle">
            <summary>设置 Animator.MatchTarget(Vector3 matchPosition, Quaternion matchRotation, AvatarTarget targetBodyPart, MatchTargetWeightMask weightMask, Single startNormalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.MatchTargetVector3QuaternionAvatarTargetMatchTargetWeightMaskSingleSingle">
            <summary>设置 Animator.MatchTarget(Vector3 matchPosition, Quaternion matchRotation, AvatarTarget targetBodyPart, MatchTargetWeightMask weightMask, Single startNormalizedTime, Single targetNormalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.PlayInt32">
            <summary>设置 Animator.Play(Int32 stateNameHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.PlayInt32Int32">
            <summary>设置 Animator.Play(Int32 stateNameHash, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.PlayString">
            <summary>设置 Animator.Play(String stateName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.PlayStringInt32">
            <summary>设置 Animator.Play(String stateName, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.PlayStringInt32Single">
            <summary>设置 Animator.Play(String stateName, Int32 layer, Single normalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.ResetTriggerInt32">
            <summary>设置 Animator.ResetTrigger(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.ResetTriggerString">
            <summary>设置 Animator.ResetTrigger(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetBoolInt32Boolean">
            <summary>设置 Animator.SetBool(Int32 id, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetBoolStringBoolean">
            <summary>设置 Animator.SetBool(String name, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetFloatInt32Single">
            <summary>设置 Animator.SetFloat(Int32 id, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetFloatInt32SingleSingleSingle">
            <summary>设置 Animator.SetFloat(Int32 id, Single value, Single dampTime, Single deltaTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetFloatStringSingle">
            <summary>设置 Animator.SetFloat(String name, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetFloatStringSingleSingleSingle">
            <summary>设置 Animator.SetFloat(String name, Single value, Single dampTime, Single deltaTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetIKPositionAvatarIKGoalVector3">
            <summary>设置 Animator.SetIKPosition(AvatarIKGoal goal, Vector3 goalPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetIKRotationAvatarIKGoalQuaternion">
            <summary>设置 Animator.SetIKRotation(AvatarIKGoal goal, Quaternion goalRotation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetIntegerInt32Int32">
            <summary>设置 Animator.SetInteger(Int32 id, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetIntegerStringInt32">
            <summary>设置 Animator.SetInteger(String name, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetLookAtPositionVector3">
            <summary>设置 Animator.SetLookAtPosition(Vector3 lookAtPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetLookAtWeightSingle">
            <summary>设置 Animator.SetLookAtWeight(Single weight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetLookAtWeightSingleSingle">
            <summary>设置 Animator.SetLookAtWeight(Single weight, Single bodyWeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetLookAtWeightSingleSingleSingle">
            <summary>设置 Animator.SetLookAtWeight(Single weight, Single bodyWeight, Single headWeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetLookAtWeightSingleSingleSingleSingle">
            <summary>设置 Animator.SetLookAtWeight(Single weight, Single bodyWeight, Single headWeight, Single eyesWeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetQuaternionInt32Quaternion">
            <summary>设置 Animator.SetQuaternion(Int32 id, Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetQuaternionStringQuaternion">
            <summary>设置 Animator.SetQuaternion(String name, Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetTriggerInt32">
            <summary>设置 Animator.SetTrigger(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetTriggerString">
            <summary>设置 Animator.SetTrigger(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetVectorInt32Vector3">
            <summary>设置 Animator.SetVector(Int32 id, Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.SetVectorStringVector3">
            <summary>设置 Animator.SetVector(String name, Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.bodyPositionGet">
            <summary>设置 Animator.get_bodyPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.bodyPositionSetVector3">
            <summary>设置 Animator.set_bodyPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.bodyRotationGet">
            <summary>设置 Animator.get_bodyRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.bodyRotationSetQuaternion">
            <summary>设置 Animator.set_bodyRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.rootPositionGet">
            <summary>设置 Animator.get_rootPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.rootPositionSetVector3">
            <summary>设置 Animator.set_rootPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.rootRotationGet">
            <summary>设置 Animator.get_rootRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.AllInstances.rootRotationSetQuaternion">
            <summary>设置 Animator.set_rootRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.Constructor">
            <summary>设置 Animator.Animator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.CrossFadeInt32Single">
            <summary>设置 Animator.CrossFade(Int32 stateNameHash, Single transitionDuration) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.CrossFadeInt32SingleInt32">
            <summary>设置 Animator.CrossFade(Int32 stateNameHash, Single transitionDuration, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.CrossFadeStringSingle">
            <summary>设置 Animator.CrossFade(String stateName, Single transitionDuration) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.CrossFadeStringSingleInt32">
            <summary>设置 Animator.CrossFade(String stateName, Single transitionDuration, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.CrossFadeStringSingleInt32Single">
            <summary>设置 Animator.CrossFade(String stateName, Single transitionDuration, Int32 layer, Single normalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.ForceStateNormalizedTimeSingle">
            <summary>设置 Animator.ForceStateNormalizedTime(Single normalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetBoolInt32">
            <summary>设置 Animator.GetBool(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetBoolString">
            <summary>设置 Animator.GetBool(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetFloatInt32">
            <summary>设置 Animator.GetFloat(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetFloatString">
            <summary>设置 Animator.GetFloat(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetIntegerInt32">
            <summary>设置 Animator.GetInteger(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetIntegerString">
            <summary>设置 Animator.GetInteger(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetQuaternionInt32">
            <summary>设置 Animator.GetQuaternion(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetQuaternionString">
            <summary>设置 Animator.GetQuaternion(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetVectorInt32">
            <summary>设置 Animator.GetVector(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.GetVectorString">
            <summary>设置 Animator.GetVector(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.InterruptMatchTarget">
            <summary>设置 Animator.InterruptMatchTarget() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.IsParameterControlledByCurveInt32">
            <summary>设置 Animator.IsParameterControlledByCurve(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.IsParameterControlledByCurveString">
            <summary>设置 Animator.IsParameterControlledByCurve(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.MatchTargetVector3QuaternionAvatarTargetMatchTargetWeightMaskSingle">
            <summary>设置 Animator.MatchTarget(Vector3 matchPosition, Quaternion matchRotation, AvatarTarget targetBodyPart, MatchTargetWeightMask weightMask, Single startNormalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.MatchTargetVector3QuaternionAvatarTargetMatchTargetWeightMaskSingleSingle">
            <summary>设置 Animator.MatchTarget(Vector3 matchPosition, Quaternion matchRotation, AvatarTarget targetBodyPart, MatchTargetWeightMask weightMask, Single startNormalizedTime, Single targetNormalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.PlayInt32">
            <summary>设置 Animator.Play(Int32 stateNameHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.PlayInt32Int32">
            <summary>设置 Animator.Play(Int32 stateNameHash, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.PlayString">
            <summary>设置 Animator.Play(String stateName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.PlayStringInt32">
            <summary>设置 Animator.Play(String stateName, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.PlayStringInt32Single">
            <summary>设置 Animator.Play(String stateName, Int32 layer, Single normalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.ResetTriggerInt32">
            <summary>设置 Animator.ResetTrigger(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.ResetTriggerString">
            <summary>设置 Animator.ResetTrigger(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetBoolInt32Boolean">
            <summary>设置 Animator.SetBool(Int32 id, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetBoolStringBoolean">
            <summary>设置 Animator.SetBool(String name, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetFloatInt32Single">
            <summary>设置 Animator.SetFloat(Int32 id, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetFloatInt32SingleSingleSingle">
            <summary>设置 Animator.SetFloat(Int32 id, Single value, Single dampTime, Single deltaTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetFloatStringSingle">
            <summary>设置 Animator.SetFloat(String name, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetFloatStringSingleSingleSingle">
            <summary>设置 Animator.SetFloat(String name, Single value, Single dampTime, Single deltaTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetIKPositionAvatarIKGoalVector3">
            <summary>设置 Animator.SetIKPosition(AvatarIKGoal goal, Vector3 goalPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetIKRotationAvatarIKGoalQuaternion">
            <summary>设置 Animator.SetIKRotation(AvatarIKGoal goal, Quaternion goalRotation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetIntegerInt32Int32">
            <summary>设置 Animator.SetInteger(Int32 id, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetIntegerStringInt32">
            <summary>设置 Animator.SetInteger(String name, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetLookAtPositionVector3">
            <summary>设置 Animator.SetLookAtPosition(Vector3 lookAtPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetLookAtWeightSingle">
            <summary>设置 Animator.SetLookAtWeight(Single weight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetLookAtWeightSingleSingle">
            <summary>设置 Animator.SetLookAtWeight(Single weight, Single bodyWeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetLookAtWeightSingleSingleSingle">
            <summary>设置 Animator.SetLookAtWeight(Single weight, Single bodyWeight, Single headWeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetLookAtWeightSingleSingleSingleSingle">
            <summary>设置 Animator.SetLookAtWeight(Single weight, Single bodyWeight, Single headWeight, Single eyesWeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetQuaternionInt32Quaternion">
            <summary>设置 Animator.SetQuaternion(Int32 id, Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetQuaternionStringQuaternion">
            <summary>设置 Animator.SetQuaternion(String name, Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetTriggerInt32">
            <summary>设置 Animator.SetTrigger(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetTriggerString">
            <summary>设置 Animator.SetTrigger(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetVectorInt32Vector3">
            <summary>设置 Animator.SetVector(Int32 id, Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.SetVectorStringVector3">
            <summary>设置 Animator.SetVector(String name, Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.bodyPositionGet">
            <summary>设置 Animator.get_bodyPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.bodyPositionSetVector3">
            <summary>设置 Animator.set_bodyPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.bodyRotationGet">
            <summary>设置 Animator.get_bodyRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.bodyRotationSetQuaternion">
            <summary>设置 Animator.set_bodyRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.rootPositionGet">
            <summary>设置 Animator.get_rootPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.rootPositionSetVector3">
            <summary>设置 Animator.set_rootPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.rootRotationGet">
            <summary>设置 Animator.get_rootRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimator.rootRotationSetQuaternion">
            <summary>设置 Animator.set_rootRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimatorOverrideController">
            <summary>UnityEngine.AnimatorOverrideController 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorOverrideController.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorOverrideController.#ctor(UnityEngine.AnimatorOverrideController)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimatorOverrideController.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.AllInstances.ItemGetAnimationClip">
            <summary>设置 AnimatorOverrideController.get_Item(AnimationClip clip) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.AllInstances.ItemGetString">
            <summary>设置 AnimatorOverrideController.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.AllInstances.ItemSetAnimationClipAnimationClip">
            <summary>设置 AnimatorOverrideController.set_Item(AnimationClip clip, AnimationClip value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.AllInstances.ItemSetStringAnimationClip">
            <summary>设置 AnimatorOverrideController.set_Item(String name, AnimationClip value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.AllInstances.clipsGet">
            <summary>设置 AnimatorOverrideController.get_clips() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.AllInstances.clipsSetAnimationClipPairArray">
            <summary>设置 AnimatorOverrideController.set_clips(AnimationClipPair[] value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorOverrideController.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorOverrideController.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.Constructor">
            <summary>设置 AnimatorOverrideController.AnimatorOverrideController() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.ItemGetAnimationClip">
            <summary>设置 AnimatorOverrideController.get_Item(AnimationClip clip) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.ItemGetString">
            <summary>设置 AnimatorOverrideController.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.ItemSetAnimationClipAnimationClip">
            <summary>设置 AnimatorOverrideController.set_Item(AnimationClip clip, AnimationClip value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.ItemSetStringAnimationClip">
            <summary>设置 AnimatorOverrideController.set_Item(String name, AnimationClip value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.OnInvalidateOverrideControllerAnimatorOverrideController">
            <summary>设置 AnimatorOverrideController.OnInvalidateOverrideController(AnimatorOverrideController controller) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.clipsGet">
            <summary>设置 AnimatorOverrideController.get_clips() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorOverrideController.clipsSetAnimationClipPairArray">
            <summary>设置 AnimatorOverrideController.set_clips(AnimationClipPair[] value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimatorStateInfo">
            <summary>UnityEngine.AnimatorStateInfo 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorStateInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimatorStateInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorStateInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorStateInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorStateInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimatorTransitionInfo">
            <summary>UnityEngine.AnimatorTransitionInfo 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorTransitionInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAnimatorTransitionInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorTransitionInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAnimatorTransitionInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAnimatorTransitionInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimApplication">
            <summary>UnityEngine.Application 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimApplication.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimApplication.#ctor(UnityEngine.Application)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimApplication.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimApplication.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimApplication.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.BuildInvocationForArgumentsStringObjectArray">
            <summary>设置 Application.BuildInvocationForArguments(String functionName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.CallLogCallbackStringStringLogType">
            <summary>设置 Application.CallLogCallback(String logString, String stackTrace, LogType type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.CanStreamedLevelBeLoadedString">
            <summary>设置 Application.CanStreamedLevelBeLoaded(String levelName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.CaptureScreenshotString">
            <summary>设置 Application.CaptureScreenshot(String filename) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.Constructor">
            <summary>设置 Application.Application() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.ExternalCallStringObjectArray">
            <summary>设置 Application.ExternalCall(String functionName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.ExternalEvalString">
            <summary>设置 Application.ExternalEval(String script) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.GetStreamProgressForLevelString">
            <summary>设置 Application.GetStreamProgressForLevel(String levelName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.GetUserAuthorizationRequestMode">
            <summary>设置 Application.GetUserAuthorizationRequestMode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.LoadLevelAdditiveAsyncInt32">
            <summary>设置 Application.LoadLevelAdditiveAsync(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.LoadLevelAdditiveAsyncString">
            <summary>设置 Application.LoadLevelAdditiveAsync(String levelName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.LoadLevelAdditiveInt32">
            <summary>设置 Application.LoadLevelAdditive(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.LoadLevelAdditiveString">
            <summary>设置 Application.LoadLevelAdditive(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.LoadLevelAsyncInt32">
            <summary>设置 Application.LoadLevelAsync(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.LoadLevelAsyncString">
            <summary>设置 Application.LoadLevelAsync(String levelName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.LoadLevelInt32">
            <summary>设置 Application.LoadLevel(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.LoadLevelString">
            <summary>设置 Application.LoadLevel(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.ObjectToJSStringObject">
            <summary>设置 Application.ObjectToJSString(Object o) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.RegisterLogCallbackApplicationLogCallback">
            <summary>设置 Application.RegisterLogCallback(LogCallback handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.RegisterLogCallbackThreadedApplicationLogCallback">
            <summary>设置 Application.RegisterLogCallbackThreaded(LogCallback handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.ReplyToUserAuthorizationRequestBoolean">
            <summary>设置 Application.ReplyToUserAuthorizationRequest(Boolean reply) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.absoluteUrlGet">
            <summary>设置 Application.get_absoluteUrl() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimApplication.isPlayerGet">
            <summary>设置 Application.get_isPlayer() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAssetBundle">
            <summary>UnityEngine.AssetBundle 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundle.#ctor(UnityEngine.AssetBundle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAssetBundle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundle.AllInstances.LoadAll">
            <summary>设置 AssetBundle.LoadAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundle.AllInstances.LoadString">
            <summary>设置 AssetBundle.Load(String name) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundle.Constructor">
            <summary>设置 AssetBundle.AssetBundle() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundle.LoadAll">
            <summary>设置 AssetBundle.LoadAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundle.LoadString">
            <summary>设置 AssetBundle.Load(String name) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAssetBundleCreateRequest">
            <summary>UnityEngine.AssetBundleCreateRequest 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundleCreateRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundleCreateRequest.#ctor(UnityEngine.AssetBundleCreateRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAssetBundleCreateRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundleCreateRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundleCreateRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundleCreateRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundleCreateRequest.Constructor">
            <summary>设置 AssetBundleCreateRequest.AssetBundleCreateRequest() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAssetBundleRequest">
            <summary>UnityEngine.AssetBundleRequest 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundleRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundleRequest.#ctor(UnityEngine.AssetBundleRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAssetBundleRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundleRequest.AllInstances.assetGet">
            <summary>设置 AssetBundleRequest.get_asset() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundleRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAssetBundleRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundleRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundleRequest.Constructor">
            <summary>设置 AssetBundleRequest.AssetBundleRequest() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAssetBundleRequest.assetGet">
            <summary>设置 AssetBundleRequest.get_asset() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAsyncOperation">
            <summary>UnityEngine.AsyncOperation 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAsyncOperation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAsyncOperation.#ctor(UnityEngine.AsyncOperation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAsyncOperation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAsyncOperation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAsyncOperation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAsyncOperation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAsyncOperation.Constructor">
            <summary>设置 AsyncOperation.AsyncOperation() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioChorusFilter">
            <summary>UnityEngine.AudioChorusFilter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioChorusFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioChorusFilter.#ctor(UnityEngine.AudioChorusFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioChorusFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioChorusFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioChorusFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioChorusFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioChorusFilter.Constructor">
            <summary>设置 AudioChorusFilter.AudioChorusFilter() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioClip">
            <summary>UnityEngine.AudioClip 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioClip.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioClip.#ctor(UnityEngine.AudioClip)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioClip.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.AllInstances.InvokePCMReaderCallback_InternalSingleArray">
            <summary>设置 AudioClip.InvokePCMReaderCallback_Internal(Single[] data) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.AllInstances.InvokePCMSetPositionCallback_InternalInt32">
            <summary>设置 AudioClip.InvokePCMSetPositionCallback_Internal(Int32 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.AllInstances.m_PCMReaderCallbackAddAudioClipPCMReaderCallback">
            <summary>设置 AudioClip.add_m_PCMReaderCallback(PCMReaderCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.AllInstances.m_PCMReaderCallbackRemoveAudioClipPCMReaderCallback">
            <summary>设置 AudioClip.remove_m_PCMReaderCallback(PCMReaderCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.AllInstances.m_PCMSetPositionCallbackAddAudioClipPCMSetPositionCallback">
            <summary>设置 AudioClip.add_m_PCMSetPositionCallback(PCMSetPositionCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.AllInstances.m_PCMSetPositionCallbackRemoveAudioClipPCMSetPositionCallback">
            <summary>设置 AudioClip.remove_m_PCMSetPositionCallback(PCMSetPositionCallback value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioClip.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioClip.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.Constructor">
            <summary>设置 AudioClip.AudioClip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.CreateStringInt32Int32Int32BooleanBoolean">
            <summary>设置 AudioClip.Create(String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean _3D, Boolean stream) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.CreateStringInt32Int32Int32BooleanBooleanAudioClipPCMReaderCallback">
            <summary>设置 AudioClip.Create(String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean _3D, Boolean stream, PCMReaderCallback pcmreadercallback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.CreateStringInt32Int32Int32BooleanBooleanAudioClipPCMReaderCallbackAudioClipPCMSetPositionCallback">
            <summary>设置 AudioClip.Create(String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean _3D, Boolean stream, PCMReaderCallback pcmreadercallback, PCMSetPositionCallback pcmsetpositioncallback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.InvokePCMReaderCallback_InternalSingleArray">
            <summary>设置 AudioClip.InvokePCMReaderCallback_Internal(Single[] data) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.InvokePCMSetPositionCallback_InternalInt32">
            <summary>设置 AudioClip.InvokePCMSetPositionCallback_Internal(Int32 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.m_PCMReaderCallbackAddAudioClipPCMReaderCallback">
            <summary>设置 AudioClip.add_m_PCMReaderCallback(PCMReaderCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.m_PCMReaderCallbackRemoveAudioClipPCMReaderCallback">
            <summary>设置 AudioClip.remove_m_PCMReaderCallback(PCMReaderCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.m_PCMSetPositionCallbackAddAudioClipPCMSetPositionCallback">
            <summary>设置 AudioClip.add_m_PCMSetPositionCallback(PCMSetPositionCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioClip.m_PCMSetPositionCallbackRemoveAudioClipPCMSetPositionCallback">
            <summary>设置 AudioClip.remove_m_PCMSetPositionCallback(PCMSetPositionCallback value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioDistortionFilter">
            <summary>UnityEngine.AudioDistortionFilter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioDistortionFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioDistortionFilter.#ctor(UnityEngine.AudioDistortionFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioDistortionFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioDistortionFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioDistortionFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioDistortionFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioDistortionFilter.Constructor">
            <summary>设置 AudioDistortionFilter.AudioDistortionFilter() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioEchoFilter">
            <summary>UnityEngine.AudioEchoFilter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioEchoFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioEchoFilter.#ctor(UnityEngine.AudioEchoFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioEchoFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioEchoFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioEchoFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioEchoFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioEchoFilter.Constructor">
            <summary>设置 AudioEchoFilter.AudioEchoFilter() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioHighPassFilter">
            <summary>UnityEngine.AudioHighPassFilter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioHighPassFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioHighPassFilter.#ctor(UnityEngine.AudioHighPassFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioHighPassFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioHighPassFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioHighPassFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioHighPassFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioHighPassFilter.Constructor">
            <summary>设置 AudioHighPassFilter.AudioHighPassFilter() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioListener">
            <summary>UnityEngine.AudioListener 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioListener.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioListener.#ctor(UnityEngine.AudioListener)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioListener.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioListener.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioListener.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioListener.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioListener.Constructor">
            <summary>设置 AudioListener.AudioListener() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioListener.GetOutputDataInt32Int32">
            <summary>设置 AudioListener.GetOutputData(Int32 numSamples, Int32 channel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioListener.GetOutputDataSingleArrayInt32">
            <summary>设置 AudioListener.GetOutputData(Single[] samples, Int32 channel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioListener.GetSpectrumDataInt32Int32FFTWindow">
            <summary>设置 AudioListener.GetSpectrumData(Int32 numSamples, Int32 channel, FFTWindow window) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioListener.GetSpectrumDataSingleArrayInt32FFTWindow">
            <summary>设置 AudioListener.GetSpectrumData(Single[] samples, Int32 channel, FFTWindow window) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioLowPassFilter">
            <summary>UnityEngine.AudioLowPassFilter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioLowPassFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioLowPassFilter.#ctor(UnityEngine.AudioLowPassFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioLowPassFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioLowPassFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioLowPassFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioLowPassFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioLowPassFilter.Constructor">
            <summary>设置 AudioLowPassFilter.AudioLowPassFilter() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioReverbFilter">
            <summary>UnityEngine.AudioReverbFilter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioReverbFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioReverbFilter.#ctor(UnityEngine.AudioReverbFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioReverbFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioReverbFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioReverbFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioReverbFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioReverbFilter.Constructor">
            <summary>设置 AudioReverbFilter.AudioReverbFilter() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioReverbZone">
            <summary>UnityEngine.AudioReverbZone 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioReverbZone.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioReverbZone.#ctor(UnityEngine.AudioReverbZone)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioReverbZone.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioReverbZone.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioReverbZone.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioReverbZone.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioReverbZone.Constructor">
            <summary>设置 AudioReverbZone.AudioReverbZone() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioSettings">
            <summary>UnityEngine.AudioSettings 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioSettings.#ctor(UnityEngine.AudioSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSettings.Constructor">
            <summary>设置 AudioSettings.AudioSettings() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioSource">
            <summary>UnityEngine.AudioSource 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioSource.#ctor(UnityEngine.AudioSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAudioSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.AllInstances.GetOutputDataInt32Int32">
            <summary>设置 AudioSource.GetOutputData(Int32 numSamples, Int32 channel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.AllInstances.GetOutputDataSingleArrayInt32">
            <summary>设置 AudioSource.GetOutputData(Single[] samples, Int32 channel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.AllInstances.GetSpectrumDataInt32Int32FFTWindow">
            <summary>设置 AudioSource.GetSpectrumData(Int32 numSamples, Int32 channel, FFTWindow window) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.AllInstances.GetSpectrumDataSingleArrayInt32FFTWindow">
            <summary>设置 AudioSource.GetSpectrumData(Single[] samples, Int32 channel, FFTWindow window) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.AllInstances.Pause">
            <summary>设置 AudioSource.Pause() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.AllInstances.Play">
            <summary>设置 AudioSource.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.AllInstances.PlayOneShotAudioClip">
            <summary>设置 AudioSource.PlayOneShot(AudioClip clip) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAudioSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.Constructor">
            <summary>设置 AudioSource.AudioSource() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.GetOutputDataInt32Int32">
            <summary>设置 AudioSource.GetOutputData(Int32 numSamples, Int32 channel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.GetOutputDataSingleArrayInt32">
            <summary>设置 AudioSource.GetOutputData(Single[] samples, Int32 channel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.GetSpectrumDataInt32Int32FFTWindow">
            <summary>设置 AudioSource.GetSpectrumData(Int32 numSamples, Int32 channel, FFTWindow window) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.GetSpectrumDataSingleArrayInt32FFTWindow">
            <summary>设置 AudioSource.GetSpectrumData(Single[] samples, Int32 channel, FFTWindow window) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.Pause">
            <summary>设置 AudioSource.Pause() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.Play">
            <summary>设置 AudioSource.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.PlayClipAtPointAudioClipVector3">
            <summary>设置 AudioSource.PlayClipAtPoint(AudioClip clip, Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.PlayClipAtPointAudioClipVector3Single">
            <summary>设置 AudioSource.PlayClipAtPoint(AudioClip clip, Vector3 position, Single volume) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAudioSource.PlayOneShotAudioClip">
            <summary>设置 AudioSource.PlayOneShot(AudioClip clip) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAvatar">
            <summary>UnityEngine.Avatar 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAvatar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAvatar.#ctor(UnityEngine.Avatar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAvatar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAvatar.AllInstances.GetZYPostQInt32QuaternionQuaternion">
            <summary>设置 Avatar.GetZYPostQ(Int32 humanId, Quaternion parentQ, Quaternion q) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAvatar.AllInstances.GetZYRollInt32Vector3">
            <summary>设置 Avatar.GetZYRoll(Int32 humanId, Vector3 uvw) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAvatar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAvatar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAvatar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAvatar.Constructor">
            <summary>设置 Avatar.Avatar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAvatar.GetZYPostQInt32QuaternionQuaternion">
            <summary>设置 Avatar.GetZYPostQ(Int32 humanId, Quaternion parentQ, Quaternion q) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAvatar.GetZYRollInt32Vector3">
            <summary>设置 Avatar.GetZYRoll(Int32 humanId, Vector3 uvw) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAvatarBuilder">
            <summary>UnityEngine.AvatarBuilder 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAvatarBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAvatarBuilder.#ctor(UnityEngine.AvatarBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimAvatarBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAvatarBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimAvatarBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAvatarBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimAvatarBuilder.Constructor">
            <summary>设置 AvatarBuilder.AvatarBuilder() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBehaviour">
            <summary>UnityEngine.Behaviour 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBehaviour.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBehaviour.#ctor(UnityEngine.Behaviour)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBehaviour.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBehaviour.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBehaviour.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBehaviour.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBehaviour.Constructor">
            <summary>设置 Behaviour.Behaviour() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBitStream">
            <summary>UnityEngine.BitStream 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBitStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBitStream.#ctor(UnityEngine.BitStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBitStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeBooleanRef">
            <summary>设置 BitStream.Serialize(Boolean&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeCharRef">
            <summary>设置 BitStream.Serialize(Char&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeInt16Ref">
            <summary>设置 BitStream.Serialize(Int16&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeInt32Ref">
            <summary>设置 BitStream.Serialize(Int32&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeNetworkPlayerRef">
            <summary>设置 BitStream.Serialize(NetworkPlayer&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeNetworkViewIDRef">
            <summary>设置 BitStream.Serialize(NetworkViewID&amp; viewID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeQuaternionRef">
            <summary>设置 BitStream.Serialize(Quaternion&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeQuaternionRefSingle">
            <summary>设置 BitStream.Serialize(Quaternion&amp; value, Single maxDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeSingleRef">
            <summary>设置 BitStream.Serialize(Single&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeSingleRefSingle">
            <summary>设置 BitStream.Serialize(Single&amp; value, Single maxDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeVector3Ref">
            <summary>设置 BitStream.Serialize(Vector3&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeVector3RefSingle">
            <summary>设置 BitStream.Serialize(Vector3&amp; value, Single maxDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializenNetworkViewIDRef">
            <summary>设置 BitStream.Serializen(NetworkViewID&amp; viewID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializeqQuaternionRefSingle">
            <summary>设置 BitStream.Serializeq(Quaternion&amp; value, Single maximumDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.AllInstances.SerializevVector3RefSingle">
            <summary>设置 BitStream.Serializev(Vector3&amp; value, Single maximumDelta) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBitStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBitStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.Constructor">
            <summary>设置 BitStream.BitStream() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeBooleanRef">
            <summary>设置 BitStream.Serialize(Boolean&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeCharRef">
            <summary>设置 BitStream.Serialize(Char&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeInt16Ref">
            <summary>设置 BitStream.Serialize(Int16&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeInt32Ref">
            <summary>设置 BitStream.Serialize(Int32&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeNetworkPlayerRef">
            <summary>设置 BitStream.Serialize(NetworkPlayer&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeNetworkViewIDRef">
            <summary>设置 BitStream.Serialize(NetworkViewID&amp; viewID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeQuaternionRef">
            <summary>设置 BitStream.Serialize(Quaternion&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeSingleRef">
            <summary>设置 BitStream.Serialize(Single&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializeVector3Ref">
            <summary>设置 BitStream.Serialize(Vector3&amp; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBitStream.SerializenNetworkViewIDRef">
            <summary>设置 BitStream.Serializen(NetworkViewID&amp; viewID) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBoneWeight">
            <summary>UnityEngine.BoneWeight 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoneWeight.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBoneWeight.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoneWeight.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoneWeight.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoneWeight.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoneWeight.EqualityOpBoneWeightBoneWeight">
            <summary>设置 BoneWeight.op_Equality(BoneWeight lhs, BoneWeight rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoneWeight.InequalityOpBoneWeightBoneWeight">
            <summary>设置 BoneWeight.op_Inequality(BoneWeight lhs, BoneWeight rhs) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBounds">
            <summary>UnityEngine.Bounds 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBounds.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBounds.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBounds.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBounds.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBounds.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBounds.EqualityOpBoundsBounds">
            <summary>设置 Bounds.op_Equality(Bounds lhs, Bounds rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBounds.InequalityOpBoundsBounds">
            <summary>设置 Bounds.op_Inequality(Bounds lhs, Bounds rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBounds.Internal_ContainsBoundsVector3">
            <summary>设置 Bounds.Internal_Contains(Bounds m, Vector3 point) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBounds.Internal_IntersectRayRayRefBoundsRefSingleOut">
            <summary>设置 Bounds.Internal_IntersectRay(Ray&amp; ray, Bounds&amp; bounds, Single&amp; distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBounds.Internal_SqrDistanceBoundsVector3">
            <summary>设置 Bounds.Internal_SqrDistance(Bounds m, Vector3 point) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBoxCollider">
            <summary>UnityEngine.BoxCollider 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoxCollider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoxCollider.#ctor(UnityEngine.BoxCollider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBoxCollider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.AllInstances.centerGet">
            <summary>设置 BoxCollider.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.AllInstances.centerSetVector3">
            <summary>设置 BoxCollider.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.AllInstances.extentsGet">
            <summary>设置 BoxCollider.get_extents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.AllInstances.extentsSetVector3">
            <summary>设置 BoxCollider.set_extents(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.AllInstances.sizeGet">
            <summary>设置 BoxCollider.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.AllInstances.sizeSetVector3">
            <summary>设置 BoxCollider.set_size(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoxCollider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoxCollider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.Constructor">
            <summary>设置 BoxCollider.BoxCollider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.centerGet">
            <summary>设置 BoxCollider.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.centerSetVector3">
            <summary>设置 BoxCollider.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.extentsGet">
            <summary>设置 BoxCollider.get_extents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.extentsSetVector3">
            <summary>设置 BoxCollider.set_extents(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.sizeGet">
            <summary>设置 BoxCollider.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider.sizeSetVector3">
            <summary>设置 BoxCollider.set_size(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBoxCollider2D">
            <summary>UnityEngine.BoxCollider2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoxCollider2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoxCollider2D.#ctor(UnityEngine.BoxCollider2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimBoxCollider2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.AllInstances.centerGet">
            <summary>设置 BoxCollider2D.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.AllInstances.centerSetVector2">
            <summary>设置 BoxCollider2D.set_center(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.AllInstances.sizeGet">
            <summary>设置 BoxCollider2D.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.AllInstances.sizeSetVector2">
            <summary>设置 BoxCollider2D.set_size(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoxCollider2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimBoxCollider2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.Constructor">
            <summary>设置 BoxCollider2D.BoxCollider2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.centerGet">
            <summary>设置 BoxCollider2D.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.centerSetVector2">
            <summary>设置 BoxCollider2D.set_center(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.sizeGet">
            <summary>设置 BoxCollider2D.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimBoxCollider2D.sizeSetVector2">
            <summary>设置 BoxCollider2D.set_size(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCaching">
            <summary>UnityEngine.Caching 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCaching.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCaching.#ctor(UnityEngine.Caching)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCaching.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCaching.AuthorizeStringStringInt32Int32String">
            <summary>设置 Caching.Authorize(String name, String domain, Int32 size, Int32 expiration, String signature) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCaching.AuthorizeStringStringInt32String">
            <summary>设置 Caching.Authorize(String name, String domain, Int32 size, String signature) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCaching.AuthorizeStringStringInt64String">
            <summary>设置 Caching.Authorize(String name, String domain, Int64 size, String signature) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCaching.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCaching.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCaching.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCaching.Constructor">
            <summary>设置 Caching.Caching() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCamera">
            <summary>UnityEngine.Camera 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCamera.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCamera.#ctor(UnityEngine.Camera)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCamera.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.RenderToCubemapCubemap">
            <summary>设置 Camera.RenderToCubemap(Cubemap cubemap) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.RenderToCubemapCubemapInt32">
            <summary>设置 Camera.RenderToCubemap(Cubemap cubemap, Int32 faceMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.RenderToCubemapRenderTexture">
            <summary>设置 Camera.RenderToCubemap(RenderTexture cubemap) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.RenderToCubemapRenderTextureInt32">
            <summary>设置 Camera.RenderToCubemap(RenderTexture cubemap, Int32 faceMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ResetAspect">
            <summary>设置 Camera.ResetAspect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ResetProjectionMatrix">
            <summary>设置 Camera.ResetProjectionMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ResetReplacementShader">
            <summary>设置 Camera.ResetReplacementShader() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ResetWorldToCameraMatrix">
            <summary>设置 Camera.ResetWorldToCameraMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ScreenPointToRayVector3">
            <summary>设置 Camera.ScreenPointToRay(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ScreenToViewportPointVector3">
            <summary>设置 Camera.ScreenToViewportPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ScreenToWorldPointVector3">
            <summary>设置 Camera.ScreenToWorldPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.SetTargetBuffersRenderBufferArrayRenderBuffer">
            <summary>设置 Camera.SetTargetBuffers(RenderBuffer[] colorBuffer, RenderBuffer depthBuffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.SetTargetBuffersRenderBufferRenderBuffer">
            <summary>设置 Camera.SetTargetBuffers(RenderBuffer colorBuffer, RenderBuffer depthBuffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ViewportPointToRayVector3">
            <summary>设置 Camera.ViewportPointToRay(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ViewportToScreenPointVector3">
            <summary>设置 Camera.ViewportToScreenPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.ViewportToWorldPointVector3">
            <summary>设置 Camera.ViewportToWorldPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.WorldToScreenPointVector3">
            <summary>设置 Camera.WorldToScreenPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.WorldToViewportPointVector3">
            <summary>设置 Camera.WorldToViewportPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.backgroundColorGet">
            <summary>设置 Camera.get_backgroundColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.backgroundColorSetColor">
            <summary>设置 Camera.set_backgroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.cameraToWorldMatrixGet">
            <summary>设置 Camera.get_cameraToWorldMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.farGet">
            <summary>设置 Camera.get_far() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.farSetSingle">
            <summary>设置 Camera.set_far(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.fovGet">
            <summary>设置 Camera.get_fov() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.fovSetSingle">
            <summary>设置 Camera.set_fov(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.isOrthoGraphicGet">
            <summary>设置 Camera.get_isOrthoGraphic() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.isOrthoGraphicSetBoolean">
            <summary>设置 Camera.set_isOrthoGraphic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.nearGet">
            <summary>设置 Camera.get_near() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.nearSetSingle">
            <summary>设置 Camera.set_near(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.pixelRectGet">
            <summary>设置 Camera.get_pixelRect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.pixelRectSetRect">
            <summary>设置 Camera.set_pixelRect(Rect value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.projectionMatrixGet">
            <summary>设置 Camera.get_projectionMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.projectionMatrixSetMatrix4x4">
            <summary>设置 Camera.set_projectionMatrix(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.rectGet">
            <summary>设置 Camera.get_rect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.rectSetRect">
            <summary>设置 Camera.set_rect(Rect value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.velocityGet">
            <summary>设置 Camera.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.worldToCameraMatrixGet">
            <summary>设置 Camera.get_worldToCameraMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.AllInstances.worldToCameraMatrixSetMatrix4x4">
            <summary>设置 Camera.set_worldToCameraMatrix(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCamera.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCamera.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.Constructor">
            <summary>设置 Camera.Camera() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.RenderToCubemapCubemap">
            <summary>设置 Camera.RenderToCubemap(Cubemap cubemap) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.RenderToCubemapCubemapInt32">
            <summary>设置 Camera.RenderToCubemap(Cubemap cubemap, Int32 faceMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.RenderToCubemapRenderTexture">
            <summary>设置 Camera.RenderToCubemap(RenderTexture cubemap) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.RenderToCubemapRenderTextureInt32">
            <summary>设置 Camera.RenderToCubemap(RenderTexture cubemap, Int32 faceMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ResetAspect">
            <summary>设置 Camera.ResetAspect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ResetProjectionMatrix">
            <summary>设置 Camera.ResetProjectionMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ResetReplacementShader">
            <summary>设置 Camera.ResetReplacementShader() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ResetWorldToCameraMatrix">
            <summary>设置 Camera.ResetWorldToCameraMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ScreenPointToRayVector3">
            <summary>设置 Camera.ScreenPointToRay(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ScreenToViewportPointVector3">
            <summary>设置 Camera.ScreenToViewportPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ScreenToWorldPointVector3">
            <summary>设置 Camera.ScreenToWorldPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.SetTargetBuffersRenderBufferArrayRenderBuffer">
            <summary>设置 Camera.SetTargetBuffers(RenderBuffer[] colorBuffer, RenderBuffer depthBuffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.SetTargetBuffersRenderBufferRenderBuffer">
            <summary>设置 Camera.SetTargetBuffers(RenderBuffer colorBuffer, RenderBuffer depthBuffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ViewportPointToRayVector3">
            <summary>设置 Camera.ViewportPointToRay(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ViewportToScreenPointVector3">
            <summary>设置 Camera.ViewportToScreenPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.ViewportToWorldPointVector3">
            <summary>设置 Camera.ViewportToWorldPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.WorldToScreenPointVector3">
            <summary>设置 Camera.WorldToScreenPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.WorldToViewportPointVector3">
            <summary>设置 Camera.WorldToViewportPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.backgroundColorGet">
            <summary>设置 Camera.get_backgroundColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.backgroundColorSetColor">
            <summary>设置 Camera.set_backgroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.cameraToWorldMatrixGet">
            <summary>设置 Camera.get_cameraToWorldMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.farGet">
            <summary>设置 Camera.get_far() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.farSetSingle">
            <summary>设置 Camera.set_far(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.fovGet">
            <summary>设置 Camera.get_fov() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.fovSetSingle">
            <summary>设置 Camera.set_fov(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.isOrthoGraphicGet">
            <summary>设置 Camera.get_isOrthoGraphic() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.isOrthoGraphicSetBoolean">
            <summary>设置 Camera.set_isOrthoGraphic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.mainCameraGet">
            <summary>设置 Camera.get_mainCamera() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.nearGet">
            <summary>设置 Camera.get_near() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.nearSetSingle">
            <summary>设置 Camera.set_near(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.pixelRectGet">
            <summary>设置 Camera.get_pixelRect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.pixelRectSetRect">
            <summary>设置 Camera.set_pixelRect(Rect value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.projectionMatrixGet">
            <summary>设置 Camera.get_projectionMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.projectionMatrixSetMatrix4x4">
            <summary>设置 Camera.set_projectionMatrix(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.rectGet">
            <summary>设置 Camera.get_rect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.rectSetRect">
            <summary>设置 Camera.set_rect(Rect value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.velocityGet">
            <summary>设置 Camera.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.worldToCameraMatrixGet">
            <summary>设置 Camera.get_worldToCameraMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCamera.worldToCameraMatrixSetMatrix4x4">
            <summary>设置 Camera.set_worldToCameraMatrix(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCapsuleCollider">
            <summary>UnityEngine.CapsuleCollider 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCapsuleCollider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCapsuleCollider.#ctor(UnityEngine.CapsuleCollider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCapsuleCollider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCapsuleCollider.AllInstances.centerGet">
            <summary>设置 CapsuleCollider.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCapsuleCollider.AllInstances.centerSetVector3">
            <summary>设置 CapsuleCollider.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCapsuleCollider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCapsuleCollider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCapsuleCollider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCapsuleCollider.Constructor">
            <summary>设置 CapsuleCollider.CapsuleCollider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCapsuleCollider.centerGet">
            <summary>设置 CapsuleCollider.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCapsuleCollider.centerSetVector3">
            <summary>设置 CapsuleCollider.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCharacterController">
            <summary>UnityEngine.CharacterController 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterController.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterController.#ctor(UnityEngine.CharacterController)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCharacterController.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.AllInstances.MoveVector3">
            <summary>设置 CharacterController.Move(Vector3 motion) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.AllInstances.SimpleMoveVector3">
            <summary>设置 CharacterController.SimpleMove(Vector3 speed) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.AllInstances.centerGet">
            <summary>设置 CharacterController.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.AllInstances.centerSetVector3">
            <summary>设置 CharacterController.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.AllInstances.velocityGet">
            <summary>设置 CharacterController.get_velocity() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterController.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterController.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.Constructor">
            <summary>设置 CharacterController.CharacterController() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.MoveVector3">
            <summary>设置 CharacterController.Move(Vector3 motion) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.SimpleMoveVector3">
            <summary>设置 CharacterController.SimpleMove(Vector3 speed) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.centerGet">
            <summary>设置 CharacterController.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.centerSetVector3">
            <summary>设置 CharacterController.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterController.velocityGet">
            <summary>设置 CharacterController.get_velocity() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCharacterInfo">
            <summary>UnityEngine.CharacterInfo 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCharacterInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCharacterJoint">
            <summary>UnityEngine.CharacterJoint 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterJoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterJoint.#ctor(UnityEngine.CharacterJoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCharacterJoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.highTwistLimitGet">
            <summary>设置 CharacterJoint.get_highTwistLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.highTwistLimitSetSoftJointLimit">
            <summary>设置 CharacterJoint.set_highTwistLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.lowTwistLimitGet">
            <summary>设置 CharacterJoint.get_lowTwistLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.lowTwistLimitSetSoftJointLimit">
            <summary>设置 CharacterJoint.set_lowTwistLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.rotationDriveGet">
            <summary>设置 CharacterJoint.get_rotationDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.rotationDriveSetJointDrive">
            <summary>设置 CharacterJoint.set_rotationDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.swing1LimitGet">
            <summary>设置 CharacterJoint.get_swing1Limit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.swing1LimitSetSoftJointLimit">
            <summary>设置 CharacterJoint.set_swing1Limit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.swing2LimitGet">
            <summary>设置 CharacterJoint.get_swing2Limit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.swing2LimitSetSoftJointLimit">
            <summary>设置 CharacterJoint.set_swing2Limit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.swingAxisGet">
            <summary>设置 CharacterJoint.get_swingAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.swingAxisSetVector3">
            <summary>设置 CharacterJoint.set_swingAxis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.targetAngularVelocityGet">
            <summary>设置 CharacterJoint.get_targetAngularVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.targetAngularVelocitySetVector3">
            <summary>设置 CharacterJoint.set_targetAngularVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.targetRotationGet">
            <summary>设置 CharacterJoint.get_targetRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.AllInstances.targetRotationSetQuaternion">
            <summary>设置 CharacterJoint.set_targetRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterJoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCharacterJoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.Constructor">
            <summary>设置 CharacterJoint.CharacterJoint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.highTwistLimitGet">
            <summary>设置 CharacterJoint.get_highTwistLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.highTwistLimitSetSoftJointLimit">
            <summary>设置 CharacterJoint.set_highTwistLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.lowTwistLimitGet">
            <summary>设置 CharacterJoint.get_lowTwistLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.lowTwistLimitSetSoftJointLimit">
            <summary>设置 CharacterJoint.set_lowTwistLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.rotationDriveGet">
            <summary>设置 CharacterJoint.get_rotationDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.rotationDriveSetJointDrive">
            <summary>设置 CharacterJoint.set_rotationDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.swing1LimitGet">
            <summary>设置 CharacterJoint.get_swing1Limit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.swing1LimitSetSoftJointLimit">
            <summary>设置 CharacterJoint.set_swing1Limit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.swing2LimitGet">
            <summary>设置 CharacterJoint.get_swing2Limit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.swing2LimitSetSoftJointLimit">
            <summary>设置 CharacterJoint.set_swing2Limit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.swingAxisGet">
            <summary>设置 CharacterJoint.get_swingAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.swingAxisSetVector3">
            <summary>设置 CharacterJoint.set_swingAxis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.targetAngularVelocityGet">
            <summary>设置 CharacterJoint.get_targetAngularVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.targetAngularVelocitySetVector3">
            <summary>设置 CharacterJoint.set_targetAngularVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.targetRotationGet">
            <summary>设置 CharacterJoint.get_targetRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCharacterJoint.targetRotationSetQuaternion">
            <summary>设置 CharacterJoint.set_targetRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCircleCollider2D">
            <summary>UnityEngine.CircleCollider2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCircleCollider2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCircleCollider2D.#ctor(UnityEngine.CircleCollider2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCircleCollider2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCircleCollider2D.AllInstances.centerGet">
            <summary>设置 CircleCollider2D.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCircleCollider2D.AllInstances.centerSetVector2">
            <summary>设置 CircleCollider2D.set_center(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCircleCollider2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCircleCollider2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCircleCollider2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCircleCollider2D.Constructor">
            <summary>设置 CircleCollider2D.CircleCollider2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCircleCollider2D.centerGet">
            <summary>设置 CircleCollider2D.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCircleCollider2D.centerSetVector2">
            <summary>设置 CircleCollider2D.set_center(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCloth">
            <summary>UnityEngine.Cloth 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCloth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCloth.#ctor(UnityEngine.Cloth)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCloth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.AllInstances.externalAccelerationGet">
            <summary>设置 Cloth.get_externalAcceleration() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.AllInstances.externalAccelerationSetVector3">
            <summary>设置 Cloth.set_externalAcceleration(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.AllInstances.randomAccelerationGet">
            <summary>设置 Cloth.get_randomAcceleration() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.AllInstances.randomAccelerationSetVector3">
            <summary>设置 Cloth.set_randomAcceleration(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCloth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCloth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.Constructor">
            <summary>设置 Cloth.Cloth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.externalAccelerationGet">
            <summary>设置 Cloth.get_externalAcceleration() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.externalAccelerationSetVector3">
            <summary>设置 Cloth.set_externalAcceleration(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.randomAccelerationGet">
            <summary>设置 Cloth.get_randomAcceleration() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCloth.randomAccelerationSetVector3">
            <summary>设置 Cloth.set_randomAcceleration(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimClothRenderer">
            <summary>UnityEngine.ClothRenderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimClothRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimClothRenderer.#ctor(UnityEngine.ClothRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimClothRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimClothRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimClothRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimClothRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimClothRenderer.Constructor">
            <summary>设置 ClothRenderer.ClothRenderer() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimClothSkinningCoefficient">
            <summary>UnityEngine.ClothSkinningCoefficient 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimClothSkinningCoefficient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimClothSkinningCoefficient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimClothSkinningCoefficient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimClothSkinningCoefficient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimClothSkinningCoefficient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCollider">
            <summary>UnityEngine.Collider 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollider.#ctor(UnityEngine.Collider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCollider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider.AllInstances.ClosestPointOnBoundsVector3">
            <summary>设置 Collider.ClosestPointOnBounds(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider.AllInstances.RaycastRayRaycastHitOutSingle">
            <summary>设置 Collider.Raycast(Ray ray, RaycastHit&amp; hitInfo, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider.AllInstances.boundsGet">
            <summary>设置 Collider.get_bounds() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider.ClosestPointOnBoundsVector3">
            <summary>设置 Collider.ClosestPointOnBounds(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider.Constructor">
            <summary>设置 Collider.Collider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider.Internal_RaycastColliderRayRaycastHitOutSingle">
            <summary>设置 Collider.Internal_Raycast(Collider col, Ray ray, RaycastHit&amp; hitInfo, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider.boundsGet">
            <summary>设置 Collider.get_bounds() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCollider2D">
            <summary>UnityEngine.Collider2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollider2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollider2D.#ctor(UnityEngine.Collider2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCollider2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider2D.AllInstances.OverlapPointVector2">
            <summary>设置 Collider2D.OverlapPoint(Vector2 point) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollider2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollider2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider2D.Constructor">
            <summary>设置 Collider2D.Collider2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollider2D.OverlapPointVector2">
            <summary>设置 Collider2D.OverlapPoint(Vector2 point) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCollision">
            <summary>UnityEngine.Collision 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollision.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollision.#ctor(UnityEngine.Collision)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCollision.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.GetEnumerator">
            <summary>设置 Collision.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.colliderGet">
            <summary>设置 Collision.get_collider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.contactsGet">
            <summary>设置 Collision.get_contacts() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.frictionForceSumGet">
            <summary>设置 Collision.get_frictionForceSum() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.gameObjectGet">
            <summary>设置 Collision.get_gameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.impactForceSumGet">
            <summary>设置 Collision.get_impactForceSum() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.otherGet">
            <summary>设置 Collision.get_other() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.relativeVelocityGet">
            <summary>设置 Collision.get_relativeVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.rigidbodyGet">
            <summary>设置 Collision.get_rigidbody() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.AllInstances.transformGet">
            <summary>设置 Collision.get_transform() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollision.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollision.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.Constructor">
            <summary>设置 Collision.Collision() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.GetEnumerator">
            <summary>设置 Collision.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.colliderGet">
            <summary>设置 Collision.get_collider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.contactsGet">
            <summary>设置 Collision.get_contacts() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.frictionForceSumGet">
            <summary>设置 Collision.get_frictionForceSum() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.gameObjectGet">
            <summary>设置 Collision.get_gameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.impactForceSumGet">
            <summary>设置 Collision.get_impactForceSum() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.otherGet">
            <summary>设置 Collision.get_other() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.relativeVelocityGet">
            <summary>设置 Collision.get_relativeVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.rigidbodyGet">
            <summary>设置 Collision.get_rigidbody() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision.transformGet">
            <summary>设置 Collision.get_transform() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCollision2D">
            <summary>UnityEngine.Collision2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollision2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollision2D.#ctor(UnityEngine.Collision2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCollision2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.AllInstances.colliderGet">
            <summary>设置 Collision2D.get_collider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.AllInstances.contactsGet">
            <summary>设置 Collision2D.get_contacts() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.AllInstances.gameObjectGet">
            <summary>设置 Collision2D.get_gameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.AllInstances.relativeVelocityGet">
            <summary>设置 Collision2D.get_relativeVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.AllInstances.rigidbodyGet">
            <summary>设置 Collision2D.get_rigidbody() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.AllInstances.transformGet">
            <summary>设置 Collision2D.get_transform() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollision2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCollision2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.Constructor">
            <summary>设置 Collision2D.Collision2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.colliderGet">
            <summary>设置 Collision2D.get_collider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.contactsGet">
            <summary>设置 Collision2D.get_contacts() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.gameObjectGet">
            <summary>设置 Collision2D.get_gameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.relativeVelocityGet">
            <summary>设置 Collision2D.get_relativeVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.rigidbodyGet">
            <summary>设置 Collision2D.get_rigidbody() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCollision2D.transformGet">
            <summary>设置 Collision2D.get_transform() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimColor">
            <summary>UnityEngine.Color 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimColor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.AdditionOpColorColor">
            <summary>设置 Color.op_Addition(Color a, Color b) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimColor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimColor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimColor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.DivisionOpColorSingle">
            <summary>设置 Color.op_Division(Color a, Single b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.EqualityOpColorColor">
            <summary>设置 Color.op_Equality(Color lhs, Color rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.ImplicitOpColorVector4">
            <summary>设置 Color.op_Implicit(Color c) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.ImplicitOpVector4Color">
            <summary>设置 Color.op_Implicit(Vector4 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.InequalityOpColorColor">
            <summary>设置 Color.op_Inequality(Color lhs, Color rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.LerpColorColorSingle">
            <summary>设置 Color.Lerp(Color a, Color b, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.MultiplyOpColorColor">
            <summary>设置 Color.op_Multiply(Color a, Color b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.MultiplyOpColorSingle">
            <summary>设置 Color.op_Multiply(Color a, Single b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.MultiplyOpSingleColor">
            <summary>设置 Color.op_Multiply(Single b, Color a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.SubtractionOpColorColor">
            <summary>设置 Color.op_Subtraction(Color a, Color b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.blackGet">
            <summary>设置 Color.get_black() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.blueGet">
            <summary>设置 Color.get_blue() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.clearGet">
            <summary>设置 Color.get_clear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.cyanGet">
            <summary>设置 Color.get_cyan() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.grayGet">
            <summary>设置 Color.get_gray() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.greenGet">
            <summary>设置 Color.get_green() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.greyGet">
            <summary>设置 Color.get_grey() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.magentaGet">
            <summary>设置 Color.get_magenta() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.redGet">
            <summary>设置 Color.get_red() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.whiteGet">
            <summary>设置 Color.get_white() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor.yellowGet">
            <summary>设置 Color.get_yellow() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimColor32">
            <summary>UnityEngine.Color32 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimColor32.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimColor32.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimColor32.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimColor32.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor32.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor32.ImplicitOpColor32Color">
            <summary>设置 Color32.op_Implicit(Color32 c) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor32.ImplicitOpColorColor32">
            <summary>设置 Color32.op_Implicit(Color c) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimColor32.LerpColor32Color32Single">
            <summary>设置 Color32.Lerp(Color32 a, Color32 b, Single t) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCombineInstance">
            <summary>UnityEngine.CombineInstance 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCombineInstance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCombineInstance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCombineInstance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCombineInstance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCombineInstance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCompass">
            <summary>UnityEngine.Compass 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCompass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCompass.#ctor(UnityEngine.Compass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCompass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCompass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCompass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCompass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCompass.Constructor">
            <summary>设置 Compass.Compass() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimComponent">
            <summary>UnityEngine.Component 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.#ctor(UnityEngine.Component)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimComponent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.BroadcastMessageString">
            <summary>设置 Component.BroadcastMessage(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.BroadcastMessageStringObject">
            <summary>设置 Component.BroadcastMessage(String methodName, Object parameter) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.BroadcastMessageStringSendMessageOptions">
            <summary>设置 Component.BroadcastMessage(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentInChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.Component,``0})">
            <summary>设置 Component.GetComponentInChildren() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentInChildrenType">
            <summary>设置 Component.GetComponentInChildren(Type t) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.Component,``0})">
            <summary>设置 Component.GetComponent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentString">
            <summary>设置 Component.GetComponent(String type) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentsInChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.Component,``0[]})">
            <summary>设置 Component.GetComponentsInChildren() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentsInChildrenOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.Component,System.Boolean,``0[]})">
            <summary>设置 Component.GetComponentsInChildren(Boolean includeInactive) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentsInChildrenType">
            <summary>设置 Component.GetComponentsInChildren(Type t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentsInChildrenTypeBoolean">
            <summary>设置 Component.GetComponentsInChildren(Type t, Boolean includeInactive) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.AllInstances.GetComponentsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.Component,``0[]})">
            <summary>设置 Component.GetComponents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.SendMessageString">
            <summary>设置 Component.SendMessage(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.SendMessageStringObject">
            <summary>设置 Component.SendMessage(String methodName, Object value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.SendMessageStringSendMessageOptions">
            <summary>设置 Component.SendMessage(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.SendMessageUpwardsString">
            <summary>设置 Component.SendMessageUpwards(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.SendMessageUpwardsStringObject">
            <summary>设置 Component.SendMessageUpwards(String methodName, Object value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.SendMessageUpwardsStringSendMessageOptions">
            <summary>设置 Component.SendMessageUpwards(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.gameObjectGet">
            <summary>设置 Component.get_gameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.AllInstances.transformGet">
            <summary>设置 Component.get_transform() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.BroadcastMessageString">
            <summary>设置 Component.BroadcastMessage(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.BroadcastMessageStringObject">
            <summary>设置 Component.BroadcastMessage(String methodName, Object parameter) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.BroadcastMessageStringSendMessageOptions">
            <summary>设置 Component.BroadcastMessage(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.Constructor">
            <summary>设置 Component.Component() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.GetComponentInChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 Component.GetComponentInChildren() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.GetComponentInChildrenType">
            <summary>设置 Component.GetComponentInChildren(Type t) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.GetComponentOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 Component.GetComponent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.GetComponentString">
            <summary>设置 Component.GetComponent(String type) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.GetComponentsInChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>设置 Component.GetComponentsInChildren() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.GetComponentsInChildrenOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>设置 Component.GetComponentsInChildren(Boolean includeInactive) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.GetComponentsInChildrenType">
            <summary>设置 Component.GetComponentsInChildren(Type t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.GetComponentsInChildrenTypeBoolean">
            <summary>设置 Component.GetComponentsInChildren(Type t, Boolean includeInactive) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComponent.GetComponentsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>设置 Component.GetComponents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.SendMessageString">
            <summary>设置 Component.SendMessage(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.SendMessageStringObject">
            <summary>设置 Component.SendMessage(String methodName, Object value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.SendMessageStringSendMessageOptions">
            <summary>设置 Component.SendMessage(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.SendMessageUpwardsString">
            <summary>设置 Component.SendMessageUpwards(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.SendMessageUpwardsStringObject">
            <summary>设置 Component.SendMessageUpwards(String methodName, Object value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.SendMessageUpwardsStringSendMessageOptions">
            <summary>设置 Component.SendMessageUpwards(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.gameObjectGet">
            <summary>设置 Component.get_gameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComponent.transformGet">
            <summary>设置 Component.get_transform() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimComputeBuffer">
            <summary>UnityEngine.ComputeBuffer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeBuffer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeBuffer.#ctor(UnityEngine.ComputeBuffer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimComputeBuffer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.AllInstances.Dispose">
            <summary>设置 ComputeBuffer.Dispose() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.AllInstances.DisposeBoolean">
            <summary>设置 ComputeBuffer.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.AllInstances.GetDataArray">
            <summary>设置 ComputeBuffer.GetData(Array data) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.AllInstances.Release">
            <summary>设置 ComputeBuffer.Release() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.AllInstances.SetDataArray">
            <summary>设置 ComputeBuffer.SetData(Array data) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeBuffer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeBuffer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeBuffer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.ConstructorInt32Int32">
            <summary>设置 ComputeBuffer.ComputeBuffer(Int32 count, Int32 stride) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.ConstructorInt32Int32ComputeBufferType">
            <summary>设置 ComputeBuffer.ComputeBuffer(Int32 count, Int32 stride, ComputeBufferType type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.Dispose">
            <summary>设置 ComputeBuffer.Dispose() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.DisposeBoolean">
            <summary>设置 ComputeBuffer.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.GetDataArray">
            <summary>设置 ComputeBuffer.GetData(Array data) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.Release">
            <summary>设置 ComputeBuffer.Release() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeBuffer.SetDataArray">
            <summary>设置 ComputeBuffer.SetData(Array data) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimComputeShader">
            <summary>UnityEngine.ComputeShader 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeShader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeShader.#ctor(UnityEngine.ComputeShader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimComputeShader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeShader.AllInstances.SetFloatsStringSingleArray">
            <summary>设置 ComputeShader.SetFloats(String name, Single[] values) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeShader.AllInstances.SetIntsStringInt32Array">
            <summary>设置 ComputeShader.SetInts(String name, Int32[] values) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeShader.AllInstances.SetVectorStringVector4">
            <summary>设置 ComputeShader.SetVector(String name, Vector4 val) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeShader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimComputeShader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeShader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeShader.Constructor">
            <summary>设置 ComputeShader.ComputeShader() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeShader.SetFloatsStringSingleArray">
            <summary>设置 ComputeShader.SetFloats(String name, Single[] values) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeShader.SetIntsStringInt32Array">
            <summary>设置 ComputeShader.SetInts(String name, Int32[] values) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimComputeShader.SetVectorStringVector4">
            <summary>设置 ComputeShader.SetVector(String name, Vector4 val) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimConfigurableJoint">
            <summary>UnityEngine.ConfigurableJoint 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConfigurableJoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConfigurableJoint.#ctor(UnityEngine.ConfigurableJoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.angularXDriveGet">
            <summary>设置 ConfigurableJoint.get_angularXDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.angularXDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_angularXDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.angularYLimitGet">
            <summary>设置 ConfigurableJoint.get_angularYLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.angularYLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_angularYLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.angularYZDriveGet">
            <summary>设置 ConfigurableJoint.get_angularYZDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.angularYZDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_angularYZDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.angularZLimitGet">
            <summary>设置 ConfigurableJoint.get_angularZLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.angularZLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_angularZLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.highAngularXLimitGet">
            <summary>设置 ConfigurableJoint.get_highAngularXLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.highAngularXLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_highAngularXLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.linearLimitGet">
            <summary>设置 ConfigurableJoint.get_linearLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.linearLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_linearLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.lowAngularXLimitGet">
            <summary>设置 ConfigurableJoint.get_lowAngularXLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.lowAngularXLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_lowAngularXLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.secondaryAxisGet">
            <summary>设置 ConfigurableJoint.get_secondaryAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.secondaryAxisSetVector3">
            <summary>设置 ConfigurableJoint.set_secondaryAxis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.slerpDriveGet">
            <summary>设置 ConfigurableJoint.get_slerpDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.slerpDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_slerpDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.targetAngularVelocityGet">
            <summary>设置 ConfigurableJoint.get_targetAngularVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.targetAngularVelocitySetVector3">
            <summary>设置 ConfigurableJoint.set_targetAngularVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.targetPositionGet">
            <summary>设置 ConfigurableJoint.get_targetPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.targetPositionSetVector3">
            <summary>设置 ConfigurableJoint.set_targetPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.targetRotationGet">
            <summary>设置 ConfigurableJoint.get_targetRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.targetRotationSetQuaternion">
            <summary>设置 ConfigurableJoint.set_targetRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.targetVelocityGet">
            <summary>设置 ConfigurableJoint.get_targetVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.targetVelocitySetVector3">
            <summary>设置 ConfigurableJoint.set_targetVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.xDriveGet">
            <summary>设置 ConfigurableJoint.get_xDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.xDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_xDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.yDriveGet">
            <summary>设置 ConfigurableJoint.get_yDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.yDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_yDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.zDriveGet">
            <summary>设置 ConfigurableJoint.get_zDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.AllInstances.zDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_zDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConfigurableJoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConfigurableJoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.Constructor">
            <summary>设置 ConfigurableJoint.ConfigurableJoint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.angularXDriveGet">
            <summary>设置 ConfigurableJoint.get_angularXDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.angularXDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_angularXDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.angularYLimitGet">
            <summary>设置 ConfigurableJoint.get_angularYLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.angularYLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_angularYLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.angularYZDriveGet">
            <summary>设置 ConfigurableJoint.get_angularYZDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.angularYZDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_angularYZDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.angularZLimitGet">
            <summary>设置 ConfigurableJoint.get_angularZLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.angularZLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_angularZLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.highAngularXLimitGet">
            <summary>设置 ConfigurableJoint.get_highAngularXLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.highAngularXLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_highAngularXLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.linearLimitGet">
            <summary>设置 ConfigurableJoint.get_linearLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.linearLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_linearLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.lowAngularXLimitGet">
            <summary>设置 ConfigurableJoint.get_lowAngularXLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.lowAngularXLimitSetSoftJointLimit">
            <summary>设置 ConfigurableJoint.set_lowAngularXLimit(SoftJointLimit value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.secondaryAxisGet">
            <summary>设置 ConfigurableJoint.get_secondaryAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.secondaryAxisSetVector3">
            <summary>设置 ConfigurableJoint.set_secondaryAxis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.slerpDriveGet">
            <summary>设置 ConfigurableJoint.get_slerpDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.slerpDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_slerpDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.targetAngularVelocityGet">
            <summary>设置 ConfigurableJoint.get_targetAngularVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.targetAngularVelocitySetVector3">
            <summary>设置 ConfigurableJoint.set_targetAngularVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.targetPositionGet">
            <summary>设置 ConfigurableJoint.get_targetPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.targetPositionSetVector3">
            <summary>设置 ConfigurableJoint.set_targetPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.targetRotationGet">
            <summary>设置 ConfigurableJoint.get_targetRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.targetRotationSetQuaternion">
            <summary>设置 ConfigurableJoint.set_targetRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.targetVelocityGet">
            <summary>设置 ConfigurableJoint.get_targetVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.targetVelocitySetVector3">
            <summary>设置 ConfigurableJoint.set_targetVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.xDriveGet">
            <summary>设置 ConfigurableJoint.get_xDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.xDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_xDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.yDriveGet">
            <summary>设置 ConfigurableJoint.get_yDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.yDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_yDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.zDriveGet">
            <summary>设置 ConfigurableJoint.get_zDrive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConfigurableJoint.zDriveSetJointDrive">
            <summary>设置 ConfigurableJoint.set_zDrive(JointDrive value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimConstantForce">
            <summary>UnityEngine.ConstantForce 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConstantForce.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConstantForce.#ctor(UnityEngine.ConstantForce)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimConstantForce.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.AllInstances.forceGet">
            <summary>设置 ConstantForce.get_force() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.AllInstances.forceSetVector3">
            <summary>设置 ConstantForce.set_force(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.AllInstances.relativeForceGet">
            <summary>设置 ConstantForce.get_relativeForce() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.AllInstances.relativeForceSetVector3">
            <summary>设置 ConstantForce.set_relativeForce(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.AllInstances.relativeTorqueGet">
            <summary>设置 ConstantForce.get_relativeTorque() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.AllInstances.relativeTorqueSetVector3">
            <summary>设置 ConstantForce.set_relativeTorque(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.AllInstances.torqueGet">
            <summary>设置 ConstantForce.get_torque() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.AllInstances.torqueSetVector3">
            <summary>设置 ConstantForce.set_torque(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConstantForce.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConstantForce.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.Constructor">
            <summary>设置 ConstantForce.ConstantForce() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.forceGet">
            <summary>设置 ConstantForce.get_force() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.forceSetVector3">
            <summary>设置 ConstantForce.set_force(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.relativeForceGet">
            <summary>设置 ConstantForce.get_relativeForce() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.relativeForceSetVector3">
            <summary>设置 ConstantForce.set_relativeForce(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.relativeTorqueGet">
            <summary>设置 ConstantForce.get_relativeTorque() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.relativeTorqueSetVector3">
            <summary>设置 ConstantForce.set_relativeTorque(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.torqueGet">
            <summary>设置 ConstantForce.get_torque() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstantForce.torqueSetVector3">
            <summary>设置 ConstantForce.set_torque(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimConstructorSafeAttribute">
            <summary>UnityEngine.ConstructorSafeAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConstructorSafeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConstructorSafeAttribute.#ctor(UnityEngine.ConstructorSafeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimConstructorSafeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConstructorSafeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimConstructorSafeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstructorSafeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimConstructorSafeAttribute.Constructor">
            <summary>设置 ConstructorSafeAttribute.ConstructorSafeAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimContactPoint">
            <summary>UnityEngine.ContactPoint 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContactPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimContactPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContactPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContactPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimContactPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimContactPoint2D">
            <summary>UnityEngine.ContactPoint2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContactPoint2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimContactPoint2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContactPoint2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContactPoint2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimContactPoint2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimContextMenu">
            <summary>UnityEngine.ContextMenu 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContextMenu.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContextMenu.#ctor(UnityEngine.ContextMenu)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimContextMenu.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimContextMenu.AllInstances.menuItemGet">
            <summary>设置 ContextMenu.get_menuItem() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContextMenu.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimContextMenu.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimContextMenu.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimContextMenu.ConstructorString">
            <summary>设置 ContextMenu.ContextMenu(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimContextMenu.menuItemGet">
            <summary>设置 ContextMenu.get_menuItem() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimControllerColliderHit">
            <summary>UnityEngine.ControllerColliderHit 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimControllerColliderHit.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimControllerColliderHit.#ctor(UnityEngine.ControllerColliderHit)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.colliderGet">
            <summary>设置 ControllerColliderHit.get_collider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.controllerGet">
            <summary>设置 ControllerColliderHit.get_controller() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.gameObjectGet">
            <summary>设置 ControllerColliderHit.get_gameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.moveDirectionGet">
            <summary>设置 ControllerColliderHit.get_moveDirection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.moveLengthGet">
            <summary>设置 ControllerColliderHit.get_moveLength() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.normalGet">
            <summary>设置 ControllerColliderHit.get_normal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.pointGet">
            <summary>设置 ControllerColliderHit.get_point() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.pushGet">
            <summary>设置 ControllerColliderHit.get_push() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.pushSetBoolean">
            <summary>设置 ControllerColliderHit.set_push(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.rigidbodyGet">
            <summary>设置 ControllerColliderHit.get_rigidbody() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.AllInstances.transformGet">
            <summary>设置 ControllerColliderHit.get_transform() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimControllerColliderHit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimControllerColliderHit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.Constructor">
            <summary>设置 ControllerColliderHit.ControllerColliderHit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.colliderGet">
            <summary>设置 ControllerColliderHit.get_collider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.controllerGet">
            <summary>设置 ControllerColliderHit.get_controller() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.gameObjectGet">
            <summary>设置 ControllerColliderHit.get_gameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.moveDirectionGet">
            <summary>设置 ControllerColliderHit.get_moveDirection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.moveLengthGet">
            <summary>设置 ControllerColliderHit.get_moveLength() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.normalGet">
            <summary>设置 ControllerColliderHit.get_normal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.pointGet">
            <summary>设置 ControllerColliderHit.get_point() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.pushGet">
            <summary>设置 ControllerColliderHit.get_push() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.pushSetBoolean">
            <summary>设置 ControllerColliderHit.set_push(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.rigidbodyGet">
            <summary>设置 ControllerColliderHit.get_rigidbody() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimControllerColliderHit.transformGet">
            <summary>设置 ControllerColliderHit.get_transform() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCoroutine">
            <summary>UnityEngine.Coroutine 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCoroutine.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCoroutine.#ctor(UnityEngine.Coroutine)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCoroutine.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCoroutine.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCoroutine.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCoroutine.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCoroutine.Constructor">
            <summary>设置 Coroutine.Coroutine() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCrashReport">
            <summary>UnityEngine.CrashReport 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCrashReport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCrashReport.#ctor(UnityEngine.CrashReport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCrashReport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.AllInstances.Remove">
            <summary>设置 CrashReport.Remove() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCrashReport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCrashReport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.CompareCrashReportCrashReport">
            <summary>设置 CrashReport.Compare(CrashReport c1, CrashReport c2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.ConstructorStringDateTimeString">
            <summary>设置 CrashReport.CrashReport(String id, DateTime time, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.PopulateReports">
            <summary>设置 CrashReport.PopulateReports() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.Remove">
            <summary>设置 CrashReport.Remove() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.RemoveAll">
            <summary>设置 CrashReport.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.StaticConstructor">
            <summary>设置 CrashReport.CrashReport() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.lastReportGet">
            <summary>设置 CrashReport.get_lastReport() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCrashReport.reportsGet">
            <summary>设置 CrashReport.get_reports() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCubemap">
            <summary>UnityEngine.Cubemap 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCubemap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCubemap.#ctor(UnityEngine.Cubemap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCubemap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.AllInstances.Apply">
            <summary>设置 Cubemap.Apply() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.AllInstances.ApplyBoolean">
            <summary>设置 Cubemap.Apply(Boolean updateMipmaps) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.AllInstances.GetPixelsCubemapFace">
            <summary>设置 Cubemap.GetPixels(CubemapFace face) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.AllInstances.SetPixelCubemapFaceInt32Int32Color">
            <summary>设置 Cubemap.SetPixel(CubemapFace face, Int32 x, Int32 y, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.AllInstances.SetPixelsColorArrayCubemapFace">
            <summary>设置 Cubemap.SetPixels(Color[] colors, CubemapFace face) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.AllInstances.SmoothEdges">
            <summary>设置 Cubemap.SmoothEdges() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.Apply">
            <summary>设置 Cubemap.Apply() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.ApplyBoolean">
            <summary>设置 Cubemap.Apply(Boolean updateMipmaps) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCubemap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCubemap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.ConstructorInt32TextureFormatBoolean">
            <summary>设置 Cubemap.Cubemap(Int32 size, TextureFormat format, Boolean mipmap) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.GetPixelsCubemapFace">
            <summary>设置 Cubemap.GetPixels(CubemapFace face) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.SetPixelCubemapFaceInt32Int32Color">
            <summary>设置 Cubemap.SetPixel(CubemapFace face, Int32 x, Int32 y, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.SetPixelsColorArrayCubemapFace">
            <summary>设置 Cubemap.SetPixels(Color[] colors, CubemapFace face) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCubemap.SmoothEdges">
            <summary>设置 Cubemap.SmoothEdges() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCursor">
            <summary>UnityEngine.Cursor 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCursor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCursor.#ctor(UnityEngine.Cursor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimCursor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCursor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimCursor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCursor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCursor.Constructor">
            <summary>设置 Cursor.Cursor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCursor.SetCursorTexture2DCursorMode">
            <summary>设置 Cursor.SetCursor(Texture2D texture, CursorMode cursorMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimCursor.SetCursorTexture2DVector2CursorMode">
            <summary>设置 Cursor.SetCursor(Texture2D texture, Vector2 hotspot, CursorMode cursorMode) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimDebug">
            <summary>UnityEngine.Debug 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDebug.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDebug.#ctor(UnityEngine.Debug)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimDebug.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDebug.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDebug.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.Constructor">
            <summary>设置 Debug.Debug() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.DrawLineVector3Vector3">
            <summary>设置 Debug.DrawLine(Vector3 start, Vector3 end) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.DrawLineVector3Vector3Color">
            <summary>设置 Debug.DrawLine(Vector3 start, Vector3 end, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.DrawLineVector3Vector3ColorSingle">
            <summary>设置 Debug.DrawLine(Vector3 start, Vector3 end, Color color, Single duration) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.DrawLineVector3Vector3ColorSingleBoolean">
            <summary>设置 Debug.DrawLine(Vector3 start, Vector3 end, Color color, Single duration, Boolean depthTest) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.DrawRayVector3Vector3">
            <summary>设置 Debug.DrawRay(Vector3 start, Vector3 dir) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.DrawRayVector3Vector3Color">
            <summary>设置 Debug.DrawRay(Vector3 start, Vector3 dir, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.DrawRayVector3Vector3ColorSingle">
            <summary>设置 Debug.DrawRay(Vector3 start, Vector3 dir, Color color, Single duration) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.DrawRayVector3Vector3ColorSingleBoolean">
            <summary>设置 Debug.DrawRay(Vector3 start, Vector3 dir, Color color, Single duration, Boolean depthTest) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.LogErrorObject">
            <summary>设置 Debug.LogError(Object message) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.LogErrorObjectObject">
            <summary>设置 Debug.LogError(Object message, Object context) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.LogExceptionException">
            <summary>设置 Debug.LogException(Exception exception) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.LogExceptionExceptionObject">
            <summary>设置 Debug.LogException(Exception exception, Object context) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.LogObject">
            <summary>设置 Debug.Log(Object message) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.LogObjectObject">
            <summary>设置 Debug.Log(Object message, Object context) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.LogWarningObject">
            <summary>设置 Debug.LogWarning(Object message) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDebug.LogWarningObjectObject">
            <summary>设置 Debug.LogWarning(Object message, Object context) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimDetailPrototype">
            <summary>UnityEngine.DetailPrototype 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDetailPrototype.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDetailPrototype.#ctor(UnityEngine.DetailPrototype)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimDetailPrototype.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.bendFactorGet">
            <summary>设置 DetailPrototype.get_bendFactor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.bendFactorSetSingle">
            <summary>设置 DetailPrototype.set_bendFactor(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.dryColorGet">
            <summary>设置 DetailPrototype.get_dryColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.dryColorSetColor">
            <summary>设置 DetailPrototype.set_dryColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.healthyColorGet">
            <summary>设置 DetailPrototype.get_healthyColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.healthyColorSetColor">
            <summary>设置 DetailPrototype.set_healthyColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.maxHeightGet">
            <summary>设置 DetailPrototype.get_maxHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.maxHeightSetSingle">
            <summary>设置 DetailPrototype.set_maxHeight(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.maxWidthGet">
            <summary>设置 DetailPrototype.get_maxWidth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.maxWidthSetSingle">
            <summary>设置 DetailPrototype.set_maxWidth(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.minHeightGet">
            <summary>设置 DetailPrototype.get_minHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.minHeightSetSingle">
            <summary>设置 DetailPrototype.set_minHeight(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.minWidthGet">
            <summary>设置 DetailPrototype.get_minWidth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.minWidthSetSingle">
            <summary>设置 DetailPrototype.set_minWidth(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.noiseSpreadGet">
            <summary>设置 DetailPrototype.get_noiseSpread() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.noiseSpreadSetSingle">
            <summary>设置 DetailPrototype.set_noiseSpread(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.prototypeGet">
            <summary>设置 DetailPrototype.get_prototype() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.prototypeSetGameObject">
            <summary>设置 DetailPrototype.set_prototype(GameObject value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.prototypeTextureGet">
            <summary>设置 DetailPrototype.get_prototypeTexture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.prototypeTextureSetTexture2D">
            <summary>设置 DetailPrototype.set_prototypeTexture(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.renderModeGet">
            <summary>设置 DetailPrototype.get_renderMode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.renderModeSetDetailRenderMode">
            <summary>设置 DetailPrototype.set_renderMode(DetailRenderMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.usePrototypeMeshGet">
            <summary>设置 DetailPrototype.get_usePrototypeMesh() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.AllInstances.usePrototypeMeshSetBoolean">
            <summary>设置 DetailPrototype.set_usePrototypeMesh(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDetailPrototype.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDetailPrototype.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.Constructor">
            <summary>设置 DetailPrototype.DetailPrototype() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.bendFactorGet">
            <summary>设置 DetailPrototype.get_bendFactor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.bendFactorSetSingle">
            <summary>设置 DetailPrototype.set_bendFactor(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.dryColorGet">
            <summary>设置 DetailPrototype.get_dryColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.dryColorSetColor">
            <summary>设置 DetailPrototype.set_dryColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.healthyColorGet">
            <summary>设置 DetailPrototype.get_healthyColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.healthyColorSetColor">
            <summary>设置 DetailPrototype.set_healthyColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.maxHeightGet">
            <summary>设置 DetailPrototype.get_maxHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.maxHeightSetSingle">
            <summary>设置 DetailPrototype.set_maxHeight(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.maxWidthGet">
            <summary>设置 DetailPrototype.get_maxWidth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.maxWidthSetSingle">
            <summary>设置 DetailPrototype.set_maxWidth(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.minHeightGet">
            <summary>设置 DetailPrototype.get_minHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.minHeightSetSingle">
            <summary>设置 DetailPrototype.set_minHeight(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.minWidthGet">
            <summary>设置 DetailPrototype.get_minWidth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.minWidthSetSingle">
            <summary>设置 DetailPrototype.set_minWidth(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.noiseSpreadGet">
            <summary>设置 DetailPrototype.get_noiseSpread() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.noiseSpreadSetSingle">
            <summary>设置 DetailPrototype.set_noiseSpread(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.prototypeGet">
            <summary>设置 DetailPrototype.get_prototype() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.prototypeSetGameObject">
            <summary>设置 DetailPrototype.set_prototype(GameObject value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.prototypeTextureGet">
            <summary>设置 DetailPrototype.get_prototypeTexture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.prototypeTextureSetTexture2D">
            <summary>设置 DetailPrototype.set_prototypeTexture(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.renderModeGet">
            <summary>设置 DetailPrototype.get_renderMode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.renderModeSetDetailRenderMode">
            <summary>设置 DetailPrototype.set_renderMode(DetailRenderMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.usePrototypeMeshGet">
            <summary>设置 DetailPrototype.get_usePrototypeMesh() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDetailPrototype.usePrototypeMeshSetBoolean">
            <summary>设置 DetailPrototype.set_usePrototypeMesh(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimDisplay">
            <summary>UnityEngine.Display 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDisplay.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDisplay.#ctor(UnityEngine.Display)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimDisplay.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.AllInstances.SetRenderingResolutionInt32Int32">
            <summary>设置 Display.SetRenderingResolution(Int32 w, Int32 h) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.AllInstances.colorBufferGet">
            <summary>设置 Display.get_colorBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.AllInstances.depthBufferGet">
            <summary>设置 Display.get_depthBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.AllInstances.renderingHeightGet">
            <summary>设置 Display.get_renderingHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.AllInstances.renderingWidthGet">
            <summary>设置 Display.get_renderingWidth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.AllInstances.systemHeightGet">
            <summary>设置 Display.get_systemHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.AllInstances.systemWidthGet">
            <summary>设置 Display.get_systemWidth() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDisplay.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDisplay.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.Constructor">
            <summary>设置 Display.Display() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.ConstructorIntPtr">
            <summary>设置 Display.Display(IntPtr nativeDisplay) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.FireDisplaysUpdated">
            <summary>设置 Display.FireDisplaysUpdated() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.RecreateDisplayListIntPtrArray">
            <summary>设置 Display.RecreateDisplayList(IntPtr[] nativeDisplay) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.SetRenderingResolutionInt32Int32">
            <summary>设置 Display.SetRenderingResolution(Int32 w, Int32 h) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.StaticConstructor">
            <summary>设置 Display.Display() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.colorBufferGet">
            <summary>设置 Display.get_colorBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.depthBufferGet">
            <summary>设置 Display.get_depthBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.mainGet">
            <summary>设置 Display.get_main() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.onDisplaysUpdatedAddDisplayDisplaysUpdatedDelegate">
            <summary>设置 Display.add_onDisplaysUpdated(DisplaysUpdatedDelegate value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.onDisplaysUpdatedRemoveDisplayDisplaysUpdatedDelegate">
            <summary>设置 Display.remove_onDisplaysUpdated(DisplaysUpdatedDelegate value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.renderingHeightGet">
            <summary>设置 Display.get_renderingHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.renderingWidthGet">
            <summary>设置 Display.get_renderingWidth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.systemHeightGet">
            <summary>设置 Display.get_systemHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDisplay.systemWidthGet">
            <summary>设置 Display.get_systemWidth() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimDistanceJoint2D">
            <summary>UnityEngine.DistanceJoint2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDistanceJoint2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDistanceJoint2D.#ctor(UnityEngine.DistanceJoint2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimDistanceJoint2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.AllInstances.anchorGet">
            <summary>设置 DistanceJoint2D.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.AllInstances.anchorSetVector2">
            <summary>设置 DistanceJoint2D.set_anchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.AllInstances.connectedAnchorGet">
            <summary>设置 DistanceJoint2D.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.AllInstances.connectedAnchorSetVector2">
            <summary>设置 DistanceJoint2D.set_connectedAnchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDistanceJoint2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimDistanceJoint2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.Constructor">
            <summary>设置 DistanceJoint2D.DistanceJoint2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.anchorGet">
            <summary>设置 DistanceJoint2D.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.anchorSetVector2">
            <summary>设置 DistanceJoint2D.set_anchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.connectedAnchorGet">
            <summary>设置 DistanceJoint2D.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimDistanceJoint2D.connectedAnchorSetVector2">
            <summary>设置 DistanceJoint2D.set_connectedAnchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimEdgeCollider2D">
            <summary>UnityEngine.EdgeCollider2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimEdgeCollider2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimEdgeCollider2D.#ctor(UnityEngine.EdgeCollider2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimEdgeCollider2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimEdgeCollider2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimEdgeCollider2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEdgeCollider2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEdgeCollider2D.Constructor">
            <summary>设置 EdgeCollider2D.EdgeCollider2D() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimEvent">
            <summary>UnityEngine.Event 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimEvent.#ctor(UnityEngine.Event)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.EqualsObject">
            <summary>设置 Event.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.GetHashCode01">
            <summary>设置 Event.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.Internal_SetMouseDeltaVector2">
            <summary>设置 Event.Internal_SetMouseDelta(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.Internal_SetMousePositionVector2">
            <summary>设置 Event.Internal_SetMousePosition(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.ToString01">
            <summary>设置 Event.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.altGet">
            <summary>设置 Event.get_alt() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.altSetBoolean">
            <summary>设置 Event.set_alt(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.capsLockGet">
            <summary>设置 Event.get_capsLock() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.capsLockSetBoolean">
            <summary>设置 Event.set_capsLock(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.commandGet">
            <summary>设置 Event.get_command() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.commandSetBoolean">
            <summary>设置 Event.set_command(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.controlGet">
            <summary>设置 Event.get_control() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.controlSetBoolean">
            <summary>设置 Event.set_control(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.deltaGet">
            <summary>设置 Event.get_delta() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.deltaSetVector2">
            <summary>设置 Event.set_delta(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.functionKeyGet">
            <summary>设置 Event.get_functionKey() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.isKeyGet">
            <summary>设置 Event.get_isKey() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.isMouseGet">
            <summary>设置 Event.get_isMouse() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.mousePositionGet">
            <summary>设置 Event.get_mousePosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.mousePositionSetVector2">
            <summary>设置 Event.set_mousePosition(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.mouseRayGet">
            <summary>设置 Event.get_mouseRay() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.mouseRaySetRay">
            <summary>设置 Event.set_mouseRay(Ray value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.numericGet">
            <summary>设置 Event.get_numeric() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.numericSetBoolean">
            <summary>设置 Event.set_numeric(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.shiftGet">
            <summary>设置 Event.get_shift() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.AllInstances.shiftSetBoolean">
            <summary>设置 Event.set_shift(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.Constructor">
            <summary>设置 Event.Event() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.ConstructorEvent">
            <summary>设置 Event.Event(Event other) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.ConstructorIntPtr">
            <summary>设置 Event.Event(IntPtr ptr) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.EqualsObject">
            <summary>设置 Event.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.GetHashCode">
            <summary>设置 Event.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.Internal_MakeMasterEventCurrent">
            <summary>设置 Event.Internal_MakeMasterEventCurrent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.Internal_SetMouseDeltaVector2">
            <summary>设置 Event.Internal_SetMouseDelta(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.Internal_SetMousePositionVector2">
            <summary>设置 Event.Internal_SetMousePosition(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.KeyboardEventString">
            <summary>设置 Event.KeyboardEvent(String key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.ToString">
            <summary>设置 Event.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.altGet">
            <summary>设置 Event.get_alt() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.altSetBoolean">
            <summary>设置 Event.set_alt(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.capsLockGet">
            <summary>设置 Event.get_capsLock() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.capsLockSetBoolean">
            <summary>设置 Event.set_capsLock(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.commandGet">
            <summary>设置 Event.get_command() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.commandSetBoolean">
            <summary>设置 Event.set_command(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.controlGet">
            <summary>设置 Event.get_control() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.controlSetBoolean">
            <summary>设置 Event.set_control(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.currentGet">
            <summary>设置 Event.get_current() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.currentSetEvent">
            <summary>设置 Event.set_current(Event value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.deltaGet">
            <summary>设置 Event.get_delta() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.deltaSetVector2">
            <summary>设置 Event.set_delta(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.functionKeyGet">
            <summary>设置 Event.get_functionKey() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.isKeyGet">
            <summary>设置 Event.get_isKey() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.isMouseGet">
            <summary>设置 Event.get_isMouse() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.mousePositionGet">
            <summary>设置 Event.get_mousePosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.mousePositionSetVector2">
            <summary>设置 Event.set_mousePosition(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.mouseRayGet">
            <summary>设置 Event.get_mouseRay() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.mouseRaySetRay">
            <summary>设置 Event.set_mouseRay(Ray value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.numericGet">
            <summary>设置 Event.get_numeric() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.numericSetBoolean">
            <summary>设置 Event.set_numeric(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.shiftGet">
            <summary>设置 Event.get_shift() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimEvent.shiftSetBoolean">
            <summary>设置 Event.set_shift(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimExecuteInEditMode">
            <summary>UnityEngine.ExecuteInEditMode 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExecuteInEditMode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExecuteInEditMode.#ctor(UnityEngine.ExecuteInEditMode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimExecuteInEditMode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExecuteInEditMode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExecuteInEditMode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimExecuteInEditMode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimExecuteInEditMode.Constructor">
            <summary>设置 ExecuteInEditMode.ExecuteInEditMode() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimExitGUIException">
            <summary>UnityEngine.ExitGUIException 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExitGUIException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExitGUIException.#ctor(UnityEngine.ExitGUIException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimExitGUIException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExitGUIException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExitGUIException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimExitGUIException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimExitGUIException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimExitGUIException.Constructor">
            <summary>设置 ExitGUIException.ExitGUIException() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimFixedJoint">
            <summary>UnityEngine.FixedJoint 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFixedJoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFixedJoint.#ctor(UnityEngine.FixedJoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimFixedJoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFixedJoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFixedJoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFixedJoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFixedJoint.Constructor">
            <summary>设置 FixedJoint.FixedJoint() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimFlare">
            <summary>UnityEngine.Flare 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFlare.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFlare.#ctor(UnityEngine.Flare)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimFlare.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFlare.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFlare.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFlare.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFlare.Constructor">
            <summary>设置 Flare.Flare() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimFont">
            <summary>UnityEngine.Font 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFont.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFont.#ctor(UnityEngine.Font)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimFont.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.GetCharacterInfoCharCharacterInfoOut">
            <summary>设置 Font.GetCharacterInfo(Char ch, CharacterInfo&amp; info) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.GetCharacterInfoCharCharacterInfoOutInt32">
            <summary>设置 Font.GetCharacterInfo(Char ch, CharacterInfo&amp; info, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.InvokeFontTextureRebuildCallback_Internal">
            <summary>设置 Font.InvokeFontTextureRebuildCallback_Internal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.RequestCharactersInTextureString">
            <summary>设置 Font.RequestCharactersInTexture(String characters) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.RequestCharactersInTextureStringInt32">
            <summary>设置 Font.RequestCharactersInTexture(String characters, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.m_FontTextureRebuildCallbackAddFontFontTextureRebuildCallback">
            <summary>设置 Font.add_m_FontTextureRebuildCallback(FontTextureRebuildCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.m_FontTextureRebuildCallbackRemoveFontFontTextureRebuildCallback">
            <summary>设置 Font.remove_m_FontTextureRebuildCallback(FontTextureRebuildCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.textureRebuildCallbackGet">
            <summary>设置 Font.get_textureRebuildCallback() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.AllInstances.textureRebuildCallbackSetFontFontTextureRebuildCallback">
            <summary>设置 Font.set_textureRebuildCallback(FontTextureRebuildCallback value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFont.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimFont.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.Constructor">
            <summary>设置 Font.Font() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.ConstructorString">
            <summary>设置 Font.Font(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.GetCharacterInfoCharCharacterInfoOut">
            <summary>设置 Font.GetCharacterInfo(Char ch, CharacterInfo&amp; info) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.InvokeFontTextureRebuildCallback_Internal">
            <summary>设置 Font.InvokeFontTextureRebuildCallback_Internal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.RequestCharactersInTextureString">
            <summary>设置 Font.RequestCharactersInTexture(String characters) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.RequestCharactersInTextureStringInt32">
            <summary>设置 Font.RequestCharactersInTexture(String characters, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.m_FontTextureRebuildCallbackAddFontFontTextureRebuildCallback">
            <summary>设置 Font.add_m_FontTextureRebuildCallback(FontTextureRebuildCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.m_FontTextureRebuildCallbackRemoveFontFontTextureRebuildCallback">
            <summary>设置 Font.remove_m_FontTextureRebuildCallback(FontTextureRebuildCallback value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.textureRebuildCallbackGet">
            <summary>设置 Font.get_textureRebuildCallback() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimFont.textureRebuildCallbackSetFontFontTextureRebuildCallback">
            <summary>设置 Font.set_textureRebuildCallback(FontTextureRebuildCallback value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGL">
            <summary>UnityEngine.GL 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGL.#ctor(UnityEngine.GL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.ClearBooleanBooleanColor">
            <summary>设置 GL.Clear(Boolean clearDepth, Boolean clearColor, Color backgroundColor) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.ClearBooleanBooleanColorSingle">
            <summary>设置 GL.Clear(Boolean clearDepth, Boolean clearColor, Color backgroundColor, Single depth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.ColorColor">
            <summary>设置 GL.Color(Color c) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.Constructor">
            <summary>设置 GL.GL() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.GetGPUProjectionMatrixMatrix4x4Boolean">
            <summary>设置 GL.GetGPUProjectionMatrix(Matrix4x4 proj, Boolean renderIntoTexture) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.Internal_ClearBooleanBooleanColorSingle">
            <summary>设置 GL.Internal_Clear(Boolean clearDepth, Boolean clearColor, Color backgroundColor, Single depth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.LoadPixelMatrixSingleSingleSingleSingle">
            <summary>设置 GL.LoadPixelMatrix(Single left, Single right, Single bottom, Single top) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.LoadProjectionMatrixMatrix4x4">
            <summary>设置 GL.LoadProjectionMatrix(Matrix4x4 mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.MultMatrixMatrix4x4">
            <summary>设置 GL.MultMatrix(Matrix4x4 mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.MultiTexCoordInt32Vector3">
            <summary>设置 GL.MultiTexCoord(Int32 unit, Vector3 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.TexCoordVector3">
            <summary>设置 GL.TexCoord(Vector3 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.VertexVector3">
            <summary>设置 GL.Vertex(Vector3 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.ViewportRect">
            <summary>设置 GL.Viewport(Rect pixelRect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.modelviewGet">
            <summary>设置 GL.get_modelview() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGL.modelviewSetMatrix4x4">
            <summary>设置 GL.set_modelview(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUI">
            <summary>UnityEngine.GUI 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUI.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUI.#ctor(UnityEngine.GUI)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUI.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginGroupRect">
            <summary>设置 GUI.BeginGroup(Rect position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginGroupRectGUIContent">
            <summary>设置 GUI.BeginGroup(Rect position, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginGroupRectGUIContentGUIStyle">
            <summary>设置 GUI.BeginGroup(Rect position, GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginGroupRectGUIStyle">
            <summary>设置 GUI.BeginGroup(Rect position, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginGroupRectString">
            <summary>设置 GUI.BeginGroup(Rect position, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginGroupRectStringGUIStyle">
            <summary>设置 GUI.BeginGroup(Rect position, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginGroupRectTexture">
            <summary>设置 GUI.BeginGroup(Rect position, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginGroupRectTextureGUIStyle">
            <summary>设置 GUI.BeginGroup(Rect position, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginScrollViewRectVector2Rect">
            <summary>设置 GUI.BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginScrollViewRectVector2RectBooleanBoolean">
            <summary>设置 GUI.BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, Boolean alwaysShowHorizontal, Boolean alwaysShowVertical) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginScrollViewRectVector2RectBooleanBooleanGUIStyleGUIStyle">
            <summary>设置 GUI.BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, Boolean alwaysShowHorizontal, Boolean alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginScrollViewRectVector2RectBooleanBooleanGUIStyleGUIStyleGUIStyle">
            <summary>设置 GUI.BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, Boolean alwaysShowHorizontal, Boolean alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUIStyle background) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginScrollViewRectVector2RectGUIStyleGUIStyle">
            <summary>设置 GUI.BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BeginWindowsInt32Int32">
            <summary>设置 GUI.BeginWindows(Int32 skinMode, Int32 editorWindowInstanceID) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUI.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUI.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BoxRectGUIContent">
            <summary>设置 GUI.Box(Rect position, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BoxRectGUIContentGUIStyle">
            <summary>设置 GUI.Box(Rect position, GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BoxRectString">
            <summary>设置 GUI.Box(Rect position, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BoxRectStringGUIStyle">
            <summary>设置 GUI.Box(Rect position, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BoxRectTexture">
            <summary>设置 GUI.Box(Rect position, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.BoxRectTextureGUIStyle">
            <summary>设置 GUI.Box(Rect position, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ButtonRectGUIContent">
            <summary>设置 GUI.Button(Rect position, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ButtonRectGUIContentGUIStyle">
            <summary>设置 GUI.Button(Rect position, GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ButtonRectString">
            <summary>设置 GUI.Button(Rect position, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ButtonRectStringGUIStyle">
            <summary>设置 GUI.Button(Rect position, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ButtonRectTexture">
            <summary>设置 GUI.Button(Rect position, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ButtonRectTextureGUIStyle">
            <summary>设置 GUI.Button(Rect position, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.CalcMouseRectsRectInt32Int32SingleSingleGUIStyleGUIStyleGUIStyleGUIStyleBoolean">
            <summary>设置 GUI.CalcMouseRects(Rect position, Int32 count, Int32 xCount, Single elemWidth, Single elemHeight, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle, Boolean addBorders) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.CalcTotalHorizSpacingInt32GUIStyleGUIStyleGUIStyleGUIStyle">
            <summary>设置 GUI.CalcTotalHorizSpacing(Int32 xCount, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.CalculateScaledTextureRectsRectScaleModeSingleRectRefRectRef">
            <summary>设置 GUI.CalculateScaledTextureRects(Rect position, ScaleMode scaleMode, Single imageAspect, Rect&amp; outScreenRect, Rect&amp; outSourceRect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.CallWindowDelegateGUIWindowFunctionInt32GUISkinInt32SingleSingleGUIStyle">
            <summary>设置 GUI.CallWindowDelegate(WindowFunction func, Int32 id, GUISkin _skin, Int32 forceRect, Single width, Single height, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.Constructor">
            <summary>设置 GUI.GUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoBeginScrollViewRectVector2RectBooleanBooleanGUIStyleGUIStyleGUIStyle">
            <summary>设置 GUI.DoBeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, Boolean alwaysShowHorizontal, Boolean alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUIStyle background) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoButtonGridRectInt32GUIContentArrayInt32GUIStyleGUIStyleGUIStyleGUIStyle">
            <summary>设置 GUI.DoButtonGrid(Rect position, Int32 selected, GUIContent[] contents, Int32 xCount, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoButtonRectGUIContentIntPtr">
            <summary>设置 GUI.DoButton(Rect position, GUIContent content, IntPtr style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoLabelRectGUIContentIntPtr">
            <summary>设置 GUI.DoLabel(Rect position, GUIContent content, IntPtr style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoModalWindowInt32RectGUIWindowFunctionGUIContentGUIStyleGUISkin">
            <summary>设置 GUI.DoModalWindow(Int32 id, Rect clientRect, WindowFunction func, GUIContent content, GUIStyle style, GUISkin skin) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoRepeatButtonRectGUIContentGUIStyleFocusType">
            <summary>设置 GUI.DoRepeatButton(Rect position, GUIContent content, GUIStyle style, FocusType focusType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoTextFieldRectInt32GUIContentBooleanInt32GUIStyle">
            <summary>设置 GUI.DoTextField(Rect position, Int32 id, GUIContent content, Boolean multiline, Int32 maxLength, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoToggleRectInt32BooleanGUIContentIntPtr">
            <summary>设置 GUI.DoToggle(Rect position, Int32 id, Boolean value, GUIContent content, IntPtr style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DoWindowInt32RectGUIWindowFunctionGUIContentGUIStyleGUISkinBoolean">
            <summary>设置 GUI.DoWindow(Int32 id, Rect clientRect, WindowFunction func, GUIContent title, GUIStyle style, GUISkin skin, Boolean forceRectOnLayout) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DragWindow">
            <summary>设置 GUI.DragWindow() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DragWindowRect">
            <summary>设置 GUI.DragWindow(Rect position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DrawTextureRectTexture">
            <summary>设置 GUI.DrawTexture(Rect position, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DrawTextureRectTextureScaleMode">
            <summary>设置 GUI.DrawTexture(Rect position, Texture image, ScaleMode scaleMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DrawTextureRectTextureScaleModeBoolean">
            <summary>设置 GUI.DrawTexture(Rect position, Texture image, ScaleMode scaleMode, Boolean alphaBlend) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DrawTextureRectTextureScaleModeBooleanSingle">
            <summary>设置 GUI.DrawTexture(Rect position, Texture image, ScaleMode scaleMode, Boolean alphaBlend, Single imageAspect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DrawTextureWithTexCoordsRectTextureRect">
            <summary>设置 GUI.DrawTextureWithTexCoords(Rect position, Texture image, Rect texCoords) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.DrawTextureWithTexCoordsRectTextureRectBoolean">
            <summary>设置 GUI.DrawTextureWithTexCoords(Rect position, Texture image, Rect texCoords, Boolean alphaBlend) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.EndGroup">
            <summary>设置 GUI.EndGroup() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.EndScrollView">
            <summary>设置 GUI.EndScrollView() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.EndScrollViewBoolean">
            <summary>设置 GUI.EndScrollView(Boolean handleScrollWheel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.EndWindows">
            <summary>设置 GUI.EndWindows() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.FindStylesGUIStyleRefGUIStyleOutGUIStyleOutGUIStyleOutStringStringString">
            <summary>设置 GUI.FindStyles(GUIStyle&amp; style, GUIStyle&amp; firstStyle, GUIStyle&amp; midStyle, GUIStyle&amp; lastStyle, String first, String mid, String last) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.GetButtonGridMouseSelectionRectArrayVector2Boolean">
            <summary>设置 GUI.GetButtonGridMouseSelection(Rect[] buttonRects, Vector2 mousePos, Boolean findNearest) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.HorizontalScrollbarRectSingleSingleSingleSingle">
            <summary>设置 GUI.HorizontalScrollbar(Rect position, Single value, Single size, Single leftValue, Single rightValue) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.HorizontalScrollbarRectSingleSingleSingleSingleGUIStyle">
            <summary>设置 GUI.HorizontalScrollbar(Rect position, Single value, Single size, Single leftValue, Single rightValue, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.HorizontalSliderRectSingleSingleSingle">
            <summary>设置 GUI.HorizontalSlider(Rect position, Single value, Single leftValue, Single rightValue) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.HorizontalSliderRectSingleSingleSingleGUIStyleGUIStyle">
            <summary>设置 GUI.HorizontalSlider(Rect position, Single value, Single leftValue, Single rightValue, GUIStyle slider, GUIStyle thumb) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.LabelRectGUIContent">
            <summary>设置 GUI.Label(Rect position, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.LabelRectGUIContentGUIStyle">
            <summary>设置 GUI.Label(Rect position, GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.LabelRectString">
            <summary>设置 GUI.Label(Rect position, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.LabelRectStringGUIStyle">
            <summary>设置 GUI.Label(Rect position, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.LabelRectTexture">
            <summary>设置 GUI.Label(Rect position, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.LabelRectTextureGUIStyle">
            <summary>设置 GUI.Label(Rect position, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ModalWindowInt32RectGUIWindowFunctionGUIContent">
            <summary>设置 GUI.ModalWindow(Int32 id, Rect clientRect, WindowFunction func, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ModalWindowInt32RectGUIWindowFunctionGUIContentGUIStyle">
            <summary>设置 GUI.ModalWindow(Int32 id, Rect clientRect, WindowFunction func, GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ModalWindowInt32RectGUIWindowFunctionString">
            <summary>设置 GUI.ModalWindow(Int32 id, Rect clientRect, WindowFunction func, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ModalWindowInt32RectGUIWindowFunctionStringGUIStyle">
            <summary>设置 GUI.ModalWindow(Int32 id, Rect clientRect, WindowFunction func, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ModalWindowInt32RectGUIWindowFunctionTexture">
            <summary>设置 GUI.ModalWindow(Int32 id, Rect clientRect, WindowFunction func, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ModalWindowInt32RectGUIWindowFunctionTextureGUIStyle">
            <summary>设置 GUI.ModalWindow(Int32 id, Rect clientRect, WindowFunction func, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.PasswordFieldGetStrToShowStringChar">
            <summary>设置 GUI.PasswordFieldGetStrToShow(String password, Char maskChar) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.PasswordFieldRectStringChar">
            <summary>设置 GUI.PasswordField(Rect position, String password, Char maskChar) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.PasswordFieldRectStringCharGUIStyle">
            <summary>设置 GUI.PasswordField(Rect position, String password, Char maskChar, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.PasswordFieldRectStringCharInt32">
            <summary>设置 GUI.PasswordField(Rect position, String password, Char maskChar, Int32 maxLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.PasswordFieldRectStringCharInt32GUIStyle">
            <summary>设置 GUI.PasswordField(Rect position, String password, Char maskChar, Int32 maxLength, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.RepeatButtonRectGUIContent">
            <summary>设置 GUI.RepeatButton(Rect position, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.RepeatButtonRectGUIContentGUIStyle">
            <summary>设置 GUI.RepeatButton(Rect position, GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.RepeatButtonRectString">
            <summary>设置 GUI.RepeatButton(Rect position, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.RepeatButtonRectStringGUIStyle">
            <summary>设置 GUI.RepeatButton(Rect position, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.RepeatButtonRectTexture">
            <summary>设置 GUI.RepeatButton(Rect position, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.RepeatButtonRectTextureGUIStyle">
            <summary>设置 GUI.RepeatButton(Rect position, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ScrollToRect">
            <summary>设置 GUI.ScrollTo(Rect position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ScrollTowardsRectSingle">
            <summary>设置 GUI.ScrollTowards(Rect position, Single maxDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ScrollerRectSingleSingleSingleSingleGUIStyleGUIStyleGUIStyleGUIStyleBoolean">
            <summary>设置 GUI.Scroller(Rect position, Single value, Single size, Single leftValue, Single rightValue, GUIStyle slider, GUIStyle thumb, GUIStyle leftButton, GUIStyle rightButton, Boolean horiz) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ScrollerRepeatButtonInt32RectGUIStyle">
            <summary>设置 GUI.ScrollerRepeatButton(Int32 scrollerID, Rect rect, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.SelectionGridRectInt32GUIContentArrayInt32">
            <summary>设置 GUI.SelectionGrid(Rect position, Int32 selected, GUIContent[] content, Int32 xCount) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.SelectionGridRectInt32GUIContentArrayInt32GUIStyle">
            <summary>设置 GUI.SelectionGrid(Rect position, Int32 selected, GUIContent[] contents, Int32 xCount, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.SelectionGridRectInt32StringArrayInt32">
            <summary>设置 GUI.SelectionGrid(Rect position, Int32 selected, String[] texts, Int32 xCount) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.SelectionGridRectInt32StringArrayInt32GUIStyle">
            <summary>设置 GUI.SelectionGrid(Rect position, Int32 selected, String[] texts, Int32 xCount, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.SelectionGridRectInt32TextureArrayInt32">
            <summary>设置 GUI.SelectionGrid(Rect position, Int32 selected, Texture[] images, Int32 xCount) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.SelectionGridRectInt32TextureArrayInt32GUIStyle">
            <summary>设置 GUI.SelectionGrid(Rect position, Int32 selected, Texture[] images, Int32 xCount, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.SliderRectSingleSingleSingleSingleGUIStyleGUIStyleBooleanInt32">
            <summary>设置 GUI.Slider(Rect position, Single value, Single size, Single start, Single end, GUIStyle slider, GUIStyle thumb, Boolean horiz, Int32 id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.StaticConstructor">
            <summary>设置 GUI.GUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextAreaRectGUIContentInt32GUIStyle">
            <summary>设置 GUI.TextArea(Rect position, GUIContent content, Int32 maxLength, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextAreaRectString">
            <summary>设置 GUI.TextArea(Rect position, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextAreaRectStringGUIStyle">
            <summary>设置 GUI.TextArea(Rect position, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextAreaRectStringInt32">
            <summary>设置 GUI.TextArea(Rect position, String text, Int32 maxLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextAreaRectStringInt32GUIStyle">
            <summary>设置 GUI.TextArea(Rect position, String text, Int32 maxLength, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextFieldRectString">
            <summary>设置 GUI.TextField(Rect position, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextFieldRectStringGUIStyle">
            <summary>设置 GUI.TextField(Rect position, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextFieldRectStringInt32">
            <summary>设置 GUI.TextField(Rect position, String text, Int32 maxLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.TextFieldRectStringInt32GUIStyle">
            <summary>设置 GUI.TextField(Rect position, String text, Int32 maxLength, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToggleRectBooleanGUIContent">
            <summary>设置 GUI.Toggle(Rect position, Boolean value, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToggleRectBooleanGUIContentGUIStyle">
            <summary>设置 GUI.Toggle(Rect position, Boolean value, GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToggleRectBooleanString">
            <summary>设置 GUI.Toggle(Rect position, Boolean value, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToggleRectBooleanStringGUIStyle">
            <summary>设置 GUI.Toggle(Rect position, Boolean value, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToggleRectBooleanTexture">
            <summary>设置 GUI.Toggle(Rect position, Boolean value, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToggleRectBooleanTextureGUIStyle">
            <summary>设置 GUI.Toggle(Rect position, Boolean value, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToolbarRectInt32GUIContentArray">
            <summary>设置 GUI.Toolbar(Rect position, Int32 selected, GUIContent[] content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToolbarRectInt32GUIContentArrayGUIStyle">
            <summary>设置 GUI.Toolbar(Rect position, Int32 selected, GUIContent[] contents, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToolbarRectInt32StringArray">
            <summary>设置 GUI.Toolbar(Rect position, Int32 selected, String[] texts) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToolbarRectInt32StringArrayGUIStyle">
            <summary>设置 GUI.Toolbar(Rect position, Int32 selected, String[] texts, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToolbarRectInt32TextureArray">
            <summary>设置 GUI.Toolbar(Rect position, Int32 selected, Texture[] images) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.ToolbarRectInt32TextureArrayGUIStyle">
            <summary>设置 GUI.Toolbar(Rect position, Int32 selected, Texture[] images, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.VerticalScrollbarRectSingleSingleSingleSingle">
            <summary>设置 GUI.VerticalScrollbar(Rect position, Single value, Single size, Single topValue, Single bottomValue) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.VerticalScrollbarRectSingleSingleSingleSingleGUIStyle">
            <summary>设置 GUI.VerticalScrollbar(Rect position, Single value, Single size, Single topValue, Single bottomValue, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.VerticalSliderRectSingleSingleSingle">
            <summary>设置 GUI.VerticalSlider(Rect position, Single value, Single topValue, Single bottomValue) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.VerticalSliderRectSingleSingleSingleGUIStyleGUIStyle">
            <summary>设置 GUI.VerticalSlider(Rect position, Single value, Single topValue, Single bottomValue, GUIStyle slider, GUIStyle thumb) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.WindowInt32RectGUIWindowFunctionGUIContent">
            <summary>设置 GUI.Window(Int32 id, Rect clientRect, WindowFunction func, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.WindowInt32RectGUIWindowFunctionGUIContentGUIStyle">
            <summary>设置 GUI.Window(Int32 id, Rect clientRect, WindowFunction func, GUIContent title, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.WindowInt32RectGUIWindowFunctionString">
            <summary>设置 GUI.Window(Int32 id, Rect clientRect, WindowFunction func, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.WindowInt32RectGUIWindowFunctionStringGUIStyle">
            <summary>设置 GUI.Window(Int32 id, Rect clientRect, WindowFunction func, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.WindowInt32RectGUIWindowFunctionTexture">
            <summary>设置 GUI.Window(Int32 id, Rect clientRect, WindowFunction func, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.WindowInt32RectGUIWindowFunctionTextureGUIStyle">
            <summary>设置 GUI.Window(Int32 id, Rect clientRect, WindowFunction func, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.backgroundColorGet">
            <summary>设置 GUI.get_backgroundColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.backgroundColorSetColor">
            <summary>设置 GUI.set_backgroundColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.colorGet">
            <summary>设置 GUI.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.colorSetColor">
            <summary>设置 GUI.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.contentColorGet">
            <summary>设置 GUI.get_contentColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.contentColorSetColor">
            <summary>设置 GUI.set_contentColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.matrixGet">
            <summary>设置 GUI.get_matrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.matrixSetMatrix4x4">
            <summary>设置 GUI.set_matrix(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.mouseTooltipGet">
            <summary>设置 GUI.get_mouseTooltip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.nextScrollStepTimeGet">
            <summary>设置 GUI.get_nextScrollStepTime() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.nextScrollStepTimeSetDateTime">
            <summary>设置 GUI.set_nextScrollStepTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.scrollTroughSideGet">
            <summary>设置 GUI.get_scrollTroughSide() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.scrollTroughSideSetInt32">
            <summary>设置 GUI.set_scrollTroughSide(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.skinGet">
            <summary>设置 GUI.get_skin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.skinSetGUISkin">
            <summary>设置 GUI.set_skin(GUISkin value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.tooltipGet">
            <summary>设置 GUI.get_tooltip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.tooltipRectGet">
            <summary>设置 GUI.get_tooltipRect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.tooltipRectSetRect">
            <summary>设置 GUI.set_tooltipRect(Rect value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUI.tooltipSetString">
            <summary>设置 GUI.set_tooltip(String value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIContent">
            <summary>UnityEngine.GUIContent 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIContent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIContent.#ctor(UnityEngine.GUIContent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIContent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.AllInstances.hashGet">
            <summary>设置 GUIContent.get_hash() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.AllInstances.imageGet">
            <summary>设置 GUIContent.get_image() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.AllInstances.imageSetTexture">
            <summary>设置 GUIContent.set_image(Texture value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.AllInstances.textGet">
            <summary>设置 GUIContent.get_text() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.AllInstances.textSetString">
            <summary>设置 GUIContent.set_text(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.AllInstances.tooltipGet">
            <summary>设置 GUIContent.get_tooltip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.AllInstances.tooltipSetString">
            <summary>设置 GUIContent.set_tooltip(String value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIContent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIContent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.ClearStaticCache">
            <summary>设置 GUIContent.ClearStaticCache() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.Constructor">
            <summary>设置 GUIContent.GUIContent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.ConstructorGUIContent">
            <summary>设置 GUIContent.GUIContent(GUIContent src) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.ConstructorString">
            <summary>设置 GUIContent.GUIContent(String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.ConstructorStringString">
            <summary>设置 GUIContent.GUIContent(String text, String tooltip) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.ConstructorStringTexture">
            <summary>设置 GUIContent.GUIContent(String text, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.ConstructorStringTextureString">
            <summary>设置 GUIContent.GUIContent(String text, Texture image, String tooltip) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.ConstructorTexture">
            <summary>设置 GUIContent.GUIContent(Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.ConstructorTextureString">
            <summary>设置 GUIContent.GUIContent(Texture image, String tooltip) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.StaticConstructor">
            <summary>设置 GUIContent.GUIContent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.TempString">
            <summary>设置 GUIContent.Temp(String t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.TempStringArray">
            <summary>设置 GUIContent.Temp(String[] texts) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.TempStringTexture">
            <summary>设置 GUIContent.Temp(String t, Texture i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.TempTexture">
            <summary>设置 GUIContent.Temp(Texture i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.TempTextureArray">
            <summary>设置 GUIContent.Temp(Texture[] images) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.hashGet">
            <summary>设置 GUIContent.get_hash() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.imageGet">
            <summary>设置 GUIContent.get_image() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.imageSetTexture">
            <summary>设置 GUIContent.set_image(Texture value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.textGet">
            <summary>设置 GUIContent.get_text() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.textSetString">
            <summary>设置 GUIContent.set_text(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.tooltipGet">
            <summary>设置 GUIContent.get_tooltip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIContent.tooltipSetString">
            <summary>设置 GUIContent.set_tooltip(String value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIElement">
            <summary>UnityEngine.GUIElement 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIElement.#ctor(UnityEngine.GUIElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIElement.AllInstances.GetScreenRect">
            <summary>设置 GUIElement.GetScreenRect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIElement.AllInstances.HitTestVector3">
            <summary>设置 GUIElement.HitTest(Vector3 screenPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIElement.AllInstances.HitTestVector3Camera">
            <summary>设置 GUIElement.HitTest(Vector3 screenPosition, Camera camera) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIElement.Constructor">
            <summary>设置 GUIElement.GUIElement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIElement.GetScreenRect">
            <summary>设置 GUIElement.GetScreenRect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIElement.HitTestVector3">
            <summary>设置 GUIElement.HitTest(Vector3 screenPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIElement.HitTestVector3Camera">
            <summary>设置 GUIElement.HitTest(Vector3 screenPosition, Camera camera) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUILayer">
            <summary>UnityEngine.GUILayer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayer.#ctor(UnityEngine.GUILayer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUILayer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayer.AllInstances.HitTestVector3">
            <summary>设置 GUILayer.HitTest(Vector3 screenPosition) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayer.Constructor">
            <summary>设置 GUILayer.GUILayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayer.HitTestVector3">
            <summary>设置 GUILayer.HitTest(Vector3 screenPosition) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUILayout">
            <summary>UnityEngine.GUILayout 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayout.#ctor(UnityEngine.GUILayout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUILayout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginAreaRect">
            <summary>设置 GUILayout.BeginArea(Rect screenRect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginAreaRectGUIContent">
            <summary>设置 GUILayout.BeginArea(Rect screenRect, GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginAreaRectGUIContentGUIStyle">
            <summary>设置 GUILayout.BeginArea(Rect screenRect, GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginAreaRectGUIStyle">
            <summary>设置 GUILayout.BeginArea(Rect screenRect, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginAreaRectString">
            <summary>设置 GUILayout.BeginArea(Rect screenRect, String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginAreaRectStringGUIStyle">
            <summary>设置 GUILayout.BeginArea(Rect screenRect, String text, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginAreaRectTexture">
            <summary>设置 GUILayout.BeginArea(Rect screenRect, Texture image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginAreaRectTextureGUIStyle">
            <summary>设置 GUILayout.BeginArea(Rect screenRect, Texture image, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginHorizontalGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginHorizontal(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginHorizontalGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginHorizontal(GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginHorizontalGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginHorizontal(GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginHorizontalStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginHorizontal(String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginHorizontalTextureGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginHorizontal(Texture image, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginScrollViewVector2BooleanBooleanGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginScrollView(Vector2 scrollPosition, Boolean alwaysShowHorizontal, Boolean alwaysShowVertical, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginScrollViewVector2BooleanBooleanGUIStyleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginScrollView(Vector2 scrollPosition, Boolean alwaysShowHorizontal, Boolean alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginScrollViewVector2BooleanBooleanGUIStyleGUIStyleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginScrollView(Vector2 scrollPosition, Boolean alwaysShowHorizontal, Boolean alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUIStyle background, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginScrollViewVector2GUILayoutOptionArray">
            <summary>设置 GUILayout.BeginScrollView(Vector2 scrollPosition, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginScrollViewVector2GUIStyle">
            <summary>设置 GUILayout.BeginScrollView(Vector2 scrollPosition, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginScrollViewVector2GUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginScrollView(Vector2 scrollPosition, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginScrollViewVector2GUIStyleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginScrollView(Vector2 scrollPosition, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginVerticalGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginVertical(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginVerticalGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginVertical(GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginVerticalGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginVertical(GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginVerticalStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginVertical(String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BeginVerticalTextureGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.BeginVertical(Texture image, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BoxGUIContentGUILayoutOptionArray">
            <summary>设置 GUILayout.Box(GUIContent content, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BoxGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Box(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BoxStringGUILayoutOptionArray">
            <summary>设置 GUILayout.Box(String text, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BoxStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Box(String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BoxTextureGUILayoutOptionArray">
            <summary>设置 GUILayout.Box(Texture image, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.BoxTextureGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Box(Texture image, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ButtonGUIContentGUILayoutOptionArray">
            <summary>设置 GUILayout.Button(GUIContent content, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ButtonGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Button(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ButtonStringGUILayoutOptionArray">
            <summary>设置 GUILayout.Button(String text, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ButtonStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Button(String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ButtonTextureGUILayoutOptionArray">
            <summary>设置 GUILayout.Button(Texture image, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ButtonTextureGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Button(Texture image, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.Constructor">
            <summary>设置 GUILayout.GUILayout() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoBoxGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoBox(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoButtonGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoButton(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoHorizontalSliderSingleSingleSingleGUIStyleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoHorizontalSlider(Single value, Single leftValue, Single rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoLabelGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoLabel(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoRepeatButtonGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoRepeatButton(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoTextFieldStringInt32BooleanGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoTextField(String text, Int32 maxLength, Boolean multiline, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoToggleBooleanGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoToggle(Boolean value, GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoVerticalSliderSingleSingleSingleGUIStyleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoVerticalSlider(Single value, Single leftValue, Single rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.DoWindowInt32RectGUIWindowFunctionGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.DoWindow(Int32 id, Rect screenRect, WindowFunction func, GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.EndArea">
            <summary>设置 GUILayout.EndArea() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.EndHorizontal">
            <summary>设置 GUILayout.EndHorizontal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.EndScrollView">
            <summary>设置 GUILayout.EndScrollView() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.EndScrollViewBoolean">
            <summary>设置 GUILayout.EndScrollView(Boolean handleScrollWheel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.EndVertical">
            <summary>设置 GUILayout.EndVertical() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ExpandHeightBoolean">
            <summary>设置 GUILayout.ExpandHeight(Boolean expand) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ExpandWidthBoolean">
            <summary>设置 GUILayout.ExpandWidth(Boolean expand) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.FlexibleSpace">
            <summary>设置 GUILayout.FlexibleSpace() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.HeightSingle">
            <summary>设置 GUILayout.Height(Single height) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.HorizontalScrollbarSingleSingleSingleSingleGUILayoutOptionArray">
            <summary>设置 GUILayout.HorizontalScrollbar(Single value, Single size, Single leftValue, Single rightValue, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.HorizontalScrollbarSingleSingleSingleSingleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.HorizontalScrollbar(Single value, Single size, Single leftValue, Single rightValue, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.HorizontalSliderSingleSingleSingleGUILayoutOptionArray">
            <summary>设置 GUILayout.HorizontalSlider(Single value, Single leftValue, Single rightValue, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.HorizontalSliderSingleSingleSingleGUIStyleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.HorizontalSlider(Single value, Single leftValue, Single rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.LabelGUIContentGUILayoutOptionArray">
            <summary>设置 GUILayout.Label(GUIContent content, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.LabelGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Label(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.LabelStringGUILayoutOptionArray">
            <summary>设置 GUILayout.Label(String text, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.LabelStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Label(String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.LabelTextureGUILayoutOptionArray">
            <summary>设置 GUILayout.Label(Texture image, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.LabelTextureGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Label(Texture image, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.MaxHeightSingle">
            <summary>设置 GUILayout.MaxHeight(Single maxHeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.MaxWidthSingle">
            <summary>设置 GUILayout.MaxWidth(Single maxWidth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.MinHeightSingle">
            <summary>设置 GUILayout.MinHeight(Single minHeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.MinWidthSingle">
            <summary>设置 GUILayout.MinWidth(Single minWidth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.PasswordFieldStringCharGUILayoutOptionArray">
            <summary>设置 GUILayout.PasswordField(String password, Char maskChar, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.PasswordFieldStringCharGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.PasswordField(String password, Char maskChar, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.PasswordFieldStringCharInt32GUILayoutOptionArray">
            <summary>设置 GUILayout.PasswordField(String password, Char maskChar, Int32 maxLength, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.PasswordFieldStringCharInt32GUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.PasswordField(String password, Char maskChar, Int32 maxLength, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.RepeatButtonGUIContentGUILayoutOptionArray">
            <summary>设置 GUILayout.RepeatButton(GUIContent content, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.RepeatButtonGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.RepeatButton(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.RepeatButtonStringGUILayoutOptionArray">
            <summary>设置 GUILayout.RepeatButton(String text, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.RepeatButtonStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.RepeatButton(String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.RepeatButtonTextureGUILayoutOptionArray">
            <summary>设置 GUILayout.RepeatButton(Texture image, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.RepeatButtonTextureGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.RepeatButton(Texture image, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.SelectionGridInt32GUIContentArrayInt32GUILayoutOptionArray">
            <summary>设置 GUILayout.SelectionGrid(Int32 selected, GUIContent[] content, Int32 xCount, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.SelectionGridInt32GUIContentArrayInt32GUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.SelectionGrid(Int32 selected, GUIContent[] contents, Int32 xCount, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.SelectionGridInt32StringArrayInt32GUILayoutOptionArray">
            <summary>设置 GUILayout.SelectionGrid(Int32 selected, String[] texts, Int32 xCount, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.SelectionGridInt32StringArrayInt32GUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.SelectionGrid(Int32 selected, String[] texts, Int32 xCount, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.SelectionGridInt32TextureArrayInt32GUILayoutOptionArray">
            <summary>设置 GUILayout.SelectionGrid(Int32 selected, Texture[] images, Int32 xCount, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.SelectionGridInt32TextureArrayInt32GUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.SelectionGrid(Int32 selected, Texture[] images, Int32 xCount, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.SpaceSingle">
            <summary>设置 GUILayout.Space(Single pixels) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.TextAreaStringGUILayoutOptionArray">
            <summary>设置 GUILayout.TextArea(String text, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.TextAreaStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.TextArea(String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.TextAreaStringInt32GUILayoutOptionArray">
            <summary>设置 GUILayout.TextArea(String text, Int32 maxLength, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.TextAreaStringInt32GUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.TextArea(String text, Int32 maxLength, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.TextFieldStringGUILayoutOptionArray">
            <summary>设置 GUILayout.TextField(String text, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.TextFieldStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.TextField(String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.TextFieldStringInt32GUILayoutOptionArray">
            <summary>设置 GUILayout.TextField(String text, Int32 maxLength, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.TextFieldStringInt32GUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.TextField(String text, Int32 maxLength, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToggleBooleanGUIContentGUILayoutOptionArray">
            <summary>设置 GUILayout.Toggle(Boolean value, GUIContent content, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToggleBooleanGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Toggle(Boolean value, GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToggleBooleanStringGUILayoutOptionArray">
            <summary>设置 GUILayout.Toggle(Boolean value, String text, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToggleBooleanStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Toggle(Boolean value, String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToggleBooleanTextureGUILayoutOptionArray">
            <summary>设置 GUILayout.Toggle(Boolean value, Texture image, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToggleBooleanTextureGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Toggle(Boolean value, Texture image, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToolbarInt32GUIContentArrayGUILayoutOptionArray">
            <summary>设置 GUILayout.Toolbar(Int32 selected, GUIContent[] content, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToolbarInt32GUIContentArrayGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Toolbar(Int32 selected, GUIContent[] contents, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToolbarInt32StringArrayGUILayoutOptionArray">
            <summary>设置 GUILayout.Toolbar(Int32 selected, String[] texts, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToolbarInt32StringArrayGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Toolbar(Int32 selected, String[] texts, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToolbarInt32TextureArrayGUILayoutOptionArray">
            <summary>设置 GUILayout.Toolbar(Int32 selected, Texture[] images, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.ToolbarInt32TextureArrayGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Toolbar(Int32 selected, Texture[] images, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.VerticalScrollbarSingleSingleSingleSingleGUILayoutOptionArray">
            <summary>设置 GUILayout.VerticalScrollbar(Single value, Single size, Single topValue, Single bottomValue, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.VerticalScrollbarSingleSingleSingleSingleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.VerticalScrollbar(Single value, Single size, Single topValue, Single bottomValue, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.VerticalSliderSingleSingleSingleGUILayoutOptionArray">
            <summary>设置 GUILayout.VerticalSlider(Single value, Single leftValue, Single rightValue, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.VerticalSliderSingleSingleSingleGUIStyleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.VerticalSlider(Single value, Single leftValue, Single rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.WidthSingle">
            <summary>设置 GUILayout.Width(Single width) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.WindowInt32RectGUIWindowFunctionGUIContentGUILayoutOptionArray">
            <summary>设置 GUILayout.Window(Int32 id, Rect screenRect, WindowFunction func, GUIContent content, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.WindowInt32RectGUIWindowFunctionGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Window(Int32 id, Rect screenRect, WindowFunction func, GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.WindowInt32RectGUIWindowFunctionStringGUILayoutOptionArray">
            <summary>设置 GUILayout.Window(Int32 id, Rect screenRect, WindowFunction func, String text, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.WindowInt32RectGUIWindowFunctionStringGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Window(Int32 id, Rect screenRect, WindowFunction func, String text, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.WindowInt32RectGUIWindowFunctionTextureGUILayoutOptionArray">
            <summary>设置 GUILayout.Window(Int32 id, Rect screenRect, WindowFunction func, Texture image, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayout.WindowInt32RectGUIWindowFunctionTextureGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayout.Window(Int32 id, Rect screenRect, WindowFunction func, Texture image, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUILayoutOption">
            <summary>UnityEngine.GUILayoutOption 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayoutOption.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayoutOption.#ctor(UnityEngine.GUILayoutOption)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUILayoutOption.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayoutOption.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayoutOption.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutOption.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUILayoutUtility">
            <summary>UnityEngine.GUILayoutUtility 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayoutUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayoutUtility.#ctor(UnityEngine.GUILayoutUtility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUILayoutUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.BeginGroupString">
            <summary>设置 GUILayoutUtility.BeginGroup(String GroupName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.BeginInt32">
            <summary>设置 GUILayoutUtility.Begin(Int32 instanceID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.BeginWindowInt32GUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.BeginWindow(Int32 windowID, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayoutUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUILayoutUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.Constructor">
            <summary>设置 GUILayoutUtility.GUILayoutUtility() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.DoGetAspectRectSingleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.DoGetAspectRect(Single aspect, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.DoGetRectGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.DoGetRect(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.DoGetRectSingleSingleSingleSingleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.DoGetRect(Single minWidth, Single maxWidth, Single minHeight, Single maxHeight, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.EndGroupString">
            <summary>设置 GUILayoutUtility.EndGroup(String groupName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.EndLayoutGroup">
            <summary>设置 GUILayoutUtility.EndLayoutGroup() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetAspectRectSingle">
            <summary>设置 GUILayoutUtility.GetAspectRect(Single aspect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetAspectRectSingleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.GetAspectRect(Single aspect, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetAspectRectSingleGUIStyle">
            <summary>设置 GUILayoutUtility.GetAspectRect(Single aspect, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetAspectRectSingleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.GetAspectRect(Single aspect, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetLastRect">
            <summary>设置 GUILayoutUtility.GetLastRect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectGUIContentGUIStyle">
            <summary>设置 GUILayoutUtility.GetRect(GUIContent content, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectGUIContentGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.GetRect(GUIContent content, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectSingleSingle">
            <summary>设置 GUILayoutUtility.GetRect(Single width, Single height) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectSingleSingleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.GetRect(Single width, Single height, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectSingleSingleGUIStyle">
            <summary>设置 GUILayoutUtility.GetRect(Single width, Single height, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectSingleSingleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.GetRect(Single width, Single height, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectSingleSingleSingleSingle">
            <summary>设置 GUILayoutUtility.GetRect(Single minWidth, Single maxWidth, Single minHeight, Single maxHeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectSingleSingleSingleSingleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.GetRect(Single minWidth, Single maxWidth, Single minHeight, Single maxHeight, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectSingleSingleSingleSingleGUIStyle">
            <summary>设置 GUILayoutUtility.GetRect(Single minWidth, Single maxWidth, Single minHeight, Single maxHeight, GUIStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.GetRectSingleSingleSingleSingleGUIStyleGUILayoutOptionArray">
            <summary>设置 GUILayoutUtility.GetRect(Single minWidth, Single maxWidth, Single minHeight, Single maxHeight, GUIStyle style, GUILayoutOption[] options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.Internal_MoveWindowInt32Rect">
            <summary>设置 GUILayoutUtility.Internal_MoveWindow(Int32 windowID, Rect r) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.Layout">
            <summary>设置 GUILayoutUtility.Layout() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.LayoutFromEditorWindow">
            <summary>设置 GUILayoutUtility.LayoutFromEditorWindow() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.LayoutFromInspectorSingle">
            <summary>设置 GUILayoutUtility.LayoutFromInspector(Single width) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.StaticConstructor">
            <summary>设置 GUILayoutUtility.GUILayoutUtility() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUILayoutUtility.spaceStyleGet">
            <summary>设置 GUILayoutUtility.get_spaceStyle() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUISettings">
            <summary>UnityEngine.GUISettings 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUISettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUISettings.#ctor(UnityEngine.GUISettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUISettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.cursorColorGet">
            <summary>设置 GUISettings.get_cursorColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.cursorColorSetColor">
            <summary>设置 GUISettings.set_cursorColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.cursorFlashSpeedGet">
            <summary>设置 GUISettings.get_cursorFlashSpeed() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.cursorFlashSpeedSetSingle">
            <summary>设置 GUISettings.set_cursorFlashSpeed(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.doubleClickSelectsWordGet">
            <summary>设置 GUISettings.get_doubleClickSelectsWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.doubleClickSelectsWordSetBoolean">
            <summary>设置 GUISettings.set_doubleClickSelectsWord(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.selectionColorGet">
            <summary>设置 GUISettings.get_selectionColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.selectionColorSetColor">
            <summary>设置 GUISettings.set_selectionColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.tripleClickSelectsLineGet">
            <summary>设置 GUISettings.get_tripleClickSelectsLine() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.AllInstances.tripleClickSelectsLineSetBoolean">
            <summary>设置 GUISettings.set_tripleClickSelectsLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUISettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUISettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.Constructor">
            <summary>设置 GUISettings.GUISettings() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.cursorColorGet">
            <summary>设置 GUISettings.get_cursorColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.cursorColorSetColor">
            <summary>设置 GUISettings.set_cursorColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.cursorFlashSpeedGet">
            <summary>设置 GUISettings.get_cursorFlashSpeed() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.cursorFlashSpeedSetSingle">
            <summary>设置 GUISettings.set_cursorFlashSpeed(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.doubleClickSelectsWordGet">
            <summary>设置 GUISettings.get_doubleClickSelectsWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.doubleClickSelectsWordSetBoolean">
            <summary>设置 GUISettings.set_doubleClickSelectsWord(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.selectionColorGet">
            <summary>设置 GUISettings.get_selectionColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.selectionColorSetColor">
            <summary>设置 GUISettings.set_selectionColor(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.tripleClickSelectsLineGet">
            <summary>设置 GUISettings.get_tripleClickSelectsLine() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISettings.tripleClickSelectsLineSetBoolean">
            <summary>设置 GUISettings.set_tripleClickSelectsLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUISkin">
            <summary>UnityEngine.GUISkin 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUISkin.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUISkin.#ctor(UnityEngine.GUISkin)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUISkin.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.Apply">
            <summary>设置 GUISkin.Apply() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.BuildStyleCache">
            <summary>设置 GUISkin.BuildStyleCache() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.FindStyleString">
            <summary>设置 GUISkin.FindStyle(String styleName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.GetEnumerator">
            <summary>设置 GUISkin.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.GetStyleString">
            <summary>设置 GUISkin.GetStyle(String styleName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.MakeCurrent">
            <summary>设置 GUISkin.MakeCurrent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.OnEnable">
            <summary>设置 GUISkin.OnEnable() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.boxGet">
            <summary>设置 GUISkin.get_box() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.boxSetGUIStyle">
            <summary>设置 GUISkin.set_box(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.buttonGet">
            <summary>设置 GUISkin.get_button() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.buttonSetGUIStyle">
            <summary>设置 GUISkin.set_button(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.customStylesGet">
            <summary>设置 GUISkin.get_customStyles() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.customStylesSetGUIStyleArray">
            <summary>设置 GUISkin.set_customStyles(GUIStyle[] value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.fontGet">
            <summary>设置 GUISkin.get_font() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.fontSetFont">
            <summary>设置 GUISkin.set_font(Font value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalScrollbarGet">
            <summary>设置 GUISkin.get_horizontalScrollbar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalScrollbarLeftButtonGet">
            <summary>设置 GUISkin.get_horizontalScrollbarLeftButton() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalScrollbarLeftButtonSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalScrollbarLeftButton(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalScrollbarRightButtonGet">
            <summary>设置 GUISkin.get_horizontalScrollbarRightButton() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalScrollbarRightButtonSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalScrollbarRightButton(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalScrollbarSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalScrollbar(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalScrollbarThumbGet">
            <summary>设置 GUISkin.get_horizontalScrollbarThumb() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalScrollbarThumbSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalScrollbarThumb(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalSliderGet">
            <summary>设置 GUISkin.get_horizontalSlider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalSliderSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalSlider(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalSliderThumbGet">
            <summary>设置 GUISkin.get_horizontalSliderThumb() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.horizontalSliderThumbSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalSliderThumb(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.labelGet">
            <summary>设置 GUISkin.get_label() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.labelSetGUIStyle">
            <summary>设置 GUISkin.set_label(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.scrollViewGet">
            <summary>设置 GUISkin.get_scrollView() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.scrollViewSetGUIStyle">
            <summary>设置 GUISkin.set_scrollView(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.settingsGet">
            <summary>设置 GUISkin.get_settings() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.textAreaGet">
            <summary>设置 GUISkin.get_textArea() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.textAreaSetGUIStyle">
            <summary>设置 GUISkin.set_textArea(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.textFieldGet">
            <summary>设置 GUISkin.get_textField() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.textFieldSetGUIStyle">
            <summary>设置 GUISkin.set_textField(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.toggleGet">
            <summary>设置 GUISkin.get_toggle() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.toggleSetGUIStyle">
            <summary>设置 GUISkin.set_toggle(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalScrollbarDownButtonGet">
            <summary>设置 GUISkin.get_verticalScrollbarDownButton() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalScrollbarDownButtonSetGUIStyle">
            <summary>设置 GUISkin.set_verticalScrollbarDownButton(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalScrollbarGet">
            <summary>设置 GUISkin.get_verticalScrollbar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalScrollbarSetGUIStyle">
            <summary>设置 GUISkin.set_verticalScrollbar(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalScrollbarThumbGet">
            <summary>设置 GUISkin.get_verticalScrollbarThumb() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalScrollbarThumbSetGUIStyle">
            <summary>设置 GUISkin.set_verticalScrollbarThumb(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalScrollbarUpButtonGet">
            <summary>设置 GUISkin.get_verticalScrollbarUpButton() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalScrollbarUpButtonSetGUIStyle">
            <summary>设置 GUISkin.set_verticalScrollbarUpButton(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalSliderGet">
            <summary>设置 GUISkin.get_verticalSlider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalSliderSetGUIStyle">
            <summary>设置 GUISkin.set_verticalSlider(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalSliderThumbGet">
            <summary>设置 GUISkin.get_verticalSliderThumb() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.verticalSliderThumbSetGUIStyle">
            <summary>设置 GUISkin.set_verticalSliderThumb(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.windowGet">
            <summary>设置 GUISkin.get_window() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.AllInstances.windowSetGUIStyle">
            <summary>设置 GUISkin.set_window(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.Apply">
            <summary>设置 GUISkin.Apply() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUISkin.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUISkin.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.BuildStyleCache">
            <summary>设置 GUISkin.BuildStyleCache() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.Constructor">
            <summary>设置 GUISkin.GUISkin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.FindStyleString">
            <summary>设置 GUISkin.FindStyle(String styleName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.GetEnumerator">
            <summary>设置 GUISkin.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.GetStyleString">
            <summary>设置 GUISkin.GetStyle(String styleName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.MakeCurrent">
            <summary>设置 GUISkin.MakeCurrent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.OnEnable">
            <summary>设置 GUISkin.OnEnable() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.boxGet">
            <summary>设置 GUISkin.get_box() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.boxSetGUIStyle">
            <summary>设置 GUISkin.set_box(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.buttonGet">
            <summary>设置 GUISkin.get_button() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.buttonSetGUIStyle">
            <summary>设置 GUISkin.set_button(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.customStylesGet">
            <summary>设置 GUISkin.get_customStyles() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.customStylesSetGUIStyleArray">
            <summary>设置 GUISkin.set_customStyles(GUIStyle[] value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.errorGet">
            <summary>设置 GUISkin.get_error() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.fontGet">
            <summary>设置 GUISkin.get_font() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.fontSetFont">
            <summary>设置 GUISkin.set_font(Font value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalScrollbarGet">
            <summary>设置 GUISkin.get_horizontalScrollbar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalScrollbarLeftButtonGet">
            <summary>设置 GUISkin.get_horizontalScrollbarLeftButton() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalScrollbarLeftButtonSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalScrollbarLeftButton(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalScrollbarRightButtonGet">
            <summary>设置 GUISkin.get_horizontalScrollbarRightButton() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalScrollbarRightButtonSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalScrollbarRightButton(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalScrollbarSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalScrollbar(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalScrollbarThumbGet">
            <summary>设置 GUISkin.get_horizontalScrollbarThumb() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalScrollbarThumbSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalScrollbarThumb(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalSliderGet">
            <summary>设置 GUISkin.get_horizontalSlider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalSliderSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalSlider(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalSliderThumbGet">
            <summary>设置 GUISkin.get_horizontalSliderThumb() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.horizontalSliderThumbSetGUIStyle">
            <summary>设置 GUISkin.set_horizontalSliderThumb(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.labelGet">
            <summary>设置 GUISkin.get_label() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.labelSetGUIStyle">
            <summary>设置 GUISkin.set_label(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.scrollViewGet">
            <summary>设置 GUISkin.get_scrollView() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.scrollViewSetGUIStyle">
            <summary>设置 GUISkin.set_scrollView(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.settingsGet">
            <summary>设置 GUISkin.get_settings() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.textAreaGet">
            <summary>设置 GUISkin.get_textArea() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.textAreaSetGUIStyle">
            <summary>设置 GUISkin.set_textArea(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.textFieldGet">
            <summary>设置 GUISkin.get_textField() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.textFieldSetGUIStyle">
            <summary>设置 GUISkin.set_textField(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.toggleGet">
            <summary>设置 GUISkin.get_toggle() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.toggleSetGUIStyle">
            <summary>设置 GUISkin.set_toggle(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalScrollbarDownButtonGet">
            <summary>设置 GUISkin.get_verticalScrollbarDownButton() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalScrollbarDownButtonSetGUIStyle">
            <summary>设置 GUISkin.set_verticalScrollbarDownButton(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalScrollbarGet">
            <summary>设置 GUISkin.get_verticalScrollbar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalScrollbarSetGUIStyle">
            <summary>设置 GUISkin.set_verticalScrollbar(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalScrollbarThumbGet">
            <summary>设置 GUISkin.get_verticalScrollbarThumb() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalScrollbarThumbSetGUIStyle">
            <summary>设置 GUISkin.set_verticalScrollbarThumb(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalScrollbarUpButtonGet">
            <summary>设置 GUISkin.get_verticalScrollbarUpButton() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalScrollbarUpButtonSetGUIStyle">
            <summary>设置 GUISkin.set_verticalScrollbarUpButton(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalSliderGet">
            <summary>设置 GUISkin.get_verticalSlider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalSliderSetGUIStyle">
            <summary>设置 GUISkin.set_verticalSlider(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalSliderThumbGet">
            <summary>设置 GUISkin.get_verticalSliderThumb() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.verticalSliderThumbSetGUIStyle">
            <summary>设置 GUISkin.set_verticalSliderThumb(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.windowGet">
            <summary>设置 GUISkin.get_window() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUISkin.windowSetGUIStyle">
            <summary>设置 GUISkin.set_window(GUIStyle value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIStyle">
            <summary>UnityEngine.GUIStyle 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIStyle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIStyle.#ctor(UnityEngine.GUIStyle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIStyle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.CalcHeightGUIContentSingle">
            <summary>设置 GUIStyle.CalcHeight(GUIContent content, Single width) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.CalcMinMaxWidthGUIContentSingleOutSingleOut">
            <summary>设置 GUIStyle.CalcMinMaxWidth(GUIContent content, Single&amp; minWidth, Single&amp; maxWidth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.CalcScreenSizeVector2">
            <summary>设置 GUIStyle.CalcScreenSize(Vector2 contentSize) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.CalcSizeGUIContent">
            <summary>设置 GUIStyle.CalcSize(GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.CreateObjectReferences">
            <summary>设置 GUIStyle.CreateObjectReferences() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawCursorRectGUIContentInt32Int32">
            <summary>设置 GUIStyle.DrawCursor(Rect position, GUIContent content, Int32 controlID, Int32 Character) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawPrefixLabelRectGUIContentInt32">
            <summary>设置 GUIStyle.DrawPrefixLabel(Rect position, GUIContent content, Int32 controlID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawRectBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Draw(Rect position, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawRectGUIContentBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Draw(Rect position, GUIContent content, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawRectGUIContentInt32">
            <summary>设置 GUIStyle.Draw(Rect position, GUIContent content, Int32 controlID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawRectGUIContentInt32Boolean">
            <summary>设置 GUIStyle.Draw(Rect position, GUIContent content, Int32 controlID, Boolean on) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawRectStringBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Draw(Rect position, String text, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawRectTextureBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Draw(Rect position, Texture image, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawWithTextSelectionRectGUIContentInt32Int32Int32">
            <summary>设置 GUIStyle.DrawWithTextSelection(Rect position, GUIContent content, Int32 controlID, Int32 firstSelectedCharacter, Int32 lastSelectedCharacter) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.DrawWithTextSelectionRectGUIContentInt32Int32Int32Boolean">
            <summary>设置 GUIStyle.DrawWithTextSelection(Rect position, GUIContent content, Int32 controlID, Int32 firstSelectedCharacter, Int32 lastSelectedCharacter, Boolean drawSelectionAsComposition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.GetCursorPixelPositionRectGUIContentInt32">
            <summary>设置 GUIStyle.GetCursorPixelPosition(Rect position, GUIContent content, Int32 cursorStringIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.GetCursorStringIndexRectGUIContentVector2">
            <summary>设置 GUIStyle.GetCursorStringIndex(Rect position, GUIContent content, Vector2 cursorPixelPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.GetNumCharactersThatFitWithinWidthStringSingle">
            <summary>设置 GUIStyle.GetNumCharactersThatFitWithinWidth(String text, Single width) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.Internal_clipOffsetGet">
            <summary>设置 GUIStyle.get_Internal_clipOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.Internal_clipOffsetSetVector2">
            <summary>设置 GUIStyle.set_Internal_clipOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.ToString01">
            <summary>设置 GUIStyle.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.activeGet">
            <summary>设置 GUIStyle.get_active() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.activeSetGUIStyleState">
            <summary>设置 GUIStyle.set_active(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.borderGet">
            <summary>设置 GUIStyle.get_border() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.borderSetRectOffset">
            <summary>设置 GUIStyle.set_border(RectOffset value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.clipOffsetGet">
            <summary>设置 GUIStyle.get_clipOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.clipOffsetSetVector2">
            <summary>设置 GUIStyle.set_clipOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.contentOffsetGet">
            <summary>设置 GUIStyle.get_contentOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.contentOffsetSetVector2">
            <summary>设置 GUIStyle.set_contentOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.focusedGet">
            <summary>设置 GUIStyle.get_focused() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.focusedSetGUIStyleState">
            <summary>设置 GUIStyle.set_focused(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.fontGet">
            <summary>设置 GUIStyle.get_font() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.fontSetFont">
            <summary>设置 GUIStyle.set_font(Font value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.hoverGet">
            <summary>设置 GUIStyle.get_hover() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.hoverSetGUIStyleState">
            <summary>设置 GUIStyle.set_hover(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.isHeightDependantOnWidthGet">
            <summary>设置 GUIStyle.get_isHeightDependantOnWidth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.lineHeightGet">
            <summary>设置 GUIStyle.get_lineHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.marginGet">
            <summary>设置 GUIStyle.get_margin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.marginSetRectOffset">
            <summary>设置 GUIStyle.set_margin(RectOffset value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.normalGet">
            <summary>设置 GUIStyle.get_normal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.normalSetGUIStyleState">
            <summary>设置 GUIStyle.set_normal(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.onActiveGet">
            <summary>设置 GUIStyle.get_onActive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.onActiveSetGUIStyleState">
            <summary>设置 GUIStyle.set_onActive(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.onFocusedGet">
            <summary>设置 GUIStyle.get_onFocused() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.onFocusedSetGUIStyleState">
            <summary>设置 GUIStyle.set_onFocused(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.onHoverGet">
            <summary>设置 GUIStyle.get_onHover() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.onHoverSetGUIStyleState">
            <summary>设置 GUIStyle.set_onHover(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.onNormalGet">
            <summary>设置 GUIStyle.get_onNormal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.onNormalSetGUIStyleState">
            <summary>设置 GUIStyle.set_onNormal(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.overflowGet">
            <summary>设置 GUIStyle.get_overflow() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.overflowSetRectOffset">
            <summary>设置 GUIStyle.set_overflow(RectOffset value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.paddingGet">
            <summary>设置 GUIStyle.get_padding() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.AllInstances.paddingSetRectOffset">
            <summary>设置 GUIStyle.set_padding(RectOffset value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIStyle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIStyle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.CalcHeightGUIContentSingle">
            <summary>设置 GUIStyle.CalcHeight(GUIContent content, Single width) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.CalcMinMaxWidthGUIContentSingleOutSingleOut">
            <summary>设置 GUIStyle.CalcMinMaxWidth(GUIContent content, Single&amp; minWidth, Single&amp; maxWidth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.CalcScreenSizeVector2">
            <summary>设置 GUIStyle.CalcScreenSize(Vector2 contentSize) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.CalcSizeGUIContent">
            <summary>设置 GUIStyle.CalcSize(GUIContent content) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Constructor">
            <summary>设置 GUIStyle.GUIStyle() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.ConstructorGUIStyle">
            <summary>设置 GUIStyle.GUIStyle(GUIStyle other) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.CreateObjectReferences">
            <summary>设置 GUIStyle.CreateObjectReferences() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawCursorRectGUIContentInt32Int32">
            <summary>设置 GUIStyle.DrawCursor(Rect position, GUIContent content, Int32 controlID, Int32 Character) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawPrefixLabelRectGUIContentInt32">
            <summary>设置 GUIStyle.DrawPrefixLabel(Rect position, GUIContent content, Int32 controlID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawRectBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Draw(Rect position, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawRectGUIContentBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Draw(Rect position, GUIContent content, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawRectGUIContentInt32">
            <summary>设置 GUIStyle.Draw(Rect position, GUIContent content, Int32 controlID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawRectGUIContentInt32Boolean">
            <summary>设置 GUIStyle.Draw(Rect position, GUIContent content, Int32 controlID, Boolean on) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawRectStringBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Draw(Rect position, String text, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawRectTextureBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Draw(Rect position, Texture image, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawWithTextSelectionRectGUIContentInt32Int32Int32">
            <summary>设置 GUIStyle.DrawWithTextSelection(Rect position, GUIContent content, Int32 controlID, Int32 firstSelectedCharacter, Int32 lastSelectedCharacter) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.DrawWithTextSelectionRectGUIContentInt32Int32Int32Boolean">
            <summary>设置 GUIStyle.DrawWithTextSelection(Rect position, GUIContent content, Int32 controlID, Int32 firstSelectedCharacter, Int32 lastSelectedCharacter, Boolean drawSelectionAsComposition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.GetCursorPixelPositionRectGUIContentInt32">
            <summary>设置 GUIStyle.GetCursorPixelPosition(Rect position, GUIContent content, Int32 cursorStringIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.GetCursorStringIndexRectGUIContentVector2">
            <summary>设置 GUIStyle.GetCursorStringIndex(Rect position, GUIContent content, Vector2 cursorPixelPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.GetNumCharactersThatFitWithinWidthStringSingle">
            <summary>设置 GUIStyle.GetNumCharactersThatFitWithinWidth(String text, Single width) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.ImplicitOpStringGUIStyle">
            <summary>设置 GUIStyle.op_Implicit(String str) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Internal_Draw2IntPtrRectGUIContentInt32Boolean">
            <summary>设置 GUIStyle.Internal_Draw2(IntPtr style, Rect position, GUIContent content, Int32 controlID, Boolean on) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Internal_DrawCursorIntPtrRectGUIContentInt32Color">
            <summary>设置 GUIStyle.Internal_DrawCursor(IntPtr target, Rect position, GUIContent content, Int32 pos, Color cursorColor) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Internal_DrawIntPtrRectGUIContentBooleanBooleanBooleanBoolean">
            <summary>设置 GUIStyle.Internal_Draw(IntPtr target, Rect position, GUIContent content, Boolean isHover, Boolean isActive, Boolean on, Boolean hasKeyboardFocus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Internal_DrawPrefixLabelIntPtrRectGUIContentInt32Boolean">
            <summary>设置 GUIStyle.Internal_DrawPrefixLabel(IntPtr style, Rect position, GUIContent content, Int32 controlID, Boolean on) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Internal_GetCursorPixelPositionIntPtrRectGUIContentInt32Vector2Out">
            <summary>设置 GUIStyle.Internal_GetCursorPixelPosition(IntPtr target, Rect position, GUIContent content, Int32 cursorStringIndex, Vector2&amp; ret) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Internal_GetCursorStringIndexIntPtrRectGUIContentVector2">
            <summary>设置 GUIStyle.Internal_GetCursorStringIndex(IntPtr target, Rect position, GUIContent content, Vector2 cursorPixelPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Internal_clipOffsetGet">
            <summary>设置 GUIStyle.get_Internal_clipOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.Internal_clipOffsetSetVector2">
            <summary>设置 GUIStyle.set_Internal_clipOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.StaticConstructor">
            <summary>设置 GUIStyle.GUIStyle() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.ToString">
            <summary>设置 GUIStyle.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.activeGet">
            <summary>设置 GUIStyle.get_active() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.activeSetGUIStyleState">
            <summary>设置 GUIStyle.set_active(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.borderGet">
            <summary>设置 GUIStyle.get_border() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.borderSetRectOffset">
            <summary>设置 GUIStyle.set_border(RectOffset value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.clipOffsetGet">
            <summary>设置 GUIStyle.get_clipOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.clipOffsetSetVector2">
            <summary>设置 GUIStyle.set_clipOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.contentOffsetGet">
            <summary>设置 GUIStyle.get_contentOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.contentOffsetSetVector2">
            <summary>设置 GUIStyle.set_contentOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.focusedGet">
            <summary>设置 GUIStyle.get_focused() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.focusedSetGUIStyleState">
            <summary>设置 GUIStyle.set_focused(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.fontGet">
            <summary>设置 GUIStyle.get_font() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.fontSetFont">
            <summary>设置 GUIStyle.set_font(Font value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.hoverGet">
            <summary>设置 GUIStyle.get_hover() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.hoverSetGUIStyleState">
            <summary>设置 GUIStyle.set_hover(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.isHeightDependantOnWidthGet">
            <summary>设置 GUIStyle.get_isHeightDependantOnWidth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.lineHeightGet">
            <summary>设置 GUIStyle.get_lineHeight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.marginGet">
            <summary>设置 GUIStyle.get_margin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.marginSetRectOffset">
            <summary>设置 GUIStyle.set_margin(RectOffset value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.noneGet">
            <summary>设置 GUIStyle.get_none() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.normalGet">
            <summary>设置 GUIStyle.get_normal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.normalSetGUIStyleState">
            <summary>设置 GUIStyle.set_normal(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.onActiveGet">
            <summary>设置 GUIStyle.get_onActive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.onActiveSetGUIStyleState">
            <summary>设置 GUIStyle.set_onActive(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.onFocusedGet">
            <summary>设置 GUIStyle.get_onFocused() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.onFocusedSetGUIStyleState">
            <summary>设置 GUIStyle.set_onFocused(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.onHoverGet">
            <summary>设置 GUIStyle.get_onHover() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.onHoverSetGUIStyleState">
            <summary>设置 GUIStyle.set_onHover(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.onNormalGet">
            <summary>设置 GUIStyle.get_onNormal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.onNormalSetGUIStyleState">
            <summary>设置 GUIStyle.set_onNormal(GUIStyleState value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.overflowGet">
            <summary>设置 GUIStyle.get_overflow() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.overflowSetRectOffset">
            <summary>设置 GUIStyle.set_overflow(RectOffset value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.paddingGet">
            <summary>设置 GUIStyle.get_padding() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyle.paddingSetRectOffset">
            <summary>设置 GUIStyle.set_padding(RectOffset value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIStyleState">
            <summary>UnityEngine.GUIStyleState 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIStyleState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIStyleState.#ctor(UnityEngine.GUIStyleState)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIStyleState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.AllInstances.RefreshAssetReference">
            <summary>设置 GUIStyleState.RefreshAssetReference() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.AllInstances.backgroundGet">
            <summary>设置 GUIStyleState.get_background() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.AllInstances.backgroundSetTexture2D">
            <summary>设置 GUIStyleState.set_background(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.AllInstances.textColorGet">
            <summary>设置 GUIStyleState.get_textColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.AllInstances.textColorSetColor">
            <summary>设置 GUIStyleState.set_textColor(Color value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIStyleState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIStyleState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.Constructor">
            <summary>设置 GUIStyleState.GUIStyleState() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.ConstructorGUIStyleIntPtr">
            <summary>设置 GUIStyleState.GUIStyleState(GUIStyle sourceStyle, IntPtr source) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.RefreshAssetReference">
            <summary>设置 GUIStyleState.RefreshAssetReference() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.backgroundGet">
            <summary>设置 GUIStyleState.get_background() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.backgroundSetTexture2D">
            <summary>设置 GUIStyleState.set_background(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.textColorGet">
            <summary>设置 GUIStyleState.get_textColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIStyleState.textColorSetColor">
            <summary>设置 GUIStyleState.set_textColor(Color value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIText">
            <summary>UnityEngine.GUIText 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIText.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIText.#ctor(UnityEngine.GUIText)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIText.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.AllInstances.Internal_SetPixelOffsetVector2">
            <summary>设置 GUIText.Internal_SetPixelOffset(Vector2 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.AllInstances.colorGet">
            <summary>设置 GUIText.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.AllInstances.colorSetColor">
            <summary>设置 GUIText.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.AllInstances.pixelOffsetGet">
            <summary>设置 GUIText.get_pixelOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.AllInstances.pixelOffsetSetVector2">
            <summary>设置 GUIText.set_pixelOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIText.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIText.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.Constructor">
            <summary>设置 GUIText.GUIText() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.Internal_SetPixelOffsetVector2">
            <summary>设置 GUIText.Internal_SetPixelOffset(Vector2 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.colorGet">
            <summary>设置 GUIText.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.colorSetColor">
            <summary>设置 GUIText.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.pixelOffsetGet">
            <summary>设置 GUIText.get_pixelOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIText.pixelOffsetSetVector2">
            <summary>设置 GUIText.set_pixelOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUITexture">
            <summary>UnityEngine.GUITexture 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUITexture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUITexture.#ctor(UnityEngine.GUITexture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUITexture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.AllInstances.colorGet">
            <summary>设置 GUITexture.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.AllInstances.colorSetColor">
            <summary>设置 GUITexture.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.AllInstances.pixelInsetGet">
            <summary>设置 GUITexture.get_pixelInset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.AllInstances.pixelInsetSetRect">
            <summary>设置 GUITexture.set_pixelInset(Rect value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUITexture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUITexture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.Constructor">
            <summary>设置 GUITexture.GUITexture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.colorGet">
            <summary>设置 GUITexture.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.colorSetColor">
            <summary>设置 GUITexture.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.pixelInsetGet">
            <summary>设置 GUITexture.get_pixelInset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUITexture.pixelInsetSetRect">
            <summary>设置 GUITexture.set_pixelInset(Rect value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIUtility">
            <summary>UnityEngine.GUIUtility 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIUtility.#ctor(UnityEngine.GUIUtility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGUIUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.BeginGUIInt32Int32Int32">
            <summary>设置 GUIUtility.BeginGUI(Int32 skinMode, Int32 instanceID, Int32 useGUILayout) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGUIUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.CheckOnGUI">
            <summary>设置 GUIUtility.CheckOnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.Constructor">
            <summary>设置 GUIUtility.GUIUtility() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.EndGUIFromExceptionException">
            <summary>设置 GUIUtility.EndGUIFromException(Exception exception) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.EndGUIInt32">
            <summary>设置 GUIUtility.EndGUI(Int32 layoutType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.ExitGUI">
            <summary>设置 GUIUtility.ExitGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GUIToScreenPointVector2">
            <summary>设置 GUIUtility.GUIToScreenPoint(Vector2 guiPoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GUIToScreenRectRect">
            <summary>设置 GUIUtility.GUIToScreenRect(Rect guiRect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GetBuiltinSkinInt32">
            <summary>设置 GUIUtility.GetBuiltinSkin(Int32 skin) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GetControlIDFocusType">
            <summary>设置 GUIUtility.GetControlID(FocusType focus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GetControlIDFocusTypeRect">
            <summary>设置 GUIUtility.GetControlID(FocusType focus, Rect position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GetControlIDGUIContentFocusType">
            <summary>设置 GUIUtility.GetControlID(GUIContent contents, FocusType focus) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GetControlIDGUIContentFocusTypeRect">
            <summary>设置 GUIUtility.GetControlID(GUIContent contents, FocusType focus, Rect position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GetControlIDInt32FocusTypeRect">
            <summary>设置 GUIUtility.GetControlID(Int32 hint, FocusType focus, Rect position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GetDefaultSkin">
            <summary>设置 GUIUtility.GetDefaultSkin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.GetStateObjectTypeInt32">
            <summary>设置 GUIUtility.GetStateObject(Type t, Int32 controlID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.Internal_GetNextControlID2Int32FocusTypeRect">
            <summary>设置 GUIUtility.Internal_GetNextControlID2(Int32 hint, FocusType focusType, Rect rect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.QueryStateObjectTypeInt32">
            <summary>设置 GUIUtility.QueryStateObject(Type t, Int32 controlID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.RotateAroundPivotSingleVector2">
            <summary>设置 GUIUtility.RotateAroundPivot(Single angle, Vector2 pivotPoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.ScaleAroundPivotVector2Vector2">
            <summary>设置 GUIUtility.ScaleAroundPivot(Vector2 scale, Vector2 pivotPoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.ScreenToGUIPointVector2">
            <summary>设置 GUIUtility.ScreenToGUIPoint(Vector2 screenPoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.ScreenToGUIRectRect">
            <summary>设置 GUIUtility.ScreenToGUIRect(Rect screenRect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.StaticConstructor">
            <summary>设置 GUIUtility.GUIUtility() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.hotControlGet">
            <summary>设置 GUIUtility.get_hotControl() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGUIUtility.hotControlSetInt32">
            <summary>设置 GUIUtility.set_hotControl(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGameObject">
            <summary>UnityEngine.GameObject 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.#ctor(UnityEngine.GameObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.AddComponentOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GameObject.AddComponent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AddComponentType">
            <summary>设置 GameObject.AddComponent(Type componentType) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGameObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.AllInstances.AddComponentOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.GameObject,``0})">
            <summary>设置 GameObject.AddComponent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.AddComponentType">
            <summary>设置 GameObject.AddComponent(Type componentType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.BroadcastMessageString">
            <summary>设置 GameObject.BroadcastMessage(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.BroadcastMessageStringObject">
            <summary>设置 GameObject.BroadcastMessage(String methodName, Object parameter) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.BroadcastMessageStringSendMessageOptions">
            <summary>设置 GameObject.BroadcastMessage(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentInChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.GameObject,``0})">
            <summary>设置 GameObject.GetComponentInChildren() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentInChildrenType">
            <summary>设置 GameObject.GetComponentInChildren(Type type) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.GameObject,``0})">
            <summary>设置 GameObject.GetComponent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentString">
            <summary>设置 GameObject.GetComponent(String type) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentsInChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.GameObject,``0[]})">
            <summary>设置 GameObject.GetComponentsInChildren() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentsInChildrenOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.GameObject,System.Boolean,``0[]})">
            <summary>设置 GameObject.GetComponentsInChildren(Boolean includeInactive) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentsInChildrenType">
            <summary>设置 GameObject.GetComponentsInChildren(Type type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentsInChildrenTypeBoolean">
            <summary>设置 GameObject.GetComponentsInChildren(Type type, Boolean includeInactive) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.GameObject,``0[]})">
            <summary>设置 GameObject.GetComponents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.GetComponentsType">
            <summary>设置 GameObject.GetComponents(Type type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.SendMessageString">
            <summary>设置 GameObject.SendMessage(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.SendMessageStringObject">
            <summary>设置 GameObject.SendMessage(String methodName, Object value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.SendMessageStringSendMessageOptions">
            <summary>设置 GameObject.SendMessage(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.SendMessageUpwardsString">
            <summary>设置 GameObject.SendMessageUpwards(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.SendMessageUpwardsStringObject">
            <summary>设置 GameObject.SendMessageUpwards(String methodName, Object value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.SendMessageUpwardsStringSendMessageOptions">
            <summary>设置 GameObject.SendMessageUpwards(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.AllInstances.gameObjectGet">
            <summary>设置 GameObject.get_gameObject() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.BroadcastMessageString">
            <summary>设置 GameObject.BroadcastMessage(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.BroadcastMessageStringObject">
            <summary>设置 GameObject.BroadcastMessage(String methodName, Object parameter) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.BroadcastMessageStringSendMessageOptions">
            <summary>设置 GameObject.BroadcastMessage(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.Constructor">
            <summary>设置 GameObject.GameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.ConstructorString">
            <summary>设置 GameObject.GameObject(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.ConstructorStringTypeArray">
            <summary>设置 GameObject.GameObject(String name, Type[] components) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.FindWithTagString">
            <summary>设置 GameObject.FindWithTag(String tag) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.GetComponentInChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GameObject.GetComponentInChildren() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.GetComponentInChildrenType">
            <summary>设置 GameObject.GetComponentInChildren(Type type) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.GetComponentOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GameObject.GetComponent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.GetComponentString">
            <summary>设置 GameObject.GetComponent(String type) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.GetComponentsInChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>设置 GameObject.GetComponentsInChildren() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.GetComponentsInChildrenOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>设置 GameObject.GetComponentsInChildren(Boolean includeInactive) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.GetComponentsInChildrenType">
            <summary>设置 GameObject.GetComponentsInChildren(Type type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.GetComponentsInChildrenTypeBoolean">
            <summary>设置 GameObject.GetComponentsInChildren(Type type, Boolean includeInactive) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGameObject.GetComponentsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>设置 GameObject.GetComponents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.GetComponentsType">
            <summary>设置 GameObject.GetComponents(Type type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.SendMessageString">
            <summary>设置 GameObject.SendMessage(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.SendMessageStringObject">
            <summary>设置 GameObject.SendMessage(String methodName, Object value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.SendMessageStringSendMessageOptions">
            <summary>设置 GameObject.SendMessage(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.SendMessageUpwardsString">
            <summary>设置 GameObject.SendMessageUpwards(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.SendMessageUpwardsStringObject">
            <summary>设置 GameObject.SendMessageUpwards(String methodName, Object value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.SendMessageUpwardsStringSendMessageOptions">
            <summary>设置 GameObject.SendMessageUpwards(String methodName, SendMessageOptions options) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGameObject.gameObjectGet">
            <summary>设置 GameObject.get_gameObject() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGeometryUtility">
            <summary>UnityEngine.GeometryUtility 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGeometryUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGeometryUtility.#ctor(UnityEngine.GeometryUtility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGeometryUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGeometryUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGeometryUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGeometryUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGeometryUtility.CalculateFrustumPlanesCamera">
            <summary>设置 GeometryUtility.CalculateFrustumPlanes(Camera camera) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGeometryUtility.CalculateFrustumPlanesMatrix4x4">
            <summary>设置 GeometryUtility.CalculateFrustumPlanes(Matrix4x4 worldToProjectionMatrix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGeometryUtility.Constructor">
            <summary>设置 GeometryUtility.GeometryUtility() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGeometryUtility.Internal_ExtractPlanesPlaneArrayMatrix4x4">
            <summary>设置 GeometryUtility.Internal_ExtractPlanes(Plane[] planes, Matrix4x4 worldToProjectionMatrix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGeometryUtility.TestPlanesAABBPlaneArrayBounds">
            <summary>设置 GeometryUtility.TestPlanesAABB(Plane[] planes, Bounds bounds) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGizmos">
            <summary>UnityEngine.Gizmos 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGizmos.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGizmos.#ctor(UnityEngine.Gizmos)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGizmos.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGizmos.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGizmos.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.Constructor">
            <summary>设置 Gizmos.Gizmos() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawCubeVector3Vector3">
            <summary>设置 Gizmos.DrawCube(Vector3 center, Vector3 size) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawFrustumVector3SingleSingleSingleSingle">
            <summary>设置 Gizmos.DrawFrustum(Vector3 center, Single fov, Single maxRange, Single minRange, Single aspect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawGUITextureRectTexture">
            <summary>设置 Gizmos.DrawGUITexture(Rect screenRect, Texture texture) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawGUITextureRectTextureInt32Int32Int32Int32">
            <summary>设置 Gizmos.DrawGUITexture(Rect screenRect, Texture texture, Int32 leftBorder, Int32 rightBorder, Int32 topBorder, Int32 bottomBorder) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawGUITextureRectTextureInt32Int32Int32Int32Material">
            <summary>设置 Gizmos.DrawGUITexture(Rect screenRect, Texture texture, Int32 leftBorder, Int32 rightBorder, Int32 topBorder, Int32 bottomBorder, Material mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawGUITextureRectTextureMaterial">
            <summary>设置 Gizmos.DrawGUITexture(Rect screenRect, Texture texture, Material mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawIconVector3String">
            <summary>设置 Gizmos.DrawIcon(Vector3 center, String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawIconVector3StringBoolean">
            <summary>设置 Gizmos.DrawIcon(Vector3 center, String name, Boolean allowScaling) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawLineVector3Vector3">
            <summary>设置 Gizmos.DrawLine(Vector3 from, Vector3 to) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawRayRay">
            <summary>设置 Gizmos.DrawRay(Ray r) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawRayVector3Vector3">
            <summary>设置 Gizmos.DrawRay(Vector3 from, Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawSphereVector3Single">
            <summary>设置 Gizmos.DrawSphere(Vector3 center, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawWireCubeVector3Vector3">
            <summary>设置 Gizmos.DrawWireCube(Vector3 center, Vector3 size) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.DrawWireSphereVector3Single">
            <summary>设置 Gizmos.DrawWireSphere(Vector3 center, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.colorGet">
            <summary>设置 Gizmos.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.colorSetColor">
            <summary>设置 Gizmos.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.matrixGet">
            <summary>设置 Gizmos.get_matrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGizmos.matrixSetMatrix4x4">
            <summary>设置 Gizmos.set_matrix(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGradient">
            <summary>UnityEngine.Gradient 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradient.#ctor(UnityEngine.Gradient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGradient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGradient.AllInstances.constantColorGet">
            <summary>设置 Gradient.get_constantColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGradient.AllInstances.constantColorSetColor">
            <summary>设置 Gradient.set_constantColor(Color value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGradient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGradient.Constructor">
            <summary>设置 Gradient.Gradient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGradient.constantColorGet">
            <summary>设置 Gradient.get_constantColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGradient.constantColorSetColor">
            <summary>设置 Gradient.set_constantColor(Color value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGradientAlphaKey">
            <summary>UnityEngine.GradientAlphaKey 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradientAlphaKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGradientAlphaKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradientAlphaKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradientAlphaKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGradientAlphaKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGradientColorKey">
            <summary>UnityEngine.GradientColorKey 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradientColorKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGradientColorKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradientColorKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGradientColorKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGradientColorKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGraphics">
            <summary>UnityEngine.Graphics 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGraphics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGraphics.#ctor(UnityEngine.Graphics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGraphics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGraphics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGraphics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.BlitMultiTapTextureRenderTextureMaterialVector2Array">
            <summary>设置 Graphics.BlitMultiTap(Texture source, RenderTexture dest, Material mat, Vector2[] offsets) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.BlitTextureMaterial">
            <summary>设置 Graphics.Blit(Texture source, Material mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.BlitTextureMaterialInt32">
            <summary>设置 Graphics.Blit(Texture source, Material mat, Int32 pass) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.BlitTextureRenderTextureMaterial">
            <summary>设置 Graphics.Blit(Texture source, RenderTexture dest, Material mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.BlitTextureRenderTextureMaterialInt32">
            <summary>设置 Graphics.Blit(Texture source, RenderTexture dest, Material mat, Int32 pass) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.Constructor">
            <summary>设置 Graphics.Graphics() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshMatrix4x4">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Matrix4x4 matrix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshMatrix4x4Int32">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Matrix4x4 matrix, Int32 materialIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshMatrix4x4MaterialInt32">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshMatrix4x4MaterialInt32Camera">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, Int32 layer, Camera camera) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshMatrix4x4MaterialInt32CameraInt32">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, Int32 layer, Camera camera, Int32 submeshIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshMatrix4x4MaterialInt32CameraInt32MaterialPropertyBlock">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, Int32 layer, Camera camera, Int32 submeshIndex, MaterialPropertyBlock properties) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshMatrix4x4MaterialInt32CameraInt32MaterialPropertyBlockBooleanBoolean">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, Int32 layer, Camera camera, Int32 submeshIndex, MaterialPropertyBlock properties, Boolean castShadows, Boolean receiveShadows) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshVector3Quaternion">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshVector3QuaternionInt32">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Int32 materialIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshVector3QuaternionMaterialInt32">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, Int32 layer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshVector3QuaternionMaterialInt32Camera">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, Int32 layer, Camera camera) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshVector3QuaternionMaterialInt32CameraInt32">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, Int32 layer, Camera camera, Int32 submeshIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshVector3QuaternionMaterialInt32CameraInt32MaterialPropertyBlock">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, Int32 layer, Camera camera, Int32 submeshIndex, MaterialPropertyBlock properties) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshMeshVector3QuaternionMaterialInt32CameraInt32MaterialPropertyBlockBooleanBoolean">
            <summary>设置 Graphics.DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, Int32 layer, Camera camera, Int32 submeshIndex, MaterialPropertyBlock properties, Boolean castShadows, Boolean receiveShadows) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshNowMeshMatrix4x4">
            <summary>设置 Graphics.DrawMeshNow(Mesh mesh, Matrix4x4 matrix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshNowMeshMatrix4x4Int32">
            <summary>设置 Graphics.DrawMeshNow(Mesh mesh, Matrix4x4 matrix, Int32 materialIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshNowMeshVector3Quaternion">
            <summary>设置 Graphics.DrawMeshNow(Mesh mesh, Vector3 position, Quaternion rotation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawMeshNowMeshVector3QuaternionInt32">
            <summary>设置 Graphics.DrawMeshNow(Mesh mesh, Vector3 position, Quaternion rotation, Int32 materialIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawProceduralIndirectMeshTopologyComputeBuffer">
            <summary>设置 Graphics.DrawProceduralIndirect(MeshTopology topology, ComputeBuffer bufferWithArgs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawProceduralMeshTopologyInt32">
            <summary>设置 Graphics.DrawProcedural(MeshTopology topology, Int32 vertexCount) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawSpriteSpriteMatrix4x4MaterialInt32CameraColorMaterialPropertyBlock">
            <summary>设置 Graphics.DrawSprite(Sprite sprite, Matrix4x4 matrix, Material material, Int32 layer, Camera camera, Color color, MaterialPropertyBlock properties) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawTextureRectTexture">
            <summary>设置 Graphics.DrawTexture(Rect screenRect, Texture texture) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawTextureRectTextureInt32Int32Int32Int32">
            <summary>设置 Graphics.DrawTexture(Rect screenRect, Texture texture, Int32 leftBorder, Int32 rightBorder, Int32 topBorder, Int32 bottomBorder) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawTextureRectTextureInt32Int32Int32Int32Material">
            <summary>设置 Graphics.DrawTexture(Rect screenRect, Texture texture, Int32 leftBorder, Int32 rightBorder, Int32 topBorder, Int32 bottomBorder, Material mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawTextureRectTextureMaterial">
            <summary>设置 Graphics.DrawTexture(Rect screenRect, Texture texture, Material mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawTextureRectTextureRectInt32Int32Int32Int32">
            <summary>设置 Graphics.DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, Int32 leftBorder, Int32 rightBorder, Int32 topBorder, Int32 bottomBorder) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawTextureRectTextureRectInt32Int32Int32Int32Color">
            <summary>设置 Graphics.DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, Int32 leftBorder, Int32 rightBorder, Int32 topBorder, Int32 bottomBorder, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawTextureRectTextureRectInt32Int32Int32Int32ColorMaterial">
            <summary>设置 Graphics.DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, Int32 leftBorder, Int32 rightBorder, Int32 topBorder, Int32 bottomBorder, Color color, Material mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.DrawTextureRectTextureRectInt32Int32Int32Int32Material">
            <summary>设置 Graphics.DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, Int32 leftBorder, Int32 rightBorder, Int32 topBorder, Int32 bottomBorder, Material mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.Internal_DrawMeshNow1MeshVector3QuaternionInt32">
            <summary>设置 Graphics.Internal_DrawMeshNow1(Mesh mesh, Vector3 position, Quaternion rotation, Int32 materialIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.Internal_DrawMeshNow2MeshMatrix4x4Int32">
            <summary>设置 Graphics.Internal_DrawMeshNow2(Mesh mesh, Matrix4x4 matrix, Int32 materialIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.SetRandomWriteTargetInt32ComputeBuffer">
            <summary>设置 Graphics.SetRandomWriteTarget(Int32 index, ComputeBuffer uav) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.SetRandomWriteTargetInt32RenderTexture">
            <summary>设置 Graphics.SetRandomWriteTarget(Int32 index, RenderTexture uav) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.SetRenderTargetRenderBufferArrayRenderBuffer">
            <summary>设置 Graphics.SetRenderTarget(RenderBuffer[] colorBuffers, RenderBuffer depthBuffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.SetRenderTargetRenderBufferRenderBuffer">
            <summary>设置 Graphics.SetRenderTarget(RenderBuffer colorBuffer, RenderBuffer depthBuffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.SetRenderTargetRenderTexture">
            <summary>设置 Graphics.SetRenderTarget(RenderTexture rt) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.SetRenderTargetRenderTextureInt32">
            <summary>设置 Graphics.SetRenderTarget(RenderTexture rt, Int32 mipLevel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.SetRenderTargetRenderTextureInt32CubemapFace">
            <summary>设置 Graphics.SetRenderTarget(RenderTexture rt, Int32 mipLevel, CubemapFace face) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.activeColorBufferGet">
            <summary>设置 Graphics.get_activeColorBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.activeDepthBufferGet">
            <summary>设置 Graphics.get_activeDepthBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.deviceNameGet">
            <summary>设置 Graphics.get_deviceName() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.deviceVendorGet">
            <summary>设置 Graphics.get_deviceVendor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.deviceVersionGet">
            <summary>设置 Graphics.get_deviceVersion() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGraphics.supportsVertexProgramGet">
            <summary>设置 Graphics.get_supportsVertexProgram() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGyroscope">
            <summary>UnityEngine.Gyroscope 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGyroscope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGyroscope.#ctor(UnityEngine.Gyroscope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimGyroscope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.attitudeGet">
            <summary>设置 Gyroscope.get_attitude() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.enabledGet">
            <summary>设置 Gyroscope.get_enabled() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.enabledSetBoolean">
            <summary>设置 Gyroscope.set_enabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.gravityGet">
            <summary>设置 Gyroscope.get_gravity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.rotationRateGet">
            <summary>设置 Gyroscope.get_rotationRate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.rotationRateUnbiasedGet">
            <summary>设置 Gyroscope.get_rotationRateUnbiased() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.updateIntervalGet">
            <summary>设置 Gyroscope.get_updateInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.updateIntervalSetSingle">
            <summary>设置 Gyroscope.set_updateInterval(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.AllInstances.userAccelerationGet">
            <summary>设置 Gyroscope.get_userAcceleration() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGyroscope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimGyroscope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.ConstructorInt32">
            <summary>设置 Gyroscope.Gyroscope(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.attitudeGet">
            <summary>设置 Gyroscope.get_attitude() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.enabledGet">
            <summary>设置 Gyroscope.get_enabled() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.enabledSetBoolean">
            <summary>设置 Gyroscope.set_enabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.gravityGet">
            <summary>设置 Gyroscope.get_gravity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.rotationRateGet">
            <summary>设置 Gyroscope.get_rotationRate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.rotationRateUnbiasedGet">
            <summary>设置 Gyroscope.get_rotationRateUnbiased() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.updateIntervalGet">
            <summary>设置 Gyroscope.get_updateInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.updateIntervalSetSingle">
            <summary>设置 Gyroscope.set_updateInterval(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimGyroscope.userAccelerationGet">
            <summary>设置 Gyroscope.get_userAcceleration() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHandheld">
            <summary>UnityEngine.Handheld 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHandheld.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHandheld.#ctor(UnityEngine.Handheld)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHandheld.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHandheld.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHandheld.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHandheld.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHandheld.Constructor">
            <summary>设置 Handheld.Handheld() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHandheld.PlayFullScreenMovieString">
            <summary>设置 Handheld.PlayFullScreenMovie(String path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHandheld.PlayFullScreenMovieStringColor">
            <summary>设置 Handheld.PlayFullScreenMovie(String path, Color bgColor) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHandheld.PlayFullScreenMovieStringColorFullScreenMovieControlMode">
            <summary>设置 Handheld.PlayFullScreenMovie(String path, Color bgColor, FullScreenMovieControlMode controlMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHandheld.PlayFullScreenMovieStringColorFullScreenMovieControlModeFullScreenMovieScalingMode">
            <summary>设置 Handheld.PlayFullScreenMovie(String path, Color bgColor, FullScreenMovieControlMode controlMode, FullScreenMovieScalingMode scalingMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHandheld.SetActivityIndicatorStyleAndroidActivityIndicatorStyle">
            <summary>设置 Handheld.SetActivityIndicatorStyle(AndroidActivityIndicatorStyle style) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHandheld.SetActivityIndicatorStyleiOSActivityIndicatorStyle">
            <summary>设置 Handheld.SetActivityIndicatorStyle(iOSActivityIndicatorStyle style) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHideInInspector">
            <summary>UnityEngine.HideInInspector 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHideInInspector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHideInInspector.#ctor(UnityEngine.HideInInspector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHideInInspector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHideInInspector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHideInInspector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHideInInspector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHideInInspector.Constructor">
            <summary>设置 HideInInspector.HideInInspector() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHingeJoint">
            <summary>UnityEngine.HingeJoint 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHingeJoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHingeJoint.#ctor(UnityEngine.HingeJoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHingeJoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.AllInstances.limitsGet">
            <summary>设置 HingeJoint.get_limits() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.AllInstances.limitsSetJointLimits">
            <summary>设置 HingeJoint.set_limits(JointLimits value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.AllInstances.motorGet">
            <summary>设置 HingeJoint.get_motor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.AllInstances.motorSetJointMotor">
            <summary>设置 HingeJoint.set_motor(JointMotor value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.AllInstances.springGet">
            <summary>设置 HingeJoint.get_spring() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.AllInstances.springSetJointSpring">
            <summary>设置 HingeJoint.set_spring(JointSpring value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHingeJoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHingeJoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.Constructor">
            <summary>设置 HingeJoint.HingeJoint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.limitsGet">
            <summary>设置 HingeJoint.get_limits() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.limitsSetJointLimits">
            <summary>设置 HingeJoint.set_limits(JointLimits value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.motorGet">
            <summary>设置 HingeJoint.get_motor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.motorSetJointMotor">
            <summary>设置 HingeJoint.set_motor(JointMotor value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.springGet">
            <summary>设置 HingeJoint.get_spring() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint.springSetJointSpring">
            <summary>设置 HingeJoint.set_spring(JointSpring value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHingeJoint2D">
            <summary>UnityEngine.HingeJoint2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHingeJoint2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHingeJoint2D.#ctor(UnityEngine.HingeJoint2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHingeJoint2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.AllInstances.anchorGet">
            <summary>设置 HingeJoint2D.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.AllInstances.anchorSetVector2">
            <summary>设置 HingeJoint2D.set_anchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.AllInstances.connectedAnchorGet">
            <summary>设置 HingeJoint2D.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.AllInstances.connectedAnchorSetVector2">
            <summary>设置 HingeJoint2D.set_connectedAnchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHingeJoint2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHingeJoint2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.Constructor">
            <summary>设置 HingeJoint2D.HingeJoint2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.anchorGet">
            <summary>设置 HingeJoint2D.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.anchorSetVector2">
            <summary>设置 HingeJoint2D.set_anchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.connectedAnchorGet">
            <summary>设置 HingeJoint2D.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHingeJoint2D.connectedAnchorSetVector2">
            <summary>设置 HingeJoint2D.set_connectedAnchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHostData">
            <summary>UnityEngine.HostData 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHostData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHostData.#ctor(UnityEngine.HostData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHostData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.commentGet">
            <summary>设置 HostData.get_comment() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.commentSetString">
            <summary>设置 HostData.set_comment(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.connectedPlayersGet">
            <summary>设置 HostData.get_connectedPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.connectedPlayersSetInt32">
            <summary>设置 HostData.set_connectedPlayers(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.gameNameGet">
            <summary>设置 HostData.get_gameName() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.gameNameSetString">
            <summary>设置 HostData.set_gameName(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.gameTypeGet">
            <summary>设置 HostData.get_gameType() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.gameTypeSetString">
            <summary>设置 HostData.set_gameType(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.guidGet">
            <summary>设置 HostData.get_guid() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.guidSetString">
            <summary>设置 HostData.set_guid(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.ipGet">
            <summary>设置 HostData.get_ip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.ipSetStringArray">
            <summary>设置 HostData.set_ip(String[] value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.passwordProtectedGet">
            <summary>设置 HostData.get_passwordProtected() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.passwordProtectedSetBoolean">
            <summary>设置 HostData.set_passwordProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.playerLimitGet">
            <summary>设置 HostData.get_playerLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.playerLimitSetInt32">
            <summary>设置 HostData.set_playerLimit(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.portGet">
            <summary>设置 HostData.get_port() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.portSetInt32">
            <summary>设置 HostData.set_port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.useNatGet">
            <summary>设置 HostData.get_useNat() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.AllInstances.useNatSetBoolean">
            <summary>设置 HostData.set_useNat(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHostData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHostData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.Constructor">
            <summary>设置 HostData.HostData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.commentGet">
            <summary>设置 HostData.get_comment() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.commentSetString">
            <summary>设置 HostData.set_comment(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.connectedPlayersGet">
            <summary>设置 HostData.get_connectedPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.connectedPlayersSetInt32">
            <summary>设置 HostData.set_connectedPlayers(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.gameNameGet">
            <summary>设置 HostData.get_gameName() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.gameNameSetString">
            <summary>设置 HostData.set_gameName(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.gameTypeGet">
            <summary>设置 HostData.get_gameType() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.gameTypeSetString">
            <summary>设置 HostData.set_gameType(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.guidGet">
            <summary>设置 HostData.get_guid() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.guidSetString">
            <summary>设置 HostData.set_guid(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.ipGet">
            <summary>设置 HostData.get_ip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.ipSetStringArray">
            <summary>设置 HostData.set_ip(String[] value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.passwordProtectedGet">
            <summary>设置 HostData.get_passwordProtected() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.passwordProtectedSetBoolean">
            <summary>设置 HostData.set_passwordProtected(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.playerLimitGet">
            <summary>设置 HostData.get_playerLimit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.playerLimitSetInt32">
            <summary>设置 HostData.set_playerLimit(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.portGet">
            <summary>设置 HostData.get_port() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.portSetInt32">
            <summary>设置 HostData.set_port(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.useNatGet">
            <summary>设置 HostData.get_useNat() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHostData.useNatSetBoolean">
            <summary>设置 HostData.set_useNat(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHumanBone">
            <summary>UnityEngine.HumanBone 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanBone.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHumanBone.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanBone.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanBone.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHumanBone.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHumanDescription">
            <summary>UnityEngine.HumanDescription 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanDescription.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHumanDescription.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanDescription.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanDescription.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHumanDescription.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHumanLimit">
            <summary>UnityEngine.HumanLimit 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanLimit.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHumanLimit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanLimit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanLimit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHumanLimit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHumanTrait">
            <summary>UnityEngine.HumanTrait 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanTrait.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanTrait.#ctor(UnityEngine.HumanTrait)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimHumanTrait.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanTrait.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimHumanTrait.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHumanTrait.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimHumanTrait.Constructor">
            <summary>设置 HumanTrait.HumanTrait() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimImageEffectOpaque">
            <summary>UnityEngine.ImageEffectOpaque 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImageEffectOpaque.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImageEffectOpaque.#ctor(UnityEngine.ImageEffectOpaque)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimImageEffectOpaque.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImageEffectOpaque.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImageEffectOpaque.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimImageEffectOpaque.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimImageEffectOpaque.Constructor">
            <summary>设置 ImageEffectOpaque.ImageEffectOpaque() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimImageEffectTransformsToLDR">
            <summary>UnityEngine.ImageEffectTransformsToLDR 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImageEffectTransformsToLDR.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImageEffectTransformsToLDR.#ctor(UnityEngine.ImageEffectTransformsToLDR)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimImageEffectTransformsToLDR.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImageEffectTransformsToLDR.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImageEffectTransformsToLDR.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimImageEffectTransformsToLDR.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimImageEffectTransformsToLDR.Constructor">
            <summary>设置 ImageEffectTransformsToLDR.ImageEffectTransformsToLDR() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimImplementedInActionScriptAttribute">
            <summary>UnityEngine.ImplementedInActionScriptAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImplementedInActionScriptAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImplementedInActionScriptAttribute.#ctor(UnityEngine.ImplementedInActionScriptAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimImplementedInActionScriptAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImplementedInActionScriptAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimImplementedInActionScriptAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimImplementedInActionScriptAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimImplementedInActionScriptAttribute.Constructor">
            <summary>设置 ImplementedInActionScriptAttribute.ImplementedInActionScriptAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimInput">
            <summary>UnityEngine.Input 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimInput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimInput.#ctor(UnityEngine.Input)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.Constructor">
            <summary>设置 Input.Input() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.GetKeyDownKeyCode">
            <summary>设置 Input.GetKeyDown(KeyCode key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.GetKeyDownString">
            <summary>设置 Input.GetKeyDown(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.GetKeyKeyCode">
            <summary>设置 Input.GetKey(KeyCode key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.GetKeyString">
            <summary>设置 Input.GetKey(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.GetKeyUpKeyCode">
            <summary>设置 Input.GetKeyUp(KeyCode key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.GetKeyUpString">
            <summary>设置 Input.GetKeyUp(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.GetPositionInt32">
            <summary>设置 Input.GetPosition(Int32 deviceID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.GetRotationInt32">
            <summary>设置 Input.GetRotation(Int32 deviceID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.StaticConstructor">
            <summary>设置 Input.Input() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.accelerationEventsGet">
            <summary>设置 Input.get_accelerationEvents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.compassGet">
            <summary>设置 Input.get_compass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.compositionCursorPosGet">
            <summary>设置 Input.get_compositionCursorPos() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.compositionCursorPosSetVector2">
            <summary>设置 Input.set_compositionCursorPos(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.gyroGet">
            <summary>设置 Input.get_gyro() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.locationGet">
            <summary>设置 Input.get_location() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInput.touchesGet">
            <summary>设置 Input.get_touches() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimInteractiveCloth">
            <summary>UnityEngine.InteractiveCloth 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimInteractiveCloth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimInteractiveCloth.#ctor(UnityEngine.InteractiveCloth)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.AddForceAtPositionVector3Vector3Single">
            <summary>设置 InteractiveCloth.AddForceAtPosition(Vector3 force, Vector3 position, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.AddForceAtPositionVector3Vector3SingleForceMode">
            <summary>设置 InteractiveCloth.AddForceAtPosition(Vector3 force, Vector3 position, Single radius, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimInteractiveCloth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.AllInstances.AddForceAtPositionVector3Vector3Single">
            <summary>设置 InteractiveCloth.AddForceAtPosition(Vector3 force, Vector3 position, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.AllInstances.AddForceAtPositionVector3Vector3SingleForceMode">
            <summary>设置 InteractiveCloth.AddForceAtPosition(Vector3 force, Vector3 position, Single radius, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.AllInstances.AttachToColliderCollider">
            <summary>设置 InteractiveCloth.AttachToCollider(Collider collider) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.AllInstances.AttachToColliderColliderBoolean">
            <summary>设置 InteractiveCloth.AttachToCollider(Collider collider, Boolean tearable) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.AttachToColliderCollider">
            <summary>设置 InteractiveCloth.AttachToCollider(Collider collider) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.AttachToColliderColliderBoolean">
            <summary>设置 InteractiveCloth.AttachToCollider(Collider collider, Boolean tearable) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimInteractiveCloth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimInteractiveCloth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimInteractiveCloth.Constructor">
            <summary>设置 InteractiveCloth.InteractiveCloth() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJoint">
            <summary>UnityEngine.Joint 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJoint.#ctor(UnityEngine.Joint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.AllInstances.anchorGet">
            <summary>设置 Joint.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.AllInstances.anchorSetVector3">
            <summary>设置 Joint.set_anchor(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.AllInstances.axisGet">
            <summary>设置 Joint.get_axis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.AllInstances.axisSetVector3">
            <summary>设置 Joint.set_axis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.AllInstances.connectedAnchorGet">
            <summary>设置 Joint.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.AllInstances.connectedAnchorSetVector3">
            <summary>设置 Joint.set_connectedAnchor(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.Constructor">
            <summary>设置 Joint.Joint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.anchorGet">
            <summary>设置 Joint.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.anchorSetVector3">
            <summary>设置 Joint.set_anchor(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.axisGet">
            <summary>设置 Joint.get_axis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.axisSetVector3">
            <summary>设置 Joint.set_axis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.connectedAnchorGet">
            <summary>设置 Joint.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint.connectedAnchorSetVector3">
            <summary>设置 Joint.set_connectedAnchor(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJoint2D">
            <summary>UnityEngine.Joint2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJoint2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJoint2D.#ctor(UnityEngine.Joint2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJoint2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJoint2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJoint2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJoint2D.Constructor">
            <summary>设置 Joint2D.Joint2D() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointAngleLimits2D">
            <summary>UnityEngine.JointAngleLimits2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointAngleLimits2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointAngleLimits2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointAngleLimits2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointAngleLimits2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJointAngleLimits2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointDrive">
            <summary>UnityEngine.JointDrive 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointDrive.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointDrive.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointDrive.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointDrive.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJointDrive.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointLimits">
            <summary>UnityEngine.JointLimits 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointLimits.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointLimits.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointLimits.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointLimits.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJointLimits.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointMotor">
            <summary>UnityEngine.JointMotor 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointMotor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointMotor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointMotor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointMotor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJointMotor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointMotor2D">
            <summary>UnityEngine.JointMotor2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointMotor2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointMotor2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointMotor2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointMotor2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJointMotor2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointSpring">
            <summary>UnityEngine.JointSpring 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointSpring.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointSpring.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointSpring.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointSpring.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJointSpring.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointTranslationLimits2D">
            <summary>UnityEngine.JointTranslationLimits2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointTranslationLimits2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimJointTranslationLimits2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointTranslationLimits2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimJointTranslationLimits2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimJointTranslationLimits2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimKeyframe">
            <summary>UnityEngine.Keyframe 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimKeyframe.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimKeyframe.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimKeyframe.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimKeyframe.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimKeyframe.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLOD">
            <summary>UnityEngine.LOD 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLOD.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLOD.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLOD.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLOD.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLOD.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLODGroup">
            <summary>UnityEngine.LODGroup 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLODGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLODGroup.#ctor(UnityEngine.LODGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLODGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLODGroup.AllInstances.localReferencePointGet">
            <summary>设置 LODGroup.get_localReferencePoint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLODGroup.AllInstances.localReferencePointSetVector3">
            <summary>设置 LODGroup.set_localReferencePoint(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLODGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLODGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLODGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLODGroup.Constructor">
            <summary>设置 LODGroup.LODGroup() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLODGroup.localReferencePointGet">
            <summary>设置 LODGroup.get_localReferencePoint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLODGroup.localReferencePointSetVector3">
            <summary>设置 LODGroup.set_localReferencePoint(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLayerMask">
            <summary>UnityEngine.LayerMask 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLayerMask.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLayerMask.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLayerMask.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLayerMask.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLayerMask.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLayerMask.ImplicitOpInt32LayerMask">
            <summary>设置 LayerMask.op_Implicit(Int32 intVal) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLayerMask.ImplicitOpLayerMaskInt32">
            <summary>设置 LayerMask.op_Implicit(LayerMask mask) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLensFlare">
            <summary>UnityEngine.LensFlare 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLensFlare.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLensFlare.#ctor(UnityEngine.LensFlare)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLensFlare.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLensFlare.AllInstances.colorGet">
            <summary>设置 LensFlare.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLensFlare.AllInstances.colorSetColor">
            <summary>设置 LensFlare.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLensFlare.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLensFlare.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLensFlare.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLensFlare.Constructor">
            <summary>设置 LensFlare.LensFlare() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLensFlare.colorGet">
            <summary>设置 LensFlare.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLensFlare.colorSetColor">
            <summary>设置 LensFlare.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLight">
            <summary>UnityEngine.Light 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLight.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLight.#ctor(UnityEngine.Light)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLight.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.areaSizeGet">
            <summary>设置 Light.get_areaSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.areaSizeSetVector2">
            <summary>设置 Light.set_areaSize(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.attenuateGet">
            <summary>设置 Light.get_attenuate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.attenuateSetBoolean">
            <summary>设置 Light.set_attenuate(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.colorGet">
            <summary>设置 Light.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.colorSetColor">
            <summary>设置 Light.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.shadowConstantBiasGet">
            <summary>设置 Light.get_shadowConstantBias() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.shadowConstantBiasSetSingle">
            <summary>设置 Light.set_shadowConstantBias(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.shadowObjectSizeBiasGet">
            <summary>设置 Light.get_shadowObjectSizeBias() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.AllInstances.shadowObjectSizeBiasSetSingle">
            <summary>设置 Light.set_shadowObjectSizeBias(Single value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLight.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLight.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.Constructor">
            <summary>设置 Light.Light() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.areaSizeGet">
            <summary>设置 Light.get_areaSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.areaSizeSetVector2">
            <summary>设置 Light.set_areaSize(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.attenuateGet">
            <summary>设置 Light.get_attenuate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.attenuateSetBoolean">
            <summary>设置 Light.set_attenuate(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.colorGet">
            <summary>设置 Light.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.colorSetColor">
            <summary>设置 Light.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.shadowConstantBiasGet">
            <summary>设置 Light.get_shadowConstantBias() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.shadowConstantBiasSetSingle">
            <summary>设置 Light.set_shadowConstantBias(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.shadowObjectSizeBiasGet">
            <summary>设置 Light.get_shadowObjectSizeBias() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLight.shadowObjectSizeBiasSetSingle">
            <summary>设置 Light.set_shadowObjectSizeBias(Single value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLightProbeGroup">
            <summary>UnityEngine.LightProbeGroup 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightProbeGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightProbeGroup.#ctor(UnityEngine.LightProbeGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLightProbeGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightProbeGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightProbeGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightProbeGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightProbeGroup.Constructor">
            <summary>设置 LightProbeGroup.LightProbeGroup() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLightProbes">
            <summary>UnityEngine.LightProbes 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightProbes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightProbes.#ctor(UnityEngine.LightProbes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLightProbes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightProbes.AllInstances.GetInterpolatedLightProbeVector3RendererSingleArray">
            <summary>设置 LightProbes.GetInterpolatedLightProbe(Vector3 position, Renderer renderer, Single[] coefficients) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightProbes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightProbes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightProbes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightProbes.Constructor">
            <summary>设置 LightProbes.LightProbes() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightProbes.GetInterpolatedLightProbeVector3RendererSingleArray">
            <summary>设置 LightProbes.GetInterpolatedLightProbe(Vector3 position, Renderer renderer, Single[] coefficients) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLightmapData">
            <summary>UnityEngine.LightmapData 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightmapData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightmapData.#ctor(UnityEngine.LightmapData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLightmapData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.AllInstances.lightmapFarGet">
            <summary>设置 LightmapData.get_lightmapFar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.AllInstances.lightmapFarSetTexture2D">
            <summary>设置 LightmapData.set_lightmapFar(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.AllInstances.lightmapGet">
            <summary>设置 LightmapData.get_lightmap() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.AllInstances.lightmapNearGet">
            <summary>设置 LightmapData.get_lightmapNear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.AllInstances.lightmapNearSetTexture2D">
            <summary>设置 LightmapData.set_lightmapNear(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.AllInstances.lightmapSetTexture2D">
            <summary>设置 LightmapData.set_lightmap(Texture2D value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightmapData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightmapData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.Constructor">
            <summary>设置 LightmapData.LightmapData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.lightmapFarGet">
            <summary>设置 LightmapData.get_lightmapFar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.lightmapFarSetTexture2D">
            <summary>设置 LightmapData.set_lightmapFar(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.lightmapGet">
            <summary>设置 LightmapData.get_lightmap() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.lightmapNearGet">
            <summary>设置 LightmapData.get_lightmapNear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.lightmapNearSetTexture2D">
            <summary>设置 LightmapData.set_lightmapNear(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapData.lightmapSetTexture2D">
            <summary>设置 LightmapData.set_lightmap(Texture2D value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLightmapSettings">
            <summary>UnityEngine.LightmapSettings 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightmapSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightmapSettings.#ctor(UnityEngine.LightmapSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLightmapSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightmapSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLightmapSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLightmapSettings.Constructor">
            <summary>设置 LightmapSettings.LightmapSettings() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLineRenderer">
            <summary>UnityEngine.LineRenderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLineRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLineRenderer.#ctor(UnityEngine.LineRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLineRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.AllInstances.SetColorsColorColor">
            <summary>设置 LineRenderer.SetColors(Color start, Color end) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.AllInstances.SetPositionInt32Vector3">
            <summary>设置 LineRenderer.SetPosition(Int32 index, Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.AllInstances.SetVertexCountInt32">
            <summary>设置 LineRenderer.SetVertexCount(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.AllInstances.SetWidthSingleSingle">
            <summary>设置 LineRenderer.SetWidth(Single start, Single end) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLineRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLineRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.Constructor">
            <summary>设置 LineRenderer.LineRenderer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.SetColorsColorColor">
            <summary>设置 LineRenderer.SetColors(Color start, Color end) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.SetPositionInt32Vector3">
            <summary>设置 LineRenderer.SetPosition(Int32 index, Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.SetVertexCountInt32">
            <summary>设置 LineRenderer.SetVertexCount(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLineRenderer.SetWidthSingleSingle">
            <summary>设置 LineRenderer.SetWidth(Single start, Single end) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLocalNotification">
            <summary>UnityEngine.LocalNotification 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocalNotification.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocalNotification.#ctor(UnityEngine.LocalNotification)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLocalNotification.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocalNotification.AllInstances.fireDateGet">
            <summary>设置 LocalNotification.get_fireDate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocalNotification.AllInstances.fireDateSetDateTime">
            <summary>设置 LocalNotification.set_fireDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocalNotification.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocalNotification.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocalNotification.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocalNotification.Constructor">
            <summary>设置 LocalNotification.LocalNotification() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocalNotification.StaticConstructor">
            <summary>设置 LocalNotification.LocalNotification() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocalNotification.fireDateGet">
            <summary>设置 LocalNotification.get_fireDate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocalNotification.fireDateSetDateTime">
            <summary>设置 LocalNotification.set_fireDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLocationInfo">
            <summary>UnityEngine.LocationInfo 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocationInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLocationInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocationInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocationInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocationInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLocationService">
            <summary>UnityEngine.LocationService 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocationService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocationService.#ctor(UnityEngine.LocationService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimLocationService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocationService.AllInstances.Start">
            <summary>设置 LocationService.Start() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocationService.AllInstances.StartSingle">
            <summary>设置 LocationService.Start(Single desiredAccuracyInMeters) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocationService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimLocationService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocationService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocationService.Constructor">
            <summary>设置 LocationService.LocationService() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocationService.Start">
            <summary>设置 LocationService.Start() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimLocationService.StartSingle">
            <summary>设置 LocationService.Start(Single desiredAccuracyInMeters) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMasterServer">
            <summary>UnityEngine.MasterServer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMasterServer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMasterServer.#ctor(UnityEngine.MasterServer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMasterServer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMasterServer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMasterServer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMasterServer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMasterServer.Constructor">
            <summary>设置 MasterServer.MasterServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMasterServer.RegisterHostStringString">
            <summary>设置 MasterServer.RegisterHost(String gameTypeName, String gameName) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMatchTargetWeightMask">
            <summary>UnityEngine.MatchTargetWeightMask 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMatchTargetWeightMask.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMatchTargetWeightMask.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMatchTargetWeightMask.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMatchTargetWeightMask.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatchTargetWeightMask.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMaterial">
            <summary>UnityEngine.Material 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMaterial.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMaterial.#ctor(UnityEngine.Material)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMaterial.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetColorString">
            <summary>设置 Material.GetColor(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetFloatString">
            <summary>设置 Material.GetFloat(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetIntInt32">
            <summary>设置 Material.GetInt(Int32 nameID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetIntString">
            <summary>设置 Material.GetInt(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetMatrixString">
            <summary>设置 Material.GetMatrix(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetTagStringBoolean">
            <summary>设置 Material.GetTag(String tag, Boolean searchFallbacks) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetTextureOffsetString">
            <summary>设置 Material.GetTextureOffset(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetTextureScaleString">
            <summary>设置 Material.GetTextureScale(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetTextureString">
            <summary>设置 Material.GetTexture(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetVectorInt32">
            <summary>设置 Material.GetVector(Int32 nameID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.GetVectorString">
            <summary>设置 Material.GetVector(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.HasPropertyString">
            <summary>设置 Material.HasProperty(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetColorInt32Color">
            <summary>设置 Material.SetColor(Int32 nameID, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetColorStringColor">
            <summary>设置 Material.SetColor(String propertyName, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetFloatStringSingle">
            <summary>设置 Material.SetFloat(String propertyName, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetIntInt32Int32">
            <summary>设置 Material.SetInt(Int32 nameID, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetIntStringInt32">
            <summary>设置 Material.SetInt(String propertyName, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetMatrixInt32Matrix4x4">
            <summary>设置 Material.SetMatrix(Int32 nameID, Matrix4x4 matrix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetMatrixStringMatrix4x4">
            <summary>设置 Material.SetMatrix(String propertyName, Matrix4x4 matrix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetTextureOffsetStringVector2">
            <summary>设置 Material.SetTextureOffset(String propertyName, Vector2 offset) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetTextureScaleStringVector2">
            <summary>设置 Material.SetTextureScale(String propertyName, Vector2 scale) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetTextureStringTexture">
            <summary>设置 Material.SetTexture(String propertyName, Texture texture) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetVectorInt32Vector4">
            <summary>设置 Material.SetVector(Int32 nameID, Vector4 vector) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.SetVectorStringVector4">
            <summary>设置 Material.SetVector(String propertyName, Vector4 vector) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.colorGet">
            <summary>设置 Material.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.colorSetColor">
            <summary>设置 Material.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.mainTextureGet">
            <summary>设置 Material.get_mainTexture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.mainTextureOffsetGet">
            <summary>设置 Material.get_mainTextureOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.mainTextureOffsetSetVector2">
            <summary>设置 Material.set_mainTextureOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.mainTextureScaleGet">
            <summary>设置 Material.get_mainTextureScale() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.mainTextureScaleSetVector2">
            <summary>设置 Material.set_mainTextureScale(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.AllInstances.mainTextureSetTexture">
            <summary>设置 Material.set_mainTexture(Texture value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMaterial.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMaterial.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.ConstructorMaterial">
            <summary>设置 Material.Material(Material source) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.ConstructorShader">
            <summary>设置 Material.Material(Shader shader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.ConstructorString">
            <summary>设置 Material.Material(String contents) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.CreateString">
            <summary>设置 Material.Create(String scriptContents) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetColorString">
            <summary>设置 Material.GetColor(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetFloatString">
            <summary>设置 Material.GetFloat(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetIntInt32">
            <summary>设置 Material.GetInt(Int32 nameID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetIntString">
            <summary>设置 Material.GetInt(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetMatrixString">
            <summary>设置 Material.GetMatrix(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetTagStringBoolean">
            <summary>设置 Material.GetTag(String tag, Boolean searchFallbacks) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetTextureOffsetString">
            <summary>设置 Material.GetTextureOffset(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetTextureScaleString">
            <summary>设置 Material.GetTextureScale(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetTextureString">
            <summary>设置 Material.GetTexture(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetVectorInt32">
            <summary>设置 Material.GetVector(Int32 nameID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.GetVectorString">
            <summary>设置 Material.GetVector(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.HasPropertyString">
            <summary>设置 Material.HasProperty(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetColorInt32Color">
            <summary>设置 Material.SetColor(Int32 nameID, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetColorStringColor">
            <summary>设置 Material.SetColor(String propertyName, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetFloatStringSingle">
            <summary>设置 Material.SetFloat(String propertyName, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetIntInt32Int32">
            <summary>设置 Material.SetInt(Int32 nameID, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetIntStringInt32">
            <summary>设置 Material.SetInt(String propertyName, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetMatrixInt32Matrix4x4">
            <summary>设置 Material.SetMatrix(Int32 nameID, Matrix4x4 matrix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetMatrixStringMatrix4x4">
            <summary>设置 Material.SetMatrix(String propertyName, Matrix4x4 matrix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetTextureOffsetStringVector2">
            <summary>设置 Material.SetTextureOffset(String propertyName, Vector2 offset) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetTextureScaleStringVector2">
            <summary>设置 Material.SetTextureScale(String propertyName, Vector2 scale) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetTextureStringTexture">
            <summary>设置 Material.SetTexture(String propertyName, Texture texture) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetVectorInt32Vector4">
            <summary>设置 Material.SetVector(Int32 nameID, Vector4 vector) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.SetVectorStringVector4">
            <summary>设置 Material.SetVector(String propertyName, Vector4 vector) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.colorGet">
            <summary>设置 Material.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.colorSetColor">
            <summary>设置 Material.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.mainTextureGet">
            <summary>设置 Material.get_mainTexture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.mainTextureOffsetGet">
            <summary>设置 Material.get_mainTextureOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.mainTextureOffsetSetVector2">
            <summary>设置 Material.set_mainTextureOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.mainTextureScaleGet">
            <summary>设置 Material.get_mainTextureScale() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.mainTextureScaleSetVector2">
            <summary>设置 Material.set_mainTextureScale(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterial.mainTextureSetTexture">
            <summary>设置 Material.set_mainTexture(Texture value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMaterialPropertyBlock">
            <summary>UnityEngine.MaterialPropertyBlock 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMaterialPropertyBlock.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMaterialPropertyBlock.#ctor(UnityEngine.MaterialPropertyBlock)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AddColorInt32Color">
            <summary>设置 MaterialPropertyBlock.AddColor(Int32 nameID, Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AddColorStringColor">
            <summary>设置 MaterialPropertyBlock.AddColor(String name, Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AddFloatStringSingle">
            <summary>设置 MaterialPropertyBlock.AddFloat(String name, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AddMatrixInt32Matrix4x4">
            <summary>设置 MaterialPropertyBlock.AddMatrix(Int32 nameID, Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AddMatrixStringMatrix4x4">
            <summary>设置 MaterialPropertyBlock.AddMatrix(String name, Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AddTextureStringTexture">
            <summary>设置 MaterialPropertyBlock.AddTexture(String name, Texture value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AddVectorInt32Vector4">
            <summary>设置 MaterialPropertyBlock.AddVector(Int32 nameID, Vector4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AddVectorStringVector4">
            <summary>设置 MaterialPropertyBlock.AddVector(String name, Vector4 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.AddColorInt32Color">
            <summary>设置 MaterialPropertyBlock.AddColor(Int32 nameID, Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.AddColorStringColor">
            <summary>设置 MaterialPropertyBlock.AddColor(String name, Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.AddFloatStringSingle">
            <summary>设置 MaterialPropertyBlock.AddFloat(String name, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.AddMatrixInt32Matrix4x4">
            <summary>设置 MaterialPropertyBlock.AddMatrix(Int32 nameID, Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.AddMatrixStringMatrix4x4">
            <summary>设置 MaterialPropertyBlock.AddMatrix(String name, Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.AddTextureStringTexture">
            <summary>设置 MaterialPropertyBlock.AddTexture(String name, Texture value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.AddVectorInt32Vector4">
            <summary>设置 MaterialPropertyBlock.AddVector(Int32 nameID, Vector4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.AddVectorStringVector4">
            <summary>设置 MaterialPropertyBlock.AddVector(String name, Vector4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.GetFloatString">
            <summary>设置 MaterialPropertyBlock.GetFloat(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.GetMatrixString">
            <summary>设置 MaterialPropertyBlock.GetMatrix(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.GetTextureString">
            <summary>设置 MaterialPropertyBlock.GetTexture(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.AllInstances.GetVectorString">
            <summary>设置 MaterialPropertyBlock.GetVector(String name) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMaterialPropertyBlock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMaterialPropertyBlock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.Constructor">
            <summary>设置 MaterialPropertyBlock.MaterialPropertyBlock() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.GetFloatString">
            <summary>设置 MaterialPropertyBlock.GetFloat(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.GetMatrixString">
            <summary>设置 MaterialPropertyBlock.GetMatrix(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.GetTextureString">
            <summary>设置 MaterialPropertyBlock.GetTexture(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMaterialPropertyBlock.GetVectorString">
            <summary>设置 MaterialPropertyBlock.GetVector(String name) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMathf">
            <summary>UnityEngine.Mathf 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMathf.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.AbsInt32">
            <summary>设置 Mathf.Abs(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.AbsSingle">
            <summary>设置 Mathf.Abs(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.AcosSingle">
            <summary>设置 Mathf.Acos(Single f) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMathf.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.ApproximatelySingleSingle">
            <summary>设置 Mathf.Approximately(Single a, Single b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.AsinSingle">
            <summary>设置 Mathf.Asin(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.Atan2SingleSingle">
            <summary>设置 Mathf.Atan2(Single y, Single x) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.AtanSingle">
            <summary>设置 Mathf.Atan(Single f) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMathf.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMathf.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.CeilSingle">
            <summary>设置 Mathf.Ceil(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.CeilToIntSingle">
            <summary>设置 Mathf.CeilToInt(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.Clamp01Single">
            <summary>设置 Mathf.Clamp01(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.ClampInt32Int32Int32">
            <summary>设置 Mathf.Clamp(Int32 value, Int32 min, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.ClampSingleSingleSingle">
            <summary>设置 Mathf.Clamp(Single value, Single min, Single max) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.CosSingle">
            <summary>设置 Mathf.Cos(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.DeltaAngleSingleSingle">
            <summary>设置 Mathf.DeltaAngle(Single current, Single target) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.ExpSingle">
            <summary>设置 Mathf.Exp(Single power) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.FloorSingle">
            <summary>设置 Mathf.Floor(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.FloorToIntSingle">
            <summary>设置 Mathf.FloorToInt(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.GammaSingleSingleSingle">
            <summary>设置 Mathf.Gamma(Single value, Single absmax, Single gamma) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.InverseLerpSingleSingleSingle">
            <summary>设置 Mathf.InverseLerp(Single from, Single to, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.LerpAngleSingleSingleSingle">
            <summary>设置 Mathf.LerpAngle(Single a, Single b, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.LerpSingleSingleSingle">
            <summary>设置 Mathf.Lerp(Single from, Single to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.LineIntersectionVector2Vector2Vector2Vector2Vector2Ref">
            <summary>设置 Mathf.LineIntersection(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2&amp; result) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.LineSegmentIntersectionVector2Vector2Vector2Vector2Vector2Ref">
            <summary>设置 Mathf.LineSegmentIntersection(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2&amp; result) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.Log10Single">
            <summary>设置 Mathf.Log10(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.LogSingle">
            <summary>设置 Mathf.Log(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.LogSingleSingle">
            <summary>设置 Mathf.Log(Single f, Single p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MaxInt32Array">
            <summary>设置 Mathf.Max(Int32[] values) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MaxInt32Int32">
            <summary>设置 Mathf.Max(Int32 a, Int32 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MaxSingleArray">
            <summary>设置 Mathf.Max(Single[] values) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MaxSingleSingle">
            <summary>设置 Mathf.Max(Single a, Single b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MinInt32Array">
            <summary>设置 Mathf.Min(Int32[] values) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MinInt32Int32">
            <summary>设置 Mathf.Min(Int32 a, Int32 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MinSingleArray">
            <summary>设置 Mathf.Min(Single[] values) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MinSingleSingle">
            <summary>设置 Mathf.Min(Single a, Single b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MoveTowardsAngleSingleSingleSingle">
            <summary>设置 Mathf.MoveTowardsAngle(Single current, Single target, Single maxDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.MoveTowardsSingleSingleSingle">
            <summary>设置 Mathf.MoveTowards(Single current, Single target, Single maxDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.PingPongSingleSingle">
            <summary>设置 Mathf.PingPong(Single t, Single length) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.PowSingleSingle">
            <summary>设置 Mathf.Pow(Single f, Single p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.RepeatSingleSingle">
            <summary>设置 Mathf.Repeat(Single t, Single length) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.RoundSingle">
            <summary>设置 Mathf.Round(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.RoundToIntSingle">
            <summary>设置 Mathf.RoundToInt(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SignSingle">
            <summary>设置 Mathf.Sign(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SinSingle">
            <summary>设置 Mathf.Sin(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SmoothDampAngleSingleSingleSingleRefSingle">
            <summary>设置 Mathf.SmoothDampAngle(Single current, Single target, Single&amp; currentVelocity, Single smoothTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SmoothDampAngleSingleSingleSingleRefSingleSingle">
            <summary>设置 Mathf.SmoothDampAngle(Single current, Single target, Single&amp; currentVelocity, Single smoothTime, Single maxSpeed) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SmoothDampAngleSingleSingleSingleRefSingleSingleSingle">
            <summary>设置 Mathf.SmoothDampAngle(Single current, Single target, Single&amp; currentVelocity, Single smoothTime, Single maxSpeed, Single deltaTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SmoothDampSingleSingleSingleRefSingle">
            <summary>设置 Mathf.SmoothDamp(Single current, Single target, Single&amp; currentVelocity, Single smoothTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SmoothDampSingleSingleSingleRefSingleSingle">
            <summary>设置 Mathf.SmoothDamp(Single current, Single target, Single&amp; currentVelocity, Single smoothTime, Single maxSpeed) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SmoothDampSingleSingleSingleRefSingleSingleSingle">
            <summary>设置 Mathf.SmoothDamp(Single current, Single target, Single&amp; currentVelocity, Single smoothTime, Single maxSpeed, Single deltaTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SmoothStepSingleSingleSingle">
            <summary>设置 Mathf.SmoothStep(Single from, Single to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.SqrtSingle">
            <summary>设置 Mathf.Sqrt(Single f) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMathf.TanSingle">
            <summary>设置 Mathf.Tan(Single f) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMatrix4x4">
            <summary>UnityEngine.Matrix4x4 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMatrix4x4.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMatrix4x4.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMatrix4x4.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMatrix4x4.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.EqualityOpMatrix4x4Matrix4x4">
            <summary>设置 Matrix4x4.op_Equality(Matrix4x4 lhs, Matrix4x4 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.InequalityOpMatrix4x4Matrix4x4">
            <summary>设置 Matrix4x4.op_Inequality(Matrix4x4 lhs, Matrix4x4 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.InverseMatrix4x4">
            <summary>设置 Matrix4x4.Inverse(Matrix4x4 m) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.InvertMatrix4x4Matrix4x4Out">
            <summary>设置 Matrix4x4.Invert(Matrix4x4 inMatrix, Matrix4x4&amp; dest) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.MultiplyOpMatrix4x4Matrix4x4">
            <summary>设置 Matrix4x4.op_Multiply(Matrix4x4 lhs, Matrix4x4 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.MultiplyOpMatrix4x4Vector4">
            <summary>设置 Matrix4x4.op_Multiply(Matrix4x4 lhs, Vector4 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.ScaleVector3">
            <summary>设置 Matrix4x4.Scale(Vector3 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.TRSVector3QuaternionVector3">
            <summary>设置 Matrix4x4.TRS(Vector3 pos, Quaternion q, Vector3 s) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.TransposeMatrix4x4">
            <summary>设置 Matrix4x4.Transpose(Matrix4x4 m) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.identityGet">
            <summary>设置 Matrix4x4.get_identity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMatrix4x4.zeroGet">
            <summary>设置 Matrix4x4.get_zero() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMesh">
            <summary>UnityEngine.Mesh 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMesh.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMesh.#ctor(UnityEngine.Mesh)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMesh.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.AllInstances.Clear">
            <summary>设置 Mesh.Clear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.AllInstances.CombineMeshesCombineInstanceArray">
            <summary>设置 Mesh.CombineMeshes(CombineInstance[] combine) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.AllInstances.CombineMeshesCombineInstanceArrayBoolean">
            <summary>设置 Mesh.CombineMeshes(CombineInstance[] combine, Boolean mergeSubMeshes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.AllInstances.boundsGet">
            <summary>设置 Mesh.get_bounds() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.AllInstances.boundsSetBounds">
            <summary>设置 Mesh.set_bounds(Bounds value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.AllInstances.uv1Get">
            <summary>设置 Mesh.get_uv1() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.AllInstances.uv1SetVector2Array">
            <summary>设置 Mesh.set_uv1(Vector2[] value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMesh.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMesh.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.Clear">
            <summary>设置 Mesh.Clear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.CombineMeshesCombineInstanceArray">
            <summary>设置 Mesh.CombineMeshes(CombineInstance[] combine) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.CombineMeshesCombineInstanceArrayBoolean">
            <summary>设置 Mesh.CombineMeshes(CombineInstance[] combine, Boolean mergeSubMeshes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.Constructor">
            <summary>设置 Mesh.Mesh() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.boundsGet">
            <summary>设置 Mesh.get_bounds() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.boundsSetBounds">
            <summary>设置 Mesh.set_bounds(Bounds value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.uv1Get">
            <summary>设置 Mesh.get_uv1() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMesh.uv1SetVector2Array">
            <summary>设置 Mesh.set_uv1(Vector2[] value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMeshCollider">
            <summary>UnityEngine.MeshCollider 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshCollider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshCollider.#ctor(UnityEngine.MeshCollider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMeshCollider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshCollider.AllInstances.meshGet">
            <summary>设置 MeshCollider.get_mesh() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshCollider.AllInstances.meshSetMesh">
            <summary>设置 MeshCollider.set_mesh(Mesh value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshCollider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshCollider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshCollider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshCollider.Constructor">
            <summary>设置 MeshCollider.MeshCollider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshCollider.meshGet">
            <summary>设置 MeshCollider.get_mesh() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshCollider.meshSetMesh">
            <summary>设置 MeshCollider.set_mesh(Mesh value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMeshFilter">
            <summary>UnityEngine.MeshFilter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshFilter.#ctor(UnityEngine.MeshFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMeshFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshFilter.Constructor">
            <summary>设置 MeshFilter.MeshFilter() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMeshRenderer">
            <summary>UnityEngine.MeshRenderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshRenderer.#ctor(UnityEngine.MeshRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMeshRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMeshRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMeshRenderer.Constructor">
            <summary>设置 MeshRenderer.MeshRenderer() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMicrophone">
            <summary>UnityEngine.Microphone 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMicrophone.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMicrophone.#ctor(UnityEngine.Microphone)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMicrophone.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMicrophone.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMicrophone.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMicrophone.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMicrophone.Constructor">
            <summary>设置 Microphone.Microphone() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMissingComponentException">
            <summary>UnityEngine.MissingComponentException 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingComponentException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingComponentException.#ctor(UnityEngine.MissingComponentException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMissingComponentException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingComponentException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingComponentException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingComponentException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingComponentException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingComponentException.Constructor">
            <summary>设置 MissingComponentException.MissingComponentException() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingComponentException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 MissingComponentException.MissingComponentException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingComponentException.ConstructorString">
            <summary>设置 MissingComponentException.MissingComponentException(String message) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingComponentException.ConstructorStringException">
            <summary>设置 MissingComponentException.MissingComponentException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMissingReferenceException">
            <summary>UnityEngine.MissingReferenceException 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingReferenceException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingReferenceException.#ctor(UnityEngine.MissingReferenceException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMissingReferenceException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingReferenceException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingReferenceException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingReferenceException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMissingReferenceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingReferenceException.Constructor">
            <summary>设置 MissingReferenceException.MissingReferenceException() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingReferenceException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 MissingReferenceException.MissingReferenceException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingReferenceException.ConstructorString">
            <summary>设置 MissingReferenceException.MissingReferenceException(String message) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMissingReferenceException.ConstructorStringException">
            <summary>设置 MissingReferenceException.MissingReferenceException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMonoBehaviour">
            <summary>UnityEngine.MonoBehaviour 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMonoBehaviour.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMonoBehaviour.#ctor(UnityEngine.MonoBehaviour)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMonoBehaviour.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.AllInstances.CancelInvoke">
            <summary>设置 MonoBehaviour.CancelInvoke() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.AllInstances.IsInvoking">
            <summary>设置 MonoBehaviour.IsInvoking() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.AllInstances.StartCoroutineIEnumerator">
            <summary>设置 MonoBehaviour.StartCoroutine(IEnumerator routine) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.AllInstances.StartCoroutineString">
            <summary>设置 MonoBehaviour.StartCoroutine(String methodName) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMonoBehaviour.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMonoBehaviour.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.CancelInvoke">
            <summary>设置 MonoBehaviour.CancelInvoke() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.IsInvoking">
            <summary>设置 MonoBehaviour.IsInvoking() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.StartCoroutineIEnumerator">
            <summary>设置 MonoBehaviour.StartCoroutine(IEnumerator routine) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.StartCoroutineString">
            <summary>设置 MonoBehaviour.StartCoroutine(String methodName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMonoBehaviour.printObject">
            <summary>设置 MonoBehaviour.print(Object message) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMotion">
            <summary>UnityEngine.Motion 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMotion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMotion.#ctor(UnityEngine.Motion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMotion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMotion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMotion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMotion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMotion.Constructor">
            <summary>设置 Motion.Motion() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMovieTexture">
            <summary>UnityEngine.MovieTexture 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMovieTexture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMovieTexture.#ctor(UnityEngine.MovieTexture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMovieTexture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMovieTexture.AllInstances.Pause">
            <summary>设置 MovieTexture.Pause() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMovieTexture.AllInstances.Play">
            <summary>设置 MovieTexture.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMovieTexture.AllInstances.Stop">
            <summary>设置 MovieTexture.Stop() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMovieTexture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMovieTexture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMovieTexture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMovieTexture.Constructor">
            <summary>设置 MovieTexture.MovieTexture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMovieTexture.Pause">
            <summary>设置 MovieTexture.Pause() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMovieTexture.Play">
            <summary>设置 MovieTexture.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMovieTexture.Stop">
            <summary>设置 MovieTexture.Stop() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMultilineAttribute">
            <summary>UnityEngine.MultilineAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMultilineAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMultilineAttribute.#ctor(UnityEngine.MultilineAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimMultilineAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMultilineAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimMultilineAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMultilineAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMultilineAttribute.Constructor">
            <summary>设置 MultilineAttribute.MultilineAttribute() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimMultilineAttribute.ConstructorInt32">
            <summary>设置 MultilineAttribute.MultilineAttribute(Int32 lines) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMesh">
            <summary>UnityEngine.NavMesh 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMesh.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMesh.#ctor(UnityEngine.NavMesh)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMesh.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMesh.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMesh.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMesh.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMesh.CalculatePathInternalVector3Vector3Int32NavMeshPath">
            <summary>设置 NavMesh.CalculatePathInternal(Vector3 sourcePosition, Vector3 targetPosition, Int32 passableMask, NavMeshPath path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMesh.CalculatePathVector3Vector3Int32NavMeshPath">
            <summary>设置 NavMesh.CalculatePath(Vector3 sourcePosition, Vector3 targetPosition, Int32 passableMask, NavMeshPath path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMesh.CalculateTriangulation">
            <summary>设置 NavMesh.CalculateTriangulation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMesh.Constructor">
            <summary>设置 NavMesh.NavMesh() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMesh.FindClosestEdgeVector3NavMeshHitOutInt32">
            <summary>设置 NavMesh.FindClosestEdge(Vector3 sourcePosition, NavMeshHit&amp; hit, Int32 passableMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMesh.RaycastVector3Vector3NavMeshHitOutInt32">
            <summary>设置 NavMesh.Raycast(Vector3 sourcePosition, Vector3 targetPosition, NavMeshHit&amp; hit, Int32 passableMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMesh.SamplePositionVector3NavMeshHitOutSingleInt32">
            <summary>设置 NavMesh.SamplePosition(Vector3 sourcePosition, NavMeshHit&amp; hit, Single maxDistance, Int32 allowedMask) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshAgent">
            <summary>UnityEngine.NavMeshAgent 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshAgent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshAgent.#ctor(UnityEngine.NavMeshAgent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.CalculatePathInternalVector3NavMeshPath">
            <summary>设置 NavMeshAgent.CalculatePathInternal(Vector3 targetPosition, NavMeshPath path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.CalculatePathVector3NavMeshPath">
            <summary>设置 NavMeshAgent.CalculatePath(Vector3 targetPosition, NavMeshPath path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.MoveVector3">
            <summary>设置 NavMeshAgent.Move(Vector3 offset) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.RaycastVector3NavMeshHitOut">
            <summary>设置 NavMeshAgent.Raycast(Vector3 targetPosition, NavMeshHit&amp; hit) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.SetDestinationVector3">
            <summary>设置 NavMeshAgent.SetDestination(Vector3 target) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.Stop">
            <summary>设置 NavMeshAgent.Stop() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.WarpVector3">
            <summary>设置 NavMeshAgent.Warp(Vector3 newPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.currentOffMeshLinkDataGet">
            <summary>设置 NavMeshAgent.get_currentOffMeshLinkData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.desiredVelocityGet">
            <summary>设置 NavMeshAgent.get_desiredVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.destinationGet">
            <summary>设置 NavMeshAgent.get_destination() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.destinationSetVector3">
            <summary>设置 NavMeshAgent.set_destination(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.nextOffMeshLinkDataGet">
            <summary>设置 NavMeshAgent.get_nextOffMeshLinkData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.nextPositionGet">
            <summary>设置 NavMeshAgent.get_nextPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.nextPositionSetVector3">
            <summary>设置 NavMeshAgent.set_nextPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.pathEndPositionGet">
            <summary>设置 NavMeshAgent.get_pathEndPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.pathGet">
            <summary>设置 NavMeshAgent.get_path() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.pathSetNavMeshPath">
            <summary>设置 NavMeshAgent.set_path(NavMeshPath value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.steeringTargetGet">
            <summary>设置 NavMeshAgent.get_steeringTarget() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.velocityGet">
            <summary>设置 NavMeshAgent.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.AllInstances.velocitySetVector3">
            <summary>设置 NavMeshAgent.set_velocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshAgent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshAgent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.CalculatePathInternalVector3NavMeshPath">
            <summary>设置 NavMeshAgent.CalculatePathInternal(Vector3 targetPosition, NavMeshPath path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.CalculatePathVector3NavMeshPath">
            <summary>设置 NavMeshAgent.CalculatePath(Vector3 targetPosition, NavMeshPath path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.Constructor">
            <summary>设置 NavMeshAgent.NavMeshAgent() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.MoveVector3">
            <summary>设置 NavMeshAgent.Move(Vector3 offset) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.RaycastVector3NavMeshHitOut">
            <summary>设置 NavMeshAgent.Raycast(Vector3 targetPosition, NavMeshHit&amp; hit) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.SetDestinationVector3">
            <summary>设置 NavMeshAgent.SetDestination(Vector3 target) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.Stop">
            <summary>设置 NavMeshAgent.Stop() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.WarpVector3">
            <summary>设置 NavMeshAgent.Warp(Vector3 newPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.currentOffMeshLinkDataGet">
            <summary>设置 NavMeshAgent.get_currentOffMeshLinkData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.desiredVelocityGet">
            <summary>设置 NavMeshAgent.get_desiredVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.destinationGet">
            <summary>设置 NavMeshAgent.get_destination() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.destinationSetVector3">
            <summary>设置 NavMeshAgent.set_destination(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.nextOffMeshLinkDataGet">
            <summary>设置 NavMeshAgent.get_nextOffMeshLinkData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.nextPositionGet">
            <summary>设置 NavMeshAgent.get_nextPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.nextPositionSetVector3">
            <summary>设置 NavMeshAgent.set_nextPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.pathEndPositionGet">
            <summary>设置 NavMeshAgent.get_pathEndPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.pathGet">
            <summary>设置 NavMeshAgent.get_path() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.pathSetNavMeshPath">
            <summary>设置 NavMeshAgent.set_path(NavMeshPath value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.steeringTargetGet">
            <summary>设置 NavMeshAgent.get_steeringTarget() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.velocityGet">
            <summary>设置 NavMeshAgent.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshAgent.velocitySetVector3">
            <summary>设置 NavMeshAgent.set_velocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshHit">
            <summary>UnityEngine.NavMeshHit 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshHit.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshHit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshHit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshHit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshHit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshObstacle">
            <summary>UnityEngine.NavMeshObstacle 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshObstacle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshObstacle.#ctor(UnityEngine.NavMeshObstacle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshObstacle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshObstacle.AllInstances.velocityGet">
            <summary>设置 NavMeshObstacle.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshObstacle.AllInstances.velocitySetVector3">
            <summary>设置 NavMeshObstacle.set_velocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshObstacle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshObstacle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshObstacle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshObstacle.Constructor">
            <summary>设置 NavMeshObstacle.NavMeshObstacle() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshObstacle.velocityGet">
            <summary>设置 NavMeshObstacle.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshObstacle.velocitySetVector3">
            <summary>设置 NavMeshObstacle.set_velocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshPath">
            <summary>UnityEngine.NavMeshPath 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshPath.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshPath.#ctor(UnityEngine.NavMeshPath)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshPath.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshPath.AllInstances.CalculateCorners">
            <summary>设置 NavMeshPath.CalculateCorners() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshPath.AllInstances.ClearCorners">
            <summary>设置 NavMeshPath.ClearCorners() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshPath.AllInstances.cornersGet">
            <summary>设置 NavMeshPath.get_corners() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshPath.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshPath.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshPath.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshPath.CalculateCorners">
            <summary>设置 NavMeshPath.CalculateCorners() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshPath.ClearCorners">
            <summary>设置 NavMeshPath.ClearCorners() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshPath.cornersGet">
            <summary>设置 NavMeshPath.get_corners() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshTriangulation">
            <summary>UnityEngine.NavMeshTriangulation 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshTriangulation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNavMeshTriangulation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshTriangulation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNavMeshTriangulation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNavMeshTriangulation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetwork">
            <summary>UnityEngine.Network 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetwork.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetwork.#ctor(UnityEngine.Network)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetwork.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.AllocateViewID">
            <summary>设置 Network.AllocateViewID() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetwork.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetwork.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.ConnectHostData">
            <summary>设置 Network.Connect(HostData hostData) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.ConnectHostDataString">
            <summary>设置 Network.Connect(HostData hostData, String password) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.ConnectString">
            <summary>设置 Network.Connect(String GUID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.ConnectStringArrayInt32">
            <summary>设置 Network.Connect(String[] IPs, Int32 remotePort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.ConnectStringArrayInt32String">
            <summary>设置 Network.Connect(String[] IPs, Int32 remotePort, String password) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.ConnectStringInt32">
            <summary>设置 Network.Connect(String IP, Int32 remotePort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.ConnectStringInt32String">
            <summary>设置 Network.Connect(String IP, Int32 remotePort, String password) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.ConnectStringString">
            <summary>设置 Network.Connect(String GUID, String password) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.Constructor">
            <summary>设置 Network.Network() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.DestroyGameObject">
            <summary>设置 Network.Destroy(GameObject gameObject) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.DestroyNetworkViewID">
            <summary>设置 Network.Destroy(NetworkViewID viewID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.Disconnect">
            <summary>设置 Network.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.InitializeServerInt32Int32">
            <summary>设置 Network.InitializeServer(Int32 connections, Int32 listenPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.InstantiateObjectVector3QuaternionInt32">
            <summary>设置 Network.Instantiate(Object prefab, Vector3 position, Quaternion rotation, Int32 group) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.Internal_ConnectToIPsStringArrayInt32Int32">
            <summary>设置 Network.Internal_ConnectToIPs(String[] IP, Int32 remotePort, Int32 localPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.Internal_ConnectToSingleIPStringInt32Int32">
            <summary>设置 Network.Internal_ConnectToSingleIP(String IP, Int32 remotePort, Int32 localPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.Internal_RemoveRPCsNetworkPlayerNetworkViewIDUInt32">
            <summary>设置 Network.Internal_RemoveRPCs(NetworkPlayer playerID, NetworkViewID viewID, UInt32 channelMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.RemoveRPCsInGroupInt32">
            <summary>设置 Network.RemoveRPCsInGroup(Int32 group) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.RemoveRPCsNetworkPlayer">
            <summary>设置 Network.RemoveRPCs(NetworkPlayer playerID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.RemoveRPCsNetworkPlayerInt32">
            <summary>设置 Network.RemoveRPCs(NetworkPlayer playerID, Int32 group) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.RemoveRPCsNetworkViewID">
            <summary>设置 Network.RemoveRPCs(NetworkViewID viewID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.SetSendingEnabledInt32Boolean">
            <summary>设置 Network.SetSendingEnabled(Int32 group, Boolean enabled) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.SetSendingEnabledNetworkPlayerInt32Boolean">
            <summary>设置 Network.SetSendingEnabled(NetworkPlayer player, Int32 group, Boolean enabled) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.TestConnection">
            <summary>设置 Network.TestConnection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.TestConnectionNAT">
            <summary>设置 Network.TestConnectionNAT() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.playerGet">
            <summary>设置 Network.get_player() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetwork.timeGet">
            <summary>设置 Network.get_time() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetworkMessageInfo">
            <summary>UnityEngine.NetworkMessageInfo 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkMessageInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetworkMessageInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkMessageInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkMessageInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkMessageInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetworkPlayer">
            <summary>UnityEngine.NetworkPlayer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkPlayer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetworkPlayer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkPlayer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkPlayer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkPlayer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkPlayer.EqualityOpNetworkPlayerNetworkPlayer">
            <summary>设置 NetworkPlayer.op_Equality(NetworkPlayer lhs, NetworkPlayer rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkPlayer.InequalityOpNetworkPlayerNetworkPlayer">
            <summary>设置 NetworkPlayer.op_Inequality(NetworkPlayer lhs, NetworkPlayer rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkPlayer.unassignedGet">
            <summary>设置 NetworkPlayer.get_unassigned() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetworkView">
            <summary>UnityEngine.NetworkView 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkView.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkView.#ctor(UnityEngine.NetworkView)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetworkView.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.AllInstances.Internal_SetViewIDNetworkViewID">
            <summary>设置 NetworkView.Internal_SetViewID(NetworkViewID viewID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.AllInstances.RPCStringNetworkPlayerObjectArray">
            <summary>设置 NetworkView.RPC(String name, NetworkPlayer target, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.AllInstances.RPCStringRPCModeObjectArray">
            <summary>设置 NetworkView.RPC(String name, RPCMode mode, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.AllInstances.isMineGet">
            <summary>设置 NetworkView.get_isMine() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.AllInstances.ownerGet">
            <summary>设置 NetworkView.get_owner() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.AllInstances.viewIDGet">
            <summary>设置 NetworkView.get_viewID() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.AllInstances.viewIDSetNetworkViewID">
            <summary>设置 NetworkView.set_viewID(NetworkViewID value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkView.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkView.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.Constructor">
            <summary>设置 NetworkView.NetworkView() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.FindNetworkViewID">
            <summary>设置 NetworkView.Find(NetworkViewID viewID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.Internal_SetViewIDNetworkViewID">
            <summary>设置 NetworkView.Internal_SetViewID(NetworkViewID viewID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.RPCStringNetworkPlayerObjectArray">
            <summary>设置 NetworkView.RPC(String name, NetworkPlayer target, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.RPCStringRPCModeObjectArray">
            <summary>设置 NetworkView.RPC(String name, RPCMode mode, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.isMineGet">
            <summary>设置 NetworkView.get_isMine() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.ownerGet">
            <summary>设置 NetworkView.get_owner() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.viewIDGet">
            <summary>设置 NetworkView.get_viewID() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkView.viewIDSetNetworkViewID">
            <summary>设置 NetworkView.set_viewID(NetworkViewID value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetworkViewID">
            <summary>UnityEngine.NetworkViewID 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkViewID.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNetworkViewID.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkViewID.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNetworkViewID.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkViewID.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkViewID.EqualityOpNetworkViewIDNetworkViewID">
            <summary>设置 NetworkViewID.op_Equality(NetworkViewID lhs, NetworkViewID rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkViewID.InequalityOpNetworkViewIDNetworkViewID">
            <summary>设置 NetworkViewID.op_Inequality(NetworkViewID lhs, NetworkViewID rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkViewID.Internal_CompareNetworkViewIDNetworkViewID">
            <summary>设置 NetworkViewID.Internal_Compare(NetworkViewID lhs, NetworkViewID rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkViewID.Internal_GetOwnerNetworkViewIDNetworkPlayerOut">
            <summary>设置 NetworkViewID.Internal_GetOwner(NetworkViewID value, NetworkPlayer&amp; player) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkViewID.Internal_GetStringNetworkViewID">
            <summary>设置 NetworkViewID.Internal_GetString(NetworkViewID value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNetworkViewID.Internal_IsMineNetworkViewID">
            <summary>设置 NetworkViewID.Internal_IsMine(NetworkViewID value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNotConvertedAttribute">
            <summary>UnityEngine.NotConvertedAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotConvertedAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotConvertedAttribute.#ctor(UnityEngine.NotConvertedAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNotConvertedAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotConvertedAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotConvertedAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotConvertedAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotConvertedAttribute.Constructor">
            <summary>设置 NotConvertedAttribute.NotConvertedAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNotFlashValidatedAttribute">
            <summary>UnityEngine.NotFlashValidatedAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotFlashValidatedAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotFlashValidatedAttribute.#ctor(UnityEngine.NotFlashValidatedAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNotFlashValidatedAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotFlashValidatedAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotFlashValidatedAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotFlashValidatedAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotFlashValidatedAttribute.Constructor">
            <summary>设置 NotFlashValidatedAttribute.NotFlashValidatedAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNotRenamedAttribute">
            <summary>UnityEngine.NotRenamedAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotRenamedAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotRenamedAttribute.#ctor(UnityEngine.NotRenamedAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNotRenamedAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotRenamedAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotRenamedAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotRenamedAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotRenamedAttribute.Constructor">
            <summary>设置 NotRenamedAttribute.NotRenamedAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNotificationServices">
            <summary>UnityEngine.NotificationServices 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotificationServices.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotificationServices.#ctor(UnityEngine.NotificationServices)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimNotificationServices.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotificationServices.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimNotificationServices.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotificationServices.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotificationServices.Constructor">
            <summary>设置 NotificationServices.NotificationServices() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotificationServices.localNotificationsGet">
            <summary>设置 NotificationServices.get_localNotifications() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimNotificationServices.remoteNotificationsGet">
            <summary>设置 NotificationServices.get_remoteNotifications() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimObject">
            <summary>UnityEngine.Object 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimObject.#ctor(UnityEngine.Object)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.AllInstances.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.AllInstances.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.AllInstances.GetInstanceID">
            <summary>设置 Object.GetInstanceID() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.CheckNullArgumentObjectString">
            <summary>设置 Object.CheckNullArgument(Object arg, String message) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.CompareBaseObjectsObjectObject">
            <summary>设置 Object.CompareBaseObjects(Object lhs, Object rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.Constructor">
            <summary>设置 Object.Object() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.DestroyImmediateObject">
            <summary>设置 Object.DestroyImmediate(Object obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.DestroyObject">
            <summary>设置 Object.Destroy(Object obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.DestroyObjectObject">
            <summary>设置 Object.DestroyObject(Object obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.EqualityOpObjectObject">
            <summary>设置 Object.op_Equality(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimObject.FindObjectOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 Object.FindObjectOfType() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.FindObjectOfTypeType">
            <summary>设置 Object.FindObjectOfType(Type type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.FindObjectsOfTypeAllType">
            <summary>设置 Object.FindObjectsOfTypeAll(Type type) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimObject.FindObjectsOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>设置 Object.FindObjectsOfType() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.GetInstanceID">
            <summary>设置 Object.GetInstanceID() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.ImplicitOpObjectBoolean">
            <summary>设置 Object.op_Implicit(Object exists) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.InequalityOpObjectObject">
            <summary>设置 Object.op_Inequality(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.InstantiateObject">
            <summary>设置 Object.Instantiate(Object original) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.InstantiateObjectVector3Quaternion">
            <summary>设置 Object.Instantiate(Object original, Vector3 position, Quaternion rotation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimObject.Internal_InstantiateSingleObjectVector3Quaternion">
            <summary>设置 Object.Internal_InstantiateSingle(Object data, Vector3 pos, Quaternion rot) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimOcclusionArea">
            <summary>UnityEngine.OcclusionArea 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOcclusionArea.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOcclusionArea.#ctor(UnityEngine.OcclusionArea)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimOcclusionArea.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.AllInstances.centerGet">
            <summary>设置 OcclusionArea.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.AllInstances.centerSetVector3">
            <summary>设置 OcclusionArea.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.AllInstances.sizeGet">
            <summary>设置 OcclusionArea.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.AllInstances.sizeSetVector3">
            <summary>设置 OcclusionArea.set_size(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOcclusionArea.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOcclusionArea.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.Constructor">
            <summary>设置 OcclusionArea.OcclusionArea() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.centerGet">
            <summary>设置 OcclusionArea.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.centerSetVector3">
            <summary>设置 OcclusionArea.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.sizeGet">
            <summary>设置 OcclusionArea.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionArea.sizeSetVector3">
            <summary>设置 OcclusionArea.set_size(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimOcclusionPortal">
            <summary>UnityEngine.OcclusionPortal 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOcclusionPortal.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOcclusionPortal.#ctor(UnityEngine.OcclusionPortal)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimOcclusionPortal.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOcclusionPortal.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOcclusionPortal.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionPortal.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOcclusionPortal.Constructor">
            <summary>设置 OcclusionPortal.OcclusionPortal() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimOffMeshLink">
            <summary>UnityEngine.OffMeshLink 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOffMeshLink.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOffMeshLink.#ctor(UnityEngine.OffMeshLink)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimOffMeshLink.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOffMeshLink.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOffMeshLink.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOffMeshLink.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOffMeshLink.Constructor">
            <summary>设置 OffMeshLink.OffMeshLink() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimOffMeshLinkData">
            <summary>UnityEngine.OffMeshLinkData 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOffMeshLinkData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimOffMeshLinkData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOffMeshLinkData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimOffMeshLinkData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimOffMeshLinkData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticle">
            <summary>UnityEngine.Particle 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleAnimator">
            <summary>UnityEngine.ParticleAnimator 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleAnimator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleAnimator.#ctor(UnityEngine.ParticleAnimator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleAnimator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.AllInstances.forceGet">
            <summary>设置 ParticleAnimator.get_force() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.AllInstances.forceSetVector3">
            <summary>设置 ParticleAnimator.set_force(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.AllInstances.localRotationAxisGet">
            <summary>设置 ParticleAnimator.get_localRotationAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.AllInstances.localRotationAxisSetVector3">
            <summary>设置 ParticleAnimator.set_localRotationAxis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.AllInstances.rndForceGet">
            <summary>设置 ParticleAnimator.get_rndForce() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.AllInstances.rndForceSetVector3">
            <summary>设置 ParticleAnimator.set_rndForce(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.AllInstances.worldRotationAxisGet">
            <summary>设置 ParticleAnimator.get_worldRotationAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.AllInstances.worldRotationAxisSetVector3">
            <summary>设置 ParticleAnimator.set_worldRotationAxis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleAnimator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleAnimator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.Constructor">
            <summary>设置 ParticleAnimator.ParticleAnimator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.forceGet">
            <summary>设置 ParticleAnimator.get_force() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.forceSetVector3">
            <summary>设置 ParticleAnimator.set_force(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.localRotationAxisGet">
            <summary>设置 ParticleAnimator.get_localRotationAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.localRotationAxisSetVector3">
            <summary>设置 ParticleAnimator.set_localRotationAxis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.rndForceGet">
            <summary>设置 ParticleAnimator.get_rndForce() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.rndForceSetVector3">
            <summary>设置 ParticleAnimator.set_rndForce(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.worldRotationAxisGet">
            <summary>设置 ParticleAnimator.get_worldRotationAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleAnimator.worldRotationAxisSetVector3">
            <summary>设置 ParticleAnimator.set_worldRotationAxis(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleEmitter">
            <summary>UnityEngine.ParticleEmitter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleEmitter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleEmitter.#ctor(UnityEngine.ParticleEmitter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleEmitter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.ClearParticles">
            <summary>设置 ParticleEmitter.ClearParticles() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.Emit">
            <summary>设置 ParticleEmitter.Emit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.EmitInt32">
            <summary>设置 ParticleEmitter.Emit(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.EmitVector3Vector3SingleSingleColor">
            <summary>设置 ParticleEmitter.Emit(Vector3 pos, Vector3 velocity, Single size, Single energy, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.EmitVector3Vector3SingleSingleColorSingleSingle">
            <summary>设置 ParticleEmitter.Emit(Vector3 pos, Vector3 velocity, Single size, Single energy, Color color, Single rotation, Single angularVelocity) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.localVelocityGet">
            <summary>设置 ParticleEmitter.get_localVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.localVelocitySetVector3">
            <summary>设置 ParticleEmitter.set_localVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.rndVelocityGet">
            <summary>设置 ParticleEmitter.get_rndVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.rndVelocitySetVector3">
            <summary>设置 ParticleEmitter.set_rndVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.worldVelocityGet">
            <summary>设置 ParticleEmitter.get_worldVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.AllInstances.worldVelocitySetVector3">
            <summary>设置 ParticleEmitter.set_worldVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleEmitter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleEmitter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.ClearParticles">
            <summary>设置 ParticleEmitter.ClearParticles() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.Constructor">
            <summary>设置 ParticleEmitter.ParticleEmitter() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.Emit">
            <summary>设置 ParticleEmitter.Emit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.EmitInt32">
            <summary>设置 ParticleEmitter.Emit(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.EmitVector3Vector3SingleSingleColor">
            <summary>设置 ParticleEmitter.Emit(Vector3 pos, Vector3 velocity, Single size, Single energy, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.EmitVector3Vector3SingleSingleColorSingleSingle">
            <summary>设置 ParticleEmitter.Emit(Vector3 pos, Vector3 velocity, Single size, Single energy, Color color, Single rotation, Single angularVelocity) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.localVelocityGet">
            <summary>设置 ParticleEmitter.get_localVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.localVelocitySetVector3">
            <summary>设置 ParticleEmitter.set_localVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.rndVelocityGet">
            <summary>设置 ParticleEmitter.get_rndVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.rndVelocitySetVector3">
            <summary>设置 ParticleEmitter.set_rndVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.worldVelocityGet">
            <summary>设置 ParticleEmitter.get_worldVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleEmitter.worldVelocitySetVector3">
            <summary>设置 ParticleEmitter.set_worldVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleRenderer">
            <summary>UnityEngine.ParticleRenderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleRenderer.#ctor(UnityEngine.ParticleRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.animatedTextureCountGet">
            <summary>设置 ParticleRenderer.get_animatedTextureCount() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.animatedTextureCountSetInt32">
            <summary>设置 ParticleRenderer.set_animatedTextureCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.heightCurveGet">
            <summary>设置 ParticleRenderer.get_heightCurve() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.heightCurveSetAnimationCurve">
            <summary>设置 ParticleRenderer.set_heightCurve(AnimationCurve value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.maxPartileSizeGet">
            <summary>设置 ParticleRenderer.get_maxPartileSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.maxPartileSizeSetSingle">
            <summary>设置 ParticleRenderer.set_maxPartileSize(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.rotationCurveGet">
            <summary>设置 ParticleRenderer.get_rotationCurve() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.rotationCurveSetAnimationCurve">
            <summary>设置 ParticleRenderer.set_rotationCurve(AnimationCurve value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.widthCurveGet">
            <summary>设置 ParticleRenderer.get_widthCurve() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.AllInstances.widthCurveSetAnimationCurve">
            <summary>设置 ParticleRenderer.set_widthCurve(AnimationCurve value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.Constructor">
            <summary>设置 ParticleRenderer.ParticleRenderer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.animatedTextureCountGet">
            <summary>设置 ParticleRenderer.get_animatedTextureCount() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.animatedTextureCountSetInt32">
            <summary>设置 ParticleRenderer.set_animatedTextureCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.heightCurveGet">
            <summary>设置 ParticleRenderer.get_heightCurve() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.heightCurveSetAnimationCurve">
            <summary>设置 ParticleRenderer.set_heightCurve(AnimationCurve value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.maxPartileSizeGet">
            <summary>设置 ParticleRenderer.get_maxPartileSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.maxPartileSizeSetSingle">
            <summary>设置 ParticleRenderer.set_maxPartileSize(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.rotationCurveGet">
            <summary>设置 ParticleRenderer.get_rotationCurve() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.rotationCurveSetAnimationCurve">
            <summary>设置 ParticleRenderer.set_rotationCurve(AnimationCurve value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.widthCurveGet">
            <summary>设置 ParticleRenderer.get_widthCurve() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleRenderer.widthCurveSetAnimationCurve">
            <summary>设置 ParticleRenderer.set_widthCurve(AnimationCurve value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleSystem">
            <summary>UnityEngine.ParticleSystem 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.#ctor(UnityEngine.ParticleSystem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleSystem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.Clear">
            <summary>设置 ParticleSystem.Clear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.ClearBoolean">
            <summary>设置 ParticleSystem.Clear(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.EmitInt32">
            <summary>设置 ParticleSystem.Emit(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.EmitParticleSystemParticle">
            <summary>设置 ParticleSystem.Emit(Particle particle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.EmitVector3Vector3SingleSingleColor32">
            <summary>设置 ParticleSystem.Emit(Vector3 position, Vector3 velocity, Single size, Single lifetime, Color32 color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.IsAlive">
            <summary>设置 ParticleSystem.IsAlive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.IsAliveBoolean">
            <summary>设置 ParticleSystem.IsAlive(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.Pause">
            <summary>设置 ParticleSystem.Pause() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.PauseBoolean">
            <summary>设置 ParticleSystem.Pause(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.Play">
            <summary>设置 ParticleSystem.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.PlayBoolean">
            <summary>设置 ParticleSystem.Play(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.SimulateSingle">
            <summary>设置 ParticleSystem.Simulate(Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.SimulateSingleBoolean">
            <summary>设置 ParticleSystem.Simulate(Single t, Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.SimulateSingleBooleanBoolean">
            <summary>设置 ParticleSystem.Simulate(Single t, Boolean withChildren, Boolean restart) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.Stop">
            <summary>设置 ParticleSystem.Stop() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.StopBoolean">
            <summary>设置 ParticleSystem.Stop(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.startColorGet">
            <summary>设置 ParticleSystem.get_startColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.AllInstances.startColorSetColor">
            <summary>设置 ParticleSystem.set_startColor(Color value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.Clear">
            <summary>设置 ParticleSystem.Clear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.ClearBoolean">
            <summary>设置 ParticleSystem.Clear(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.Constructor">
            <summary>设置 ParticleSystem.ParticleSystem() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.EmitInt32">
            <summary>设置 ParticleSystem.Emit(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.EmitParticleSystemParticle">
            <summary>设置 ParticleSystem.Emit(Particle particle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.EmitVector3Vector3SingleSingleColor32">
            <summary>设置 ParticleSystem.Emit(Vector3 position, Vector3 velocity, Single size, Single lifetime, Color32 color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.GetDirectParticleSystemChildrenRecursiveTransformListOfParticleSystem">
            <summary>设置 ParticleSystem.GetDirectParticleSystemChildrenRecursive(Transform transform, List`1&lt;ParticleSystem&gt; particleSystems) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.GetParticleSystemsParticleSystem">
            <summary>设置 ParticleSystem.GetParticleSystems(ParticleSystem root) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.IsAlive">
            <summary>设置 ParticleSystem.IsAlive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.IsAliveBoolean">
            <summary>设置 ParticleSystem.IsAlive(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.Pause">
            <summary>设置 ParticleSystem.Pause() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.PauseBoolean">
            <summary>设置 ParticleSystem.Pause(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.Play">
            <summary>设置 ParticleSystem.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.PlayBoolean">
            <summary>设置 ParticleSystem.Play(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleSystem.ShimCollisionEvent">
            <summary>UnityEngine.ParticleSystem+CollisionEvent 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.ShimCollisionEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleSystem.ShimCollisionEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.ShimCollisionEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.ShimCollisionEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.ShimCollisionEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleSystem.ShimParticle">
            <summary>UnityEngine.ParticleSystem+Particle 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.ShimParticle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleSystem.ShimParticle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.ShimParticle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystem.ShimParticle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.ShimParticle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.SimulateSingle">
            <summary>设置 ParticleSystem.Simulate(Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.SimulateSingleBoolean">
            <summary>设置 ParticleSystem.Simulate(Single t, Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.SimulateSingleBooleanBoolean">
            <summary>设置 ParticleSystem.Simulate(Single t, Boolean withChildren, Boolean restart) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.Stop">
            <summary>设置 ParticleSystem.Stop() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.StopBoolean">
            <summary>设置 ParticleSystem.Stop(Boolean withChildren) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.startColorGet">
            <summary>设置 ParticleSystem.get_startColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystem.startColorSetColor">
            <summary>设置 ParticleSystem.set_startColor(Color value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleSystemRenderer">
            <summary>UnityEngine.ParticleSystemRenderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystemRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystemRenderer.#ctor(UnityEngine.ParticleSystemRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimParticleSystemRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystemRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimParticleSystemRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystemRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimParticleSystemRenderer.Constructor">
            <summary>设置 ParticleSystemRenderer.ParticleSystemRenderer() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPhysicMaterial">
            <summary>UnityEngine.PhysicMaterial 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysicMaterial.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysicMaterial.#ctor(UnityEngine.PhysicMaterial)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPhysicMaterial.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.AllInstances.bouncynessGet">
            <summary>设置 PhysicMaterial.get_bouncyness() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.AllInstances.bouncynessSetSingle">
            <summary>设置 PhysicMaterial.set_bouncyness(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.AllInstances.frictionDirection2Get">
            <summary>设置 PhysicMaterial.get_frictionDirection2() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.AllInstances.frictionDirection2SetVector3">
            <summary>设置 PhysicMaterial.set_frictionDirection2(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.AllInstances.frictionDirectionGet">
            <summary>设置 PhysicMaterial.get_frictionDirection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.AllInstances.frictionDirectionSetVector3">
            <summary>设置 PhysicMaterial.set_frictionDirection(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysicMaterial.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysicMaterial.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.Constructor">
            <summary>设置 PhysicMaterial.PhysicMaterial() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.ConstructorString">
            <summary>设置 PhysicMaterial.PhysicMaterial(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.bouncynessGet">
            <summary>设置 PhysicMaterial.get_bouncyness() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.bouncynessSetSingle">
            <summary>设置 PhysicMaterial.set_bouncyness(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.frictionDirection2Get">
            <summary>设置 PhysicMaterial.get_frictionDirection2() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.frictionDirection2SetVector3">
            <summary>设置 PhysicMaterial.set_frictionDirection2(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.frictionDirectionGet">
            <summary>设置 PhysicMaterial.get_frictionDirection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicMaterial.frictionDirectionSetVector3">
            <summary>设置 PhysicMaterial.set_frictionDirection(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPhysics">
            <summary>UnityEngine.Physics 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysics.#ctor(UnityEngine.Physics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPhysics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastAllVector3Vector3SingleVector3">
            <summary>设置 Physics.CapsuleCastAll(Vector3 point1, Vector3 point2, Single radius, Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastAllVector3Vector3SingleVector3Single">
            <summary>设置 Physics.CapsuleCastAll(Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastAllVector3Vector3SingleVector3SingleInt32">
            <summary>设置 Physics.CapsuleCastAll(Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single distance, Int32 layermask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastVector3Vector3SingleVector3">
            <summary>设置 Physics.CapsuleCast(Vector3 point1, Vector3 point2, Single radius, Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastVector3Vector3SingleVector3RaycastHitOut">
            <summary>设置 Physics.CapsuleCast(Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit&amp; hitInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastVector3Vector3SingleVector3RaycastHitOutSingle">
            <summary>设置 Physics.CapsuleCast(Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit&amp; hitInfo, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastVector3Vector3SingleVector3RaycastHitOutSingleInt32">
            <summary>设置 Physics.CapsuleCast(Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit&amp; hitInfo, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastVector3Vector3SingleVector3Single">
            <summary>设置 Physics.CapsuleCast(Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CapsuleCastVector3Vector3SingleVector3SingleInt32">
            <summary>设置 Physics.CapsuleCast(Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CheckCapsuleVector3Vector3Single">
            <summary>设置 Physics.CheckCapsule(Vector3 start, Vector3 end, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CheckCapsuleVector3Vector3SingleInt32">
            <summary>设置 Physics.CheckCapsule(Vector3 start, Vector3 end, Single radius, Int32 layermask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CheckSphereVector3Single">
            <summary>设置 Physics.CheckSphere(Vector3 position, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.CheckSphereVector3SingleInt32">
            <summary>设置 Physics.CheckSphere(Vector3 position, Single radius, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.Constructor">
            <summary>设置 Physics.Physics() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.IgnoreCollisionColliderCollider">
            <summary>设置 Physics.IgnoreCollision(Collider collider1, Collider collider2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.IgnoreLayerCollisionInt32Int32">
            <summary>设置 Physics.IgnoreLayerCollision(Int32 layer1, Int32 layer2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.Internal_CapsuleCastVector3Vector3SingleVector3RaycastHitOutSingleInt32">
            <summary>设置 Physics.Internal_CapsuleCast(Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit&amp; hitInfo, Single distance, Int32 layermask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.Internal_RaycastTestVector3Vector3SingleInt32">
            <summary>设置 Physics.Internal_RaycastTest(Vector3 origin, Vector3 direction, Single distance, Int32 layermask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.Internal_RaycastVector3Vector3RaycastHitOutSingleInt32">
            <summary>设置 Physics.Internal_Raycast(Vector3 origin, Vector3 direction, RaycastHit&amp; hitInfo, Single distance, Int32 layermask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.LinecastVector3Vector3">
            <summary>设置 Physics.Linecast(Vector3 start, Vector3 end) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.LinecastVector3Vector3Int32">
            <summary>设置 Physics.Linecast(Vector3 start, Vector3 end, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.LinecastVector3Vector3RaycastHitOut">
            <summary>设置 Physics.Linecast(Vector3 start, Vector3 end, RaycastHit&amp; hitInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.LinecastVector3Vector3RaycastHitOutInt32">
            <summary>设置 Physics.Linecast(Vector3 start, Vector3 end, RaycastHit&amp; hitInfo, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.OverlapSphereVector3Single">
            <summary>设置 Physics.OverlapSphere(Vector3 position, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.OverlapSphereVector3SingleInt32">
            <summary>设置 Physics.OverlapSphere(Vector3 position, Single radius, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastAllRay">
            <summary>设置 Physics.RaycastAll(Ray ray) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastAllRaySingle">
            <summary>设置 Physics.RaycastAll(Ray ray, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastAllRaySingleInt32">
            <summary>设置 Physics.RaycastAll(Ray ray, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastAllVector3Vector3">
            <summary>设置 Physics.RaycastAll(Vector3 origin, Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastAllVector3Vector3Single">
            <summary>设置 Physics.RaycastAll(Vector3 origin, Vector3 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastAllVector3Vector3SingleInt32">
            <summary>设置 Physics.RaycastAll(Vector3 origin, Vector3 direction, Single distance, Int32 layermask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastRay">
            <summary>设置 Physics.Raycast(Ray ray) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastRayRaycastHitOut">
            <summary>设置 Physics.Raycast(Ray ray, RaycastHit&amp; hitInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastRayRaycastHitOutSingle">
            <summary>设置 Physics.Raycast(Ray ray, RaycastHit&amp; hitInfo, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastRayRaycastHitOutSingleInt32">
            <summary>设置 Physics.Raycast(Ray ray, RaycastHit&amp; hitInfo, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastRaySingle">
            <summary>设置 Physics.Raycast(Ray ray, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastRaySingleInt32">
            <summary>设置 Physics.Raycast(Ray ray, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastVector3Vector3">
            <summary>设置 Physics.Raycast(Vector3 origin, Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastVector3Vector3RaycastHitOut">
            <summary>设置 Physics.Raycast(Vector3 origin, Vector3 direction, RaycastHit&amp; hitInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastVector3Vector3RaycastHitOutSingle">
            <summary>设置 Physics.Raycast(Vector3 origin, Vector3 direction, RaycastHit&amp; hitInfo, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastVector3Vector3RaycastHitOutSingleInt32">
            <summary>设置 Physics.Raycast(Vector3 origin, Vector3 direction, RaycastHit&amp; hitInfo, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastVector3Vector3Single">
            <summary>设置 Physics.Raycast(Vector3 origin, Vector3 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.RaycastVector3Vector3SingleInt32">
            <summary>设置 Physics.Raycast(Vector3 origin, Vector3 direction, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastAllRaySingle">
            <summary>设置 Physics.SphereCastAll(Ray ray, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastAllRaySingleSingle">
            <summary>设置 Physics.SphereCastAll(Ray ray, Single radius, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastAllRaySingleSingleInt32">
            <summary>设置 Physics.SphereCastAll(Ray ray, Single radius, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastAllVector3SingleVector3">
            <summary>设置 Physics.SphereCastAll(Vector3 origin, Single radius, Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastAllVector3SingleVector3Single">
            <summary>设置 Physics.SphereCastAll(Vector3 origin, Single radius, Vector3 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastAllVector3SingleVector3SingleInt32">
            <summary>设置 Physics.SphereCastAll(Vector3 origin, Single radius, Vector3 direction, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastRaySingle">
            <summary>设置 Physics.SphereCast(Ray ray, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastRaySingleRaycastHitOut">
            <summary>设置 Physics.SphereCast(Ray ray, Single radius, RaycastHit&amp; hitInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastRaySingleRaycastHitOutSingle">
            <summary>设置 Physics.SphereCast(Ray ray, Single radius, RaycastHit&amp; hitInfo, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastRaySingleRaycastHitOutSingleInt32">
            <summary>设置 Physics.SphereCast(Ray ray, Single radius, RaycastHit&amp; hitInfo, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastRaySingleSingle">
            <summary>设置 Physics.SphereCast(Ray ray, Single radius, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastRaySingleSingleInt32">
            <summary>设置 Physics.SphereCast(Ray ray, Single radius, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastVector3SingleVector3RaycastHitOut">
            <summary>设置 Physics.SphereCast(Vector3 origin, Single radius, Vector3 direction, RaycastHit&amp; hitInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastVector3SingleVector3RaycastHitOutSingle">
            <summary>设置 Physics.SphereCast(Vector3 origin, Single radius, Vector3 direction, RaycastHit&amp; hitInfo, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.SphereCastVector3SingleVector3RaycastHitOutSingleInt32">
            <summary>设置 Physics.SphereCast(Vector3 origin, Single radius, Vector3 direction, RaycastHit&amp; hitInfo, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.bounceTresholdGet">
            <summary>设置 Physics.get_bounceTreshold() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.bounceTresholdSetSingle">
            <summary>设置 Physics.set_bounceTreshold(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.gravityGet">
            <summary>设置 Physics.get_gravity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics.gravitySetVector3">
            <summary>设置 Physics.set_gravity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPhysics2D">
            <summary>UnityEngine.Physics2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysics2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysics2D.#ctor(UnityEngine.Physics2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPhysics2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysics2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysics2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.Constructor">
            <summary>设置 Physics2D.Physics2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionAllRay">
            <summary>设置 Physics2D.GetRayIntersectionAll(Ray ray) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionAllRaySingle">
            <summary>设置 Physics2D.GetRayIntersectionAll(Ray ray, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionAllRaySingleInt32">
            <summary>设置 Physics2D.GetRayIntersectionAll(Ray ray, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionNonAllocRayRaycastHit2DArray">
            <summary>设置 Physics2D.GetRayIntersectionNonAlloc(Ray ray, RaycastHit2D[] results) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionNonAllocRayRaycastHit2DArraySingle">
            <summary>设置 Physics2D.GetRayIntersectionNonAlloc(Ray ray, RaycastHit2D[] results, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionNonAllocRayRaycastHit2DArraySingleInt32">
            <summary>设置 Physics2D.GetRayIntersectionNonAlloc(Ray ray, RaycastHit2D[] results, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionRay">
            <summary>设置 Physics2D.GetRayIntersection(Ray ray) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionRaySingle">
            <summary>设置 Physics2D.GetRayIntersection(Ray ray, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.GetRayIntersectionRaySingleInt32">
            <summary>设置 Physics2D.GetRayIntersection(Ray ray, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.IgnoreLayerCollisionInt32Int32">
            <summary>设置 Physics2D.IgnoreLayerCollision(Int32 layer1, Int32 layer2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.Internal_GetRayIntersectionRaySingleInt32RaycastHit2DOut">
            <summary>设置 Physics2D.Internal_GetRayIntersection(Ray ray, Single distance, Int32 layerMask, RaycastHit2D&amp; raycastHit) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.Internal_LinecastVector2Vector2Int32SingleSingleRaycastHit2DOut">
            <summary>设置 Physics2D.Internal_Linecast(Vector2 start, Vector2 end, Int32 layerMask, Single minDepth, Single maxDepth, RaycastHit2D&amp; raycastHit) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.Internal_RaycastVector2Vector2SingleInt32SingleSingleRaycastHit2DOut">
            <summary>设置 Physics2D.Internal_Raycast(Vector2 origin, Vector2 direction, Single distance, Int32 layerMask, Single minDepth, Single maxDepth, RaycastHit2D&amp; raycastHit) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastAllVector2Vector2">
            <summary>设置 Physics2D.LinecastAll(Vector2 start, Vector2 end) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastAllVector2Vector2Int32">
            <summary>设置 Physics2D.LinecastAll(Vector2 start, Vector2 end, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastAllVector2Vector2Int32Single">
            <summary>设置 Physics2D.LinecastAll(Vector2 start, Vector2 end, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastAllVector2Vector2Int32SingleSingle">
            <summary>设置 Physics2D.LinecastAll(Vector2 start, Vector2 end, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastNonAllocVector2Vector2RaycastHit2DArray">
            <summary>设置 Physics2D.LinecastNonAlloc(Vector2 start, Vector2 end, RaycastHit2D[] results) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastNonAllocVector2Vector2RaycastHit2DArrayInt32">
            <summary>设置 Physics2D.LinecastNonAlloc(Vector2 start, Vector2 end, RaycastHit2D[] results, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastNonAllocVector2Vector2RaycastHit2DArrayInt32Single">
            <summary>设置 Physics2D.LinecastNonAlloc(Vector2 start, Vector2 end, RaycastHit2D[] results, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastNonAllocVector2Vector2RaycastHit2DArrayInt32SingleSingle">
            <summary>设置 Physics2D.LinecastNonAlloc(Vector2 start, Vector2 end, RaycastHit2D[] results, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastVector2Vector2">
            <summary>设置 Physics2D.Linecast(Vector2 start, Vector2 end) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastVector2Vector2Int32">
            <summary>设置 Physics2D.Linecast(Vector2 start, Vector2 end, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastVector2Vector2Int32Single">
            <summary>设置 Physics2D.Linecast(Vector2 start, Vector2 end, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.LinecastVector2Vector2Int32SingleSingle">
            <summary>设置 Physics2D.Linecast(Vector2 start, Vector2 end, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaAllVector2Vector2">
            <summary>设置 Physics2D.OverlapAreaAll(Vector2 pointA, Vector2 pointB) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaAllVector2Vector2Int32">
            <summary>设置 Physics2D.OverlapAreaAll(Vector2 pointA, Vector2 pointB, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaAllVector2Vector2Int32Single">
            <summary>设置 Physics2D.OverlapAreaAll(Vector2 pointA, Vector2 pointB, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaAllVector2Vector2Int32SingleSingle">
            <summary>设置 Physics2D.OverlapAreaAll(Vector2 pointA, Vector2 pointB, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaNonAllocVector2Vector2Collider2DArray">
            <summary>设置 Physics2D.OverlapAreaNonAlloc(Vector2 pointA, Vector2 pointB, Collider2D[] results) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaNonAllocVector2Vector2Collider2DArrayInt32">
            <summary>设置 Physics2D.OverlapAreaNonAlloc(Vector2 pointA, Vector2 pointB, Collider2D[] results, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaNonAllocVector2Vector2Collider2DArrayInt32Single">
            <summary>设置 Physics2D.OverlapAreaNonAlloc(Vector2 pointA, Vector2 pointB, Collider2D[] results, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaNonAllocVector2Vector2Collider2DArrayInt32SingleSingle">
            <summary>设置 Physics2D.OverlapAreaNonAlloc(Vector2 pointA, Vector2 pointB, Collider2D[] results, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaVector2Vector2">
            <summary>设置 Physics2D.OverlapArea(Vector2 pointA, Vector2 pointB) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaVector2Vector2Int32">
            <summary>设置 Physics2D.OverlapArea(Vector2 pointA, Vector2 pointB, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaVector2Vector2Int32Single">
            <summary>设置 Physics2D.OverlapArea(Vector2 pointA, Vector2 pointB, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapAreaVector2Vector2Int32SingleSingle">
            <summary>设置 Physics2D.OverlapArea(Vector2 pointA, Vector2 pointB, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleAllVector2Single">
            <summary>设置 Physics2D.OverlapCircleAll(Vector2 point, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleAllVector2SingleInt32">
            <summary>设置 Physics2D.OverlapCircleAll(Vector2 point, Single radius, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleAllVector2SingleInt32Single">
            <summary>设置 Physics2D.OverlapCircleAll(Vector2 point, Single radius, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleAllVector2SingleInt32SingleSingle">
            <summary>设置 Physics2D.OverlapCircleAll(Vector2 point, Single radius, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleNonAllocVector2SingleCollider2DArray">
            <summary>设置 Physics2D.OverlapCircleNonAlloc(Vector2 point, Single radius, Collider2D[] results) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleNonAllocVector2SingleCollider2DArrayInt32">
            <summary>设置 Physics2D.OverlapCircleNonAlloc(Vector2 point, Single radius, Collider2D[] results, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleNonAllocVector2SingleCollider2DArrayInt32Single">
            <summary>设置 Physics2D.OverlapCircleNonAlloc(Vector2 point, Single radius, Collider2D[] results, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleNonAllocVector2SingleCollider2DArrayInt32SingleSingle">
            <summary>设置 Physics2D.OverlapCircleNonAlloc(Vector2 point, Single radius, Collider2D[] results, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleVector2Single">
            <summary>设置 Physics2D.OverlapCircle(Vector2 point, Single radius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleVector2SingleInt32">
            <summary>设置 Physics2D.OverlapCircle(Vector2 point, Single radius, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleVector2SingleInt32Single">
            <summary>设置 Physics2D.OverlapCircle(Vector2 point, Single radius, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapCircleVector2SingleInt32SingleSingle">
            <summary>设置 Physics2D.OverlapCircle(Vector2 point, Single radius, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointAllVector2">
            <summary>设置 Physics2D.OverlapPointAll(Vector2 point) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointAllVector2Int32">
            <summary>设置 Physics2D.OverlapPointAll(Vector2 point, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointAllVector2Int32Single">
            <summary>设置 Physics2D.OverlapPointAll(Vector2 point, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointAllVector2Int32SingleSingle">
            <summary>设置 Physics2D.OverlapPointAll(Vector2 point, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointNonAllocVector2Collider2DArray">
            <summary>设置 Physics2D.OverlapPointNonAlloc(Vector2 point, Collider2D[] results) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointNonAllocVector2Collider2DArrayInt32">
            <summary>设置 Physics2D.OverlapPointNonAlloc(Vector2 point, Collider2D[] results, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointNonAllocVector2Collider2DArrayInt32Single">
            <summary>设置 Physics2D.OverlapPointNonAlloc(Vector2 point, Collider2D[] results, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointNonAllocVector2Collider2DArrayInt32SingleSingle">
            <summary>设置 Physics2D.OverlapPointNonAlloc(Vector2 point, Collider2D[] results, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointVector2">
            <summary>设置 Physics2D.OverlapPoint(Vector2 point) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointVector2Int32">
            <summary>设置 Physics2D.OverlapPoint(Vector2 point, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointVector2Int32Single">
            <summary>设置 Physics2D.OverlapPoint(Vector2 point, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.OverlapPointVector2Int32SingleSingle">
            <summary>设置 Physics2D.OverlapPoint(Vector2 point, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastAllVector2Vector2">
            <summary>设置 Physics2D.RaycastAll(Vector2 origin, Vector2 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastAllVector2Vector2Single">
            <summary>设置 Physics2D.RaycastAll(Vector2 origin, Vector2 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastAllVector2Vector2SingleInt32">
            <summary>设置 Physics2D.RaycastAll(Vector2 origin, Vector2 direction, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastAllVector2Vector2SingleInt32Single">
            <summary>设置 Physics2D.RaycastAll(Vector2 origin, Vector2 direction, Single distance, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastAllVector2Vector2SingleInt32SingleSingle">
            <summary>设置 Physics2D.RaycastAll(Vector2 origin, Vector2 direction, Single distance, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastNonAllocVector2Vector2RaycastHit2DArray">
            <summary>设置 Physics2D.RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastNonAllocVector2Vector2RaycastHit2DArraySingle">
            <summary>设置 Physics2D.RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastNonAllocVector2Vector2RaycastHit2DArraySingleInt32">
            <summary>设置 Physics2D.RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastNonAllocVector2Vector2RaycastHit2DArraySingleInt32Single">
            <summary>设置 Physics2D.RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results, Single distance, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastNonAllocVector2Vector2RaycastHit2DArraySingleInt32SingleSingle">
            <summary>设置 Physics2D.RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results, Single distance, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastVector2Vector2">
            <summary>设置 Physics2D.Raycast(Vector2 origin, Vector2 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastVector2Vector2Single">
            <summary>设置 Physics2D.Raycast(Vector2 origin, Vector2 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastVector2Vector2SingleInt32">
            <summary>设置 Physics2D.Raycast(Vector2 origin, Vector2 direction, Single distance, Int32 layerMask) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastVector2Vector2SingleInt32Single">
            <summary>设置 Physics2D.Raycast(Vector2 origin, Vector2 direction, Single distance, Int32 layerMask, Single minDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.RaycastVector2Vector2SingleInt32SingleSingle">
            <summary>设置 Physics2D.Raycast(Vector2 origin, Vector2 direction, Single distance, Int32 layerMask, Single minDepth, Single maxDepth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.gravityGet">
            <summary>设置 Physics2D.get_gravity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysics2D.gravitySetVector2">
            <summary>设置 Physics2D.set_gravity(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPhysicsMaterial2D">
            <summary>UnityEngine.PhysicsMaterial2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysicsMaterial2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysicsMaterial2D.#ctor(UnityEngine.PhysicsMaterial2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPhysicsMaterial2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysicsMaterial2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPhysicsMaterial2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicsMaterial2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicsMaterial2D.Constructor">
            <summary>设置 PhysicsMaterial2D.PhysicsMaterial2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPhysicsMaterial2D.ConstructorString">
            <summary>设置 PhysicsMaterial2D.PhysicsMaterial2D(String name) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPing">
            <summary>UnityEngine.Ping 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPing.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPing.#ctor(UnityEngine.Ping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPing.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPing.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPing.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPing.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPlane">
            <summary>UnityEngine.Plane 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlane.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPlane.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlane.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlane.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlane.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPlayerPrefs">
            <summary>UnityEngine.PlayerPrefs 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefs.#ctor(UnityEngine.PlayerPrefs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPlayerPrefs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefs.Constructor">
            <summary>设置 PlayerPrefs.PlayerPrefs() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefs.GetFloatString">
            <summary>设置 PlayerPrefs.GetFloat(String key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefs.GetIntString">
            <summary>设置 PlayerPrefs.GetInt(String key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefs.GetStringString">
            <summary>设置 PlayerPrefs.GetString(String key) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefs.SetFloatStringSingle">
            <summary>设置 PlayerPrefs.SetFloat(String key, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefs.SetIntStringInt32">
            <summary>设置 PlayerPrefs.SetInt(String key, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefs.SetStringStringString">
            <summary>设置 PlayerPrefs.SetString(String key, String value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPlayerPrefsException">
            <summary>UnityEngine.PlayerPrefsException 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefsException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefsException.#ctor(UnityEngine.PlayerPrefsException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPlayerPrefsException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefsException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefsException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefsException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPlayerPrefsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPlayerPrefsException.ConstructorString">
            <summary>设置 PlayerPrefsException.PlayerPrefsException(String error) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPolygonCollider2D">
            <summary>UnityEngine.PolygonCollider2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPolygonCollider2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPolygonCollider2D.#ctor(UnityEngine.PolygonCollider2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPolygonCollider2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPolygonCollider2D.AllInstances.CreatePrimitiveInt32">
            <summary>设置 PolygonCollider2D.CreatePrimitive(Int32 sides) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPolygonCollider2D.AllInstances.CreatePrimitiveInt32Vector2">
            <summary>设置 PolygonCollider2D.CreatePrimitive(Int32 sides, Vector2 scale) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPolygonCollider2D.AllInstances.CreatePrimitiveInt32Vector2Vector2">
            <summary>设置 PolygonCollider2D.CreatePrimitive(Int32 sides, Vector2 scale, Vector2 offset) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPolygonCollider2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPolygonCollider2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPolygonCollider2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPolygonCollider2D.Constructor">
            <summary>设置 PolygonCollider2D.PolygonCollider2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPolygonCollider2D.CreatePrimitiveInt32">
            <summary>设置 PolygonCollider2D.CreatePrimitive(Int32 sides) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPolygonCollider2D.CreatePrimitiveInt32Vector2">
            <summary>设置 PolygonCollider2D.CreatePrimitive(Int32 sides, Vector2 scale) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPolygonCollider2D.CreatePrimitiveInt32Vector2Vector2">
            <summary>设置 PolygonCollider2D.CreatePrimitive(Int32 sides, Vector2 scale, Vector2 offset) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProceduralMaterial">
            <summary>UnityEngine.ProceduralMaterial 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralMaterial.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralMaterial.#ctor(UnityEngine.ProceduralMaterial)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProceduralMaterial.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralMaterial.AllInstances.SetProceduralColorStringColor">
            <summary>设置 ProceduralMaterial.SetProceduralColor(String inputName, Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralMaterial.AllInstances.SetProceduralVectorStringVector4">
            <summary>设置 ProceduralMaterial.SetProceduralVector(String inputName, Vector4 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralMaterial.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralMaterial.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralMaterial.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralMaterial.Constructor">
            <summary>设置 ProceduralMaterial.ProceduralMaterial() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralMaterial.SetProceduralColorStringColor">
            <summary>设置 ProceduralMaterial.SetProceduralColor(String inputName, Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralMaterial.SetProceduralVectorStringVector4">
            <summary>设置 ProceduralMaterial.SetProceduralVector(String inputName, Vector4 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProceduralPropertyDescription">
            <summary>UnityEngine.ProceduralPropertyDescription 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralPropertyDescription.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralPropertyDescription.#ctor(UnityEngine.ProceduralPropertyDescription)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProceduralPropertyDescription.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralPropertyDescription.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralPropertyDescription.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralPropertyDescription.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralPropertyDescription.Constructor">
            <summary>设置 ProceduralPropertyDescription.ProceduralPropertyDescription() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProceduralTexture">
            <summary>UnityEngine.ProceduralTexture 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralTexture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralTexture.#ctor(UnityEngine.ProceduralTexture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProceduralTexture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralTexture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProceduralTexture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralTexture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProceduralTexture.Constructor">
            <summary>设置 ProceduralTexture.ProceduralTexture() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProfiler">
            <summary>UnityEngine.Profiler 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProfiler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProfiler.#ctor(UnityEngine.Profiler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProfiler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProfiler.BeginSampleString">
            <summary>设置 Profiler.BeginSample(String name) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProfiler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProfiler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProfiler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProfiler.Constructor">
            <summary>设置 Profiler.Profiler() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProjector">
            <summary>UnityEngine.Projector 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProjector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProjector.#ctor(UnityEngine.Projector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimProjector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.AllInstances.isOrthoGraphicGet">
            <summary>设置 Projector.get_isOrthoGraphic() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.AllInstances.isOrthoGraphicSetBoolean">
            <summary>设置 Projector.set_isOrthoGraphic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.AllInstances.orthoGraphicSizeGet">
            <summary>设置 Projector.get_orthoGraphicSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.AllInstances.orthoGraphicSizeSetSingle">
            <summary>设置 Projector.set_orthoGraphicSize(Single value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProjector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimProjector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.Constructor">
            <summary>设置 Projector.Projector() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.isOrthoGraphicGet">
            <summary>设置 Projector.get_isOrthoGraphic() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.isOrthoGraphicSetBoolean">
            <summary>设置 Projector.set_isOrthoGraphic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.orthoGraphicSizeGet">
            <summary>设置 Projector.get_orthoGraphicSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimProjector.orthoGraphicSizeSetSingle">
            <summary>设置 Projector.set_orthoGraphicSize(Single value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPropertyAttribute">
            <summary>UnityEngine.PropertyAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPropertyAttribute.#ctor(UnityEngine.PropertyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimPropertyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPropertyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimPropertyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPropertyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimPropertyAttribute.Constructor">
            <summary>设置 PropertyAttribute.PropertyAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimQualitySettings">
            <summary>UnityEngine.QualitySettings 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimQualitySettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimQualitySettings.#ctor(UnityEngine.QualitySettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimQualitySettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimQualitySettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimQualitySettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQualitySettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQualitySettings.Constructor">
            <summary>设置 QualitySettings.QualitySettings() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQualitySettings.DecreaseLevel">
            <summary>设置 QualitySettings.DecreaseLevel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQualitySettings.IncreaseLevel">
            <summary>设置 QualitySettings.IncreaseLevel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQualitySettings.SetQualityLevelInt32">
            <summary>设置 QualitySettings.SetQualityLevel(Int32 index) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimQuaternion">
            <summary>UnityEngine.Quaternion 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimQuaternion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimQuaternion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.AngleAxisSingleVector3">
            <summary>设置 Quaternion.AngleAxis(Single angle, Vector3 axis) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.AngleQuaternionQuaternion">
            <summary>设置 Quaternion.Angle(Quaternion a, Quaternion b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.AxisAngleVector3Single">
            <summary>设置 Quaternion.AxisAngle(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimQuaternion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimQuaternion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.DotQuaternionQuaternion">
            <summary>设置 Quaternion.Dot(Quaternion a, Quaternion b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.EqualityOpQuaternionQuaternion">
            <summary>设置 Quaternion.op_Equality(Quaternion lhs, Quaternion rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.EulerAnglesSingleSingleSingle">
            <summary>设置 Quaternion.EulerAngles(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.EulerAnglesVector3">
            <summary>设置 Quaternion.EulerAngles(Vector3 euler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.EulerRotationSingleSingleSingle">
            <summary>设置 Quaternion.EulerRotation(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.EulerRotationVector3">
            <summary>设置 Quaternion.EulerRotation(Vector3 euler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.EulerSingleSingleSingle">
            <summary>设置 Quaternion.Euler(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.EulerVector3">
            <summary>设置 Quaternion.Euler(Vector3 euler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.FromToRotationVector3Vector3">
            <summary>设置 Quaternion.FromToRotation(Vector3 fromDirection, Vector3 toDirection) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.InequalityOpQuaternionQuaternion">
            <summary>设置 Quaternion.op_Inequality(Quaternion lhs, Quaternion rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.Internal_FromEulerRadVector3">
            <summary>设置 Quaternion.Internal_FromEulerRad(Vector3 euler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.Internal_ToAxisAngleRadQuaternionVector3OutSingleOut">
            <summary>设置 Quaternion.Internal_ToAxisAngleRad(Quaternion q, Vector3&amp; axis, Single&amp; angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.Internal_ToEulerRadQuaternion">
            <summary>设置 Quaternion.Internal_ToEulerRad(Quaternion rotation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.InverseQuaternion">
            <summary>设置 Quaternion.Inverse(Quaternion rotation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.LerpQuaternionQuaternionSingle">
            <summary>设置 Quaternion.Lerp(Quaternion from, Quaternion to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.LookRotationVector3">
            <summary>设置 Quaternion.LookRotation(Vector3 forward) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.LookRotationVector3Vector3">
            <summary>设置 Quaternion.LookRotation(Vector3 forward, Vector3 upwards) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.MultiplyOpQuaternionQuaternion">
            <summary>设置 Quaternion.op_Multiply(Quaternion lhs, Quaternion rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.MultiplyOpQuaternionVector3">
            <summary>设置 Quaternion.op_Multiply(Quaternion rotation, Vector3 point) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.RotateTowardsQuaternionQuaternionSingle">
            <summary>设置 Quaternion.RotateTowards(Quaternion from, Quaternion to, Single maxDegreesDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.SlerpQuaternionQuaternionSingle">
            <summary>设置 Quaternion.Slerp(Quaternion from, Quaternion to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.ToEulerAnglesQuaternion">
            <summary>设置 Quaternion.ToEulerAngles(Quaternion rotation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.UnclampedSlerpQuaternionQuaternionSingle">
            <summary>设置 Quaternion.UnclampedSlerp(Quaternion from, Quaternion to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimQuaternion.identityGet">
            <summary>设置 Quaternion.get_identity() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRPC">
            <summary>UnityEngine.RPC 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRPC.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRPC.#ctor(UnityEngine.RPC)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRPC.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRPC.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRPC.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRPC.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRPC.Constructor">
            <summary>设置 RPC.RPC() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRandom">
            <summary>UnityEngine.Random 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRandom.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRandom.#ctor(UnityEngine.Random)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRandom.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRandom.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRandom.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRandom.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRandom.Constructor">
            <summary>设置 Random.Random() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRandom.RandomRangeInt32Int32">
            <summary>设置 Random.RandomRange(Int32 min, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRandom.RandomRangeSingleSingle">
            <summary>设置 Random.RandomRange(Single min, Single max) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRandom.RangeInt32Int32">
            <summary>设置 Random.Range(Int32 min, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRandom.insideUnitCircleGet">
            <summary>设置 Random.get_insideUnitCircle() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRangeAttribute">
            <summary>UnityEngine.RangeAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRangeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRangeAttribute.#ctor(UnityEngine.RangeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRangeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRangeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRangeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRangeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRangeAttribute.ConstructorSingleSingle">
            <summary>设置 RangeAttribute.RangeAttribute(Single min, Single max) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRay">
            <summary>UnityEngine.Ray 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRay.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRay.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRay.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRay.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRay.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRay2D">
            <summary>UnityEngine.Ray2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRay2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRay2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRay2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRay2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRay2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRaycastHit">
            <summary>UnityEngine.RaycastHit 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRaycastHit.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRaycastHit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRaycastHit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRaycastHit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRaycastHit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRaycastHit.CalculateRaycastTexCoordVector2OutColliderVector2Vector3Int32Int32">
            <summary>设置 RaycastHit.CalculateRaycastTexCoord(Vector2&amp; output, Collider col, Vector2 uv, Vector3 point, Int32 face, Int32 index) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRaycastHit2D">
            <summary>UnityEngine.RaycastHit2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRaycastHit2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRaycastHit2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRaycastHit2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRaycastHit2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRaycastHit2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRaycastHit2D.ImplicitOpRaycastHit2DBoolean">
            <summary>设置 RaycastHit2D.op_Implicit(RaycastHit2D hit) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRect">
            <summary>UnityEngine.Rect 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRect.EqualityOpRectRect">
            <summary>设置 Rect.op_Equality(Rect lhs, Rect rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRect.InequalityOpRectRect">
            <summary>设置 Rect.op_Inequality(Rect lhs, Rect rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRect.MinMaxRectSingleSingleSingleSingle">
            <summary>设置 Rect.MinMaxRect(Single left, Single top, Single right, Single bottom) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRect.OrderMinMaxRect">
            <summary>设置 Rect.OrderMinMax(Rect rect) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRectOffset">
            <summary>UnityEngine.RectOffset 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRectOffset.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRectOffset.#ctor(UnityEngine.RectOffset)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.AddRect">
            <summary>设置 RectOffset.Add(Rect rect) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRectOffset.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.AllInstances.AddRect">
            <summary>设置 RectOffset.Add(Rect rect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.AllInstances.RemoveRect">
            <summary>设置 RectOffset.Remove(Rect rect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.AllInstances.ToString01">
            <summary>设置 RectOffset.ToString() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRectOffset.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRectOffset.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.Constructor">
            <summary>设置 RectOffset.RectOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.ConstructorGUIStyleIntPtr">
            <summary>设置 RectOffset.RectOffset(GUIStyle sourceStyle, IntPtr source) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.ConstructorInt32Int32Int32Int32">
            <summary>设置 RectOffset.RectOffset(Int32 left, Int32 right, Int32 top, Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.RemoveRect">
            <summary>设置 RectOffset.Remove(Rect rect) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRectOffset.ToString">
            <summary>设置 RectOffset.ToString() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRemoteNotification">
            <summary>UnityEngine.RemoteNotification 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRemoteNotification.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRemoteNotification.#ctor(UnityEngine.RemoteNotification)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRemoteNotification.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRemoteNotification.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRemoteNotification.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRemoteNotification.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRemoteNotification.Constructor">
            <summary>设置 RemoteNotification.RemoteNotification() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRenderBuffer">
            <summary>UnityEngine.RenderBuffer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderBuffer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRenderBuffer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderBuffer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderBuffer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderBuffer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRenderSettings">
            <summary>UnityEngine.RenderSettings 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderSettings.#ctor(UnityEngine.RenderSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRenderSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderSettings.Constructor">
            <summary>设置 RenderSettings.RenderSettings() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderSettings.ambientLightGet">
            <summary>设置 RenderSettings.get_ambientLight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderSettings.ambientLightSetColor">
            <summary>设置 RenderSettings.set_ambientLight(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderSettings.fogColorGet">
            <summary>设置 RenderSettings.get_fogColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderSettings.fogColorSetColor">
            <summary>设置 RenderSettings.set_fogColor(Color value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRenderTexture">
            <summary>UnityEngine.RenderTexture 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderTexture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderTexture.#ctor(UnityEngine.RenderTexture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRenderTexture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.Create">
            <summary>设置 RenderTexture.Create() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.DiscardContents">
            <summary>设置 RenderTexture.DiscardContents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.GetTexelOffset">
            <summary>设置 RenderTexture.GetTexelOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.IsCreated">
            <summary>设置 RenderTexture.IsCreated() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.MarkRestoreExpected">
            <summary>设置 RenderTexture.MarkRestoreExpected() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.Release">
            <summary>设置 RenderTexture.Release() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.SetBorderColorColor">
            <summary>设置 RenderTexture.SetBorderColor(Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.colorBufferGet">
            <summary>设置 RenderTexture.get_colorBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.depthBufferGet">
            <summary>设置 RenderTexture.get_depthBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.heightGet">
            <summary>设置 RenderTexture.get_height() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.heightSetInt32">
            <summary>设置 RenderTexture.set_height(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.widthGet">
            <summary>设置 RenderTexture.get_width() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.AllInstances.widthSetInt32">
            <summary>设置 RenderTexture.set_width(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderTexture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderTexture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.ConstructorInt32Int32Int32">
            <summary>设置 RenderTexture.RenderTexture(Int32 width, Int32 height, Int32 depth) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.ConstructorInt32Int32Int32RenderTextureFormat">
            <summary>设置 RenderTexture.RenderTexture(Int32 width, Int32 height, Int32 depth, RenderTextureFormat format) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.ConstructorInt32Int32Int32RenderTextureFormatRenderTextureReadWrite">
            <summary>设置 RenderTexture.RenderTexture(Int32 width, Int32 height, Int32 depth, RenderTextureFormat format, RenderTextureReadWrite readWrite) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.Create">
            <summary>设置 RenderTexture.Create() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.DiscardContents">
            <summary>设置 RenderTexture.DiscardContents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.GetTemporaryInt32Int32">
            <summary>设置 RenderTexture.GetTemporary(Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.GetTemporaryInt32Int32Int32">
            <summary>设置 RenderTexture.GetTemporary(Int32 width, Int32 height, Int32 depthBuffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.GetTemporaryInt32Int32Int32RenderTextureFormat">
            <summary>设置 RenderTexture.GetTemporary(Int32 width, Int32 height, Int32 depthBuffer, RenderTextureFormat format) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.GetTemporaryInt32Int32Int32RenderTextureFormatRenderTextureReadWrite">
            <summary>设置 RenderTexture.GetTemporary(Int32 width, Int32 height, Int32 depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.GetTexelOffset">
            <summary>设置 RenderTexture.GetTexelOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.IsCreated">
            <summary>设置 RenderTexture.IsCreated() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.MarkRestoreExpected">
            <summary>设置 RenderTexture.MarkRestoreExpected() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.Release">
            <summary>设置 RenderTexture.Release() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.SetBorderColorColor">
            <summary>设置 RenderTexture.SetBorderColor(Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.colorBufferGet">
            <summary>设置 RenderTexture.get_colorBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.depthBufferGet">
            <summary>设置 RenderTexture.get_depthBuffer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.heightGet">
            <summary>设置 RenderTexture.get_height() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.heightSetInt32">
            <summary>设置 RenderTexture.set_height(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.widthGet">
            <summary>设置 RenderTexture.get_width() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderTexture.widthSetInt32">
            <summary>设置 RenderTexture.set_width(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRenderer">
            <summary>UnityEngine.Renderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderer.#ctor(UnityEngine.Renderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.AllInstances.lightmapTilingOffsetGet">
            <summary>设置 Renderer.get_lightmapTilingOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.AllInstances.lightmapTilingOffsetSetVector4">
            <summary>设置 Renderer.set_lightmapTilingOffset(Vector4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.AllInstances.localToWorldMatrixGet">
            <summary>设置 Renderer.get_localToWorldMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.AllInstances.worldToLocalMatrixGet">
            <summary>设置 Renderer.get_worldToLocalMatrix() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.Constructor">
            <summary>设置 Renderer.Renderer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.lightmapTilingOffsetGet">
            <summary>设置 Renderer.get_lightmapTilingOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.lightmapTilingOffsetSetVector4">
            <summary>设置 Renderer.set_lightmapTilingOffset(Vector4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.localToWorldMatrixGet">
            <summary>设置 Renderer.get_localToWorldMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRenderer.worldToLocalMatrixGet">
            <summary>设置 Renderer.get_worldToLocalMatrix() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRequireComponent">
            <summary>UnityEngine.RequireComponent 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRequireComponent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRequireComponent.#ctor(UnityEngine.RequireComponent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRequireComponent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRequireComponent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRequireComponent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRequireComponent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRequireComponent.ConstructorType">
            <summary>设置 RequireComponent.RequireComponent(Type requiredComponent) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRequireComponent.ConstructorTypeType">
            <summary>设置 RequireComponent.RequireComponent(Type requiredComponent, Type requiredComponent2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRequireComponent.ConstructorTypeTypeType">
            <summary>设置 RequireComponent.RequireComponent(Type requiredComponent, Type requiredComponent2, Type requiredComponent3) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimResolution">
            <summary>UnityEngine.Resolution 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResolution.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimResolution.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResolution.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResolution.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimResolution.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimResources">
            <summary>UnityEngine.Resources 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.#ctor(UnityEngine.Resources)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimResources.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimResources.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimResources.Constructor">
            <summary>设置 Resources.Resources() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.ConvertObjectsOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.Object[],``0[]})">
            <summary>设置 Resources.ConvertObjects(Object[] rawObjects) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.FindObjectsOfTypeAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>设置 Resources.FindObjectsOfTypeAll() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.GetBuiltinResourceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 Resources.GetBuiltinResource(String path) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.LoadAllOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0[]})">
            <summary>设置 Resources.LoadAll(String path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimResources.LoadAllString">
            <summary>设置 Resources.LoadAll(String path) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.LoadAssetAtPathOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 Resources.LoadAssetAtPath(String assetPath) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimResources.LoadOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 Resources.Load(String path) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimResources.LoadString">
            <summary>设置 Resources.Load(String path) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRigidbody">
            <summary>UnityEngine.Rigidbody 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRigidbody.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRigidbody.#ctor(UnityEngine.Rigidbody)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddExplosionForceSingleVector3Single">
            <summary>设置 Rigidbody.AddExplosionForce(Single explosionForce, Vector3 explosionPosition, Single explosionRadius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddExplosionForceSingleVector3SingleSingle">
            <summary>设置 Rigidbody.AddExplosionForce(Single explosionForce, Vector3 explosionPosition, Single explosionRadius, Single upwardsModifier) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddExplosionForceSingleVector3SingleSingleForceMode">
            <summary>设置 Rigidbody.AddExplosionForce(Single explosionForce, Vector3 explosionPosition, Single explosionRadius, Single upwardsModifier, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddForceAtPositionVector3Vector3">
            <summary>设置 Rigidbody.AddForceAtPosition(Vector3 force, Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddForceAtPositionVector3Vector3ForceMode">
            <summary>设置 Rigidbody.AddForceAtPosition(Vector3 force, Vector3 position, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddForceSingleSingleSingle">
            <summary>设置 Rigidbody.AddForce(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddForceSingleSingleSingleForceMode">
            <summary>设置 Rigidbody.AddForce(Single x, Single y, Single z, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddForceVector3">
            <summary>设置 Rigidbody.AddForce(Vector3 force) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddForceVector3ForceMode">
            <summary>设置 Rigidbody.AddForce(Vector3 force, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddRelativeForceSingleSingleSingle">
            <summary>设置 Rigidbody.AddRelativeForce(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddRelativeForceSingleSingleSingleForceMode">
            <summary>设置 Rigidbody.AddRelativeForce(Single x, Single y, Single z, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddRelativeForceVector3">
            <summary>设置 Rigidbody.AddRelativeForce(Vector3 force) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddRelativeForceVector3ForceMode">
            <summary>设置 Rigidbody.AddRelativeForce(Vector3 force, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddRelativeTorqueSingleSingleSingle">
            <summary>设置 Rigidbody.AddRelativeTorque(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddRelativeTorqueSingleSingleSingleForceMode">
            <summary>设置 Rigidbody.AddRelativeTorque(Single x, Single y, Single z, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddRelativeTorqueVector3">
            <summary>设置 Rigidbody.AddRelativeTorque(Vector3 torque) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddRelativeTorqueVector3ForceMode">
            <summary>设置 Rigidbody.AddRelativeTorque(Vector3 torque, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddTorqueSingleSingleSingle">
            <summary>设置 Rigidbody.AddTorque(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddTorqueSingleSingleSingleForceMode">
            <summary>设置 Rigidbody.AddTorque(Single x, Single y, Single z, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddTorqueVector3">
            <summary>设置 Rigidbody.AddTorque(Vector3 torque) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AddTorqueVector3ForceMode">
            <summary>设置 Rigidbody.AddTorque(Vector3 torque, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRigidbody.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddExplosionForceSingleVector3Single">
            <summary>设置 Rigidbody.AddExplosionForce(Single explosionForce, Vector3 explosionPosition, Single explosionRadius) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddExplosionForceSingleVector3SingleSingle">
            <summary>设置 Rigidbody.AddExplosionForce(Single explosionForce, Vector3 explosionPosition, Single explosionRadius, Single upwardsModifier) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddExplosionForceSingleVector3SingleSingleForceMode">
            <summary>设置 Rigidbody.AddExplosionForce(Single explosionForce, Vector3 explosionPosition, Single explosionRadius, Single upwardsModifier, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddForceAtPositionVector3Vector3">
            <summary>设置 Rigidbody.AddForceAtPosition(Vector3 force, Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddForceAtPositionVector3Vector3ForceMode">
            <summary>设置 Rigidbody.AddForceAtPosition(Vector3 force, Vector3 position, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddForceSingleSingleSingle">
            <summary>设置 Rigidbody.AddForce(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddForceSingleSingleSingleForceMode">
            <summary>设置 Rigidbody.AddForce(Single x, Single y, Single z, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddForceVector3">
            <summary>设置 Rigidbody.AddForce(Vector3 force) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddForceVector3ForceMode">
            <summary>设置 Rigidbody.AddForce(Vector3 force, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddRelativeForceSingleSingleSingle">
            <summary>设置 Rigidbody.AddRelativeForce(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddRelativeForceSingleSingleSingleForceMode">
            <summary>设置 Rigidbody.AddRelativeForce(Single x, Single y, Single z, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddRelativeForceVector3">
            <summary>设置 Rigidbody.AddRelativeForce(Vector3 force) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddRelativeForceVector3ForceMode">
            <summary>设置 Rigidbody.AddRelativeForce(Vector3 force, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddRelativeTorqueSingleSingleSingle">
            <summary>设置 Rigidbody.AddRelativeTorque(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddRelativeTorqueSingleSingleSingleForceMode">
            <summary>设置 Rigidbody.AddRelativeTorque(Single x, Single y, Single z, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddRelativeTorqueVector3">
            <summary>设置 Rigidbody.AddRelativeTorque(Vector3 torque) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddRelativeTorqueVector3ForceMode">
            <summary>设置 Rigidbody.AddRelativeTorque(Vector3 torque, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddTorqueSingleSingleSingle">
            <summary>设置 Rigidbody.AddTorque(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddTorqueSingleSingleSingleForceMode">
            <summary>设置 Rigidbody.AddTorque(Single x, Single y, Single z, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddTorqueVector3">
            <summary>设置 Rigidbody.AddTorque(Vector3 torque) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.AddTorqueVector3ForceMode">
            <summary>设置 Rigidbody.AddTorque(Vector3 torque, ForceMode mode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.ClosestPointOnBoundsVector3">
            <summary>设置 Rigidbody.ClosestPointOnBounds(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.GetPointVelocityVector3">
            <summary>设置 Rigidbody.GetPointVelocity(Vector3 worldPoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.GetRelativePointVelocityVector3">
            <summary>设置 Rigidbody.GetRelativePointVelocity(Vector3 relativePoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.IsSleeping">
            <summary>设置 Rigidbody.IsSleeping() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.MovePositionVector3">
            <summary>设置 Rigidbody.MovePosition(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.MoveRotationQuaternion">
            <summary>设置 Rigidbody.MoveRotation(Quaternion rot) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.SetDensitySingle">
            <summary>设置 Rigidbody.SetDensity(Single density) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.SetMaxAngularVelocitySingle">
            <summary>设置 Rigidbody.SetMaxAngularVelocity(Single a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.Sleep">
            <summary>设置 Rigidbody.Sleep() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.SweepTestAllVector3">
            <summary>设置 Rigidbody.SweepTestAll(Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.SweepTestAllVector3Single">
            <summary>设置 Rigidbody.SweepTestAll(Vector3 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.SweepTestVector3RaycastHitOut">
            <summary>设置 Rigidbody.SweepTest(Vector3 direction, RaycastHit&amp; hitInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.SweepTestVector3RaycastHitOutSingle">
            <summary>设置 Rigidbody.SweepTest(Vector3 direction, RaycastHit&amp; hitInfo, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.WakeUp">
            <summary>设置 Rigidbody.WakeUp() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.angularVelocityGet">
            <summary>设置 Rigidbody.get_angularVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.angularVelocitySetVector3">
            <summary>设置 Rigidbody.set_angularVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.centerOfMassGet">
            <summary>设置 Rigidbody.get_centerOfMass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.centerOfMassSetVector3">
            <summary>设置 Rigidbody.set_centerOfMass(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.inertiaTensorGet">
            <summary>设置 Rigidbody.get_inertiaTensor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.inertiaTensorRotationGet">
            <summary>设置 Rigidbody.get_inertiaTensorRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.inertiaTensorRotationSetQuaternion">
            <summary>设置 Rigidbody.set_inertiaTensorRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.inertiaTensorSetVector3">
            <summary>设置 Rigidbody.set_inertiaTensor(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.positionGet">
            <summary>设置 Rigidbody.get_position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.positionSetVector3">
            <summary>设置 Rigidbody.set_position(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.rotationGet">
            <summary>设置 Rigidbody.get_rotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.rotationSetQuaternion">
            <summary>设置 Rigidbody.set_rotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.velocityGet">
            <summary>设置 Rigidbody.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.velocitySetVector3">
            <summary>设置 Rigidbody.set_velocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.AllInstances.worldCenterOfMassGet">
            <summary>设置 Rigidbody.get_worldCenterOfMass() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRigidbody.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRigidbody.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.ClosestPointOnBoundsVector3">
            <summary>设置 Rigidbody.ClosestPointOnBounds(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.Constructor">
            <summary>设置 Rigidbody.Rigidbody() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.GetPointVelocityVector3">
            <summary>设置 Rigidbody.GetPointVelocity(Vector3 worldPoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.GetRelativePointVelocityVector3">
            <summary>设置 Rigidbody.GetRelativePointVelocity(Vector3 relativePoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.IsSleeping">
            <summary>设置 Rigidbody.IsSleeping() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.MovePositionVector3">
            <summary>设置 Rigidbody.MovePosition(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.MoveRotationQuaternion">
            <summary>设置 Rigidbody.MoveRotation(Quaternion rot) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.SetDensitySingle">
            <summary>设置 Rigidbody.SetDensity(Single density) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.SetMaxAngularVelocitySingle">
            <summary>设置 Rigidbody.SetMaxAngularVelocity(Single a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.Sleep">
            <summary>设置 Rigidbody.Sleep() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.SweepTestAllVector3">
            <summary>设置 Rigidbody.SweepTestAll(Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.SweepTestAllVector3Single">
            <summary>设置 Rigidbody.SweepTestAll(Vector3 direction, Single distance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.SweepTestVector3RaycastHitOut">
            <summary>设置 Rigidbody.SweepTest(Vector3 direction, RaycastHit&amp; hitInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.WakeUp">
            <summary>设置 Rigidbody.WakeUp() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.angularVelocityGet">
            <summary>设置 Rigidbody.get_angularVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.angularVelocitySetVector3">
            <summary>设置 Rigidbody.set_angularVelocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.centerOfMassGet">
            <summary>设置 Rigidbody.get_centerOfMass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.centerOfMassSetVector3">
            <summary>设置 Rigidbody.set_centerOfMass(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.inertiaTensorGet">
            <summary>设置 Rigidbody.get_inertiaTensor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.inertiaTensorRotationGet">
            <summary>设置 Rigidbody.get_inertiaTensorRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.inertiaTensorRotationSetQuaternion">
            <summary>设置 Rigidbody.set_inertiaTensorRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.inertiaTensorSetVector3">
            <summary>设置 Rigidbody.set_inertiaTensor(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.positionGet">
            <summary>设置 Rigidbody.get_position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.positionSetVector3">
            <summary>设置 Rigidbody.set_position(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.rotationGet">
            <summary>设置 Rigidbody.get_rotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.rotationSetQuaternion">
            <summary>设置 Rigidbody.set_rotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.velocityGet">
            <summary>设置 Rigidbody.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.velocitySetVector3">
            <summary>设置 Rigidbody.set_velocity(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody.worldCenterOfMassGet">
            <summary>设置 Rigidbody.get_worldCenterOfMass() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRigidbody2D">
            <summary>UnityEngine.Rigidbody2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRigidbody2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRigidbody2D.#ctor(UnityEngine.Rigidbody2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.AddForceAtPositionVector2Vector2">
            <summary>设置 Rigidbody2D.AddForceAtPosition(Vector2 force, Vector2 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.AddForceVector2">
            <summary>设置 Rigidbody2D.AddForce(Vector2 force) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRigidbody2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.AllInstances.AddForceAtPositionVector2Vector2">
            <summary>设置 Rigidbody2D.AddForceAtPosition(Vector2 force, Vector2 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.AllInstances.AddForceVector2">
            <summary>设置 Rigidbody2D.AddForce(Vector2 force) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.AllInstances.velocityGet">
            <summary>设置 Rigidbody2D.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.AllInstances.velocitySetVector2">
            <summary>设置 Rigidbody2D.set_velocity(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRigidbody2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRigidbody2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.Constructor">
            <summary>设置 Rigidbody2D.Rigidbody2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.velocityGet">
            <summary>设置 Rigidbody2D.get_velocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRigidbody2D.velocitySetVector2">
            <summary>设置 Rigidbody2D.set_velocity(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRuntimeAnimatorController">
            <summary>UnityEngine.RuntimeAnimatorController 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRuntimeAnimatorController.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRuntimeAnimatorController.#ctor(UnityEngine.RuntimeAnimatorController)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimRuntimeAnimatorController.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRuntimeAnimatorController.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimRuntimeAnimatorController.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRuntimeAnimatorController.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimRuntimeAnimatorController.Constructor">
            <summary>设置 RuntimeAnimatorController.RuntimeAnimatorController() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimScreen">
            <summary>UnityEngine.Screen 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScreen.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScreen.#ctor(UnityEngine.Screen)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimScreen.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScreen.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScreen.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScreen.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScreen.Constructor">
            <summary>设置 Screen.Screen() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScreen.GetResolutionGet">
            <summary>设置 Screen.get_GetResolution() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScreen.SetResolutionInt32Int32Boolean">
            <summary>设置 Screen.SetResolution(Int32 width, Int32 height, Boolean fullscreen) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimScriptableObject">
            <summary>UnityEngine.ScriptableObject 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScriptableObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScriptableObject.#ctor(UnityEngine.ScriptableObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimScriptableObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScriptableObject.AllInstances.SetDirty">
            <summary>设置 ScriptableObject.SetDirty() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScriptableObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScriptableObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScriptableObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScriptableObject.Constructor">
            <summary>设置 ScriptableObject.ScriptableObject() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimScriptableObject.CreateInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 ScriptableObject.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScriptableObject.CreateInstanceType">
            <summary>设置 ScriptableObject.CreateInstance(Type type) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimScriptableObject.SetDirty">
            <summary>设置 ScriptableObject.SetDirty() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSecurity">
            <summary>UnityEngine.Security 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSecurity.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSecurity.#ctor(UnityEngine.Security)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSecurity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSecurity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSecurity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.ClearVerifiedAssemblies">
            <summary>设置 Security.ClearVerifiedAssemblies() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.Constructor">
            <summary>设置 Security.Security() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.GetChainOfTrustValueString">
            <summary>设置 Security.GetChainOfTrustValue(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.GetUnityCrossDomainHelperMethodString">
            <summary>设置 Security.GetUnityCrossDomainHelperMethod(String methodname) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.LoadAndVerifyAssemblyByteArray">
            <summary>设置 Security.LoadAndVerifyAssembly(Byte[] assemblyData) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.PrefetchSocketPolicyStringInt32">
            <summary>设置 Security.PrefetchSocketPolicy(String ip, Int32 atPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.PrefetchSocketPolicyStringInt32Int32">
            <summary>设置 Security.PrefetchSocketPolicy(String ip, Int32 atPort, Int32 timeout) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.StaticConstructor">
            <summary>设置 Security.Security() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.TokenToHexByteArray">
            <summary>设置 Security.TokenToHex(Byte[] token) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSecurity.VerifySignatureStringByteArray">
            <summary>设置 Security.VerifySignature(String file, Byte[] publicKey) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSerializeField">
            <summary>UnityEngine.SerializeField 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSerializeField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSerializeField.#ctor(UnityEngine.SerializeField)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSerializeField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSerializeField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSerializeField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSerializeField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSerializeField.Constructor">
            <summary>设置 SerializeField.SerializeField() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimShader">
            <summary>UnityEngine.Shader 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimShader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimShader.#ctor(UnityEngine.Shader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimShader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimShader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimShader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.Constructor">
            <summary>设置 Shader.Shader() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalColorInt32Color">
            <summary>设置 Shader.SetGlobalColor(Int32 nameID, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalColorStringColor">
            <summary>设置 Shader.SetGlobalColor(String propertyName, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalFloatStringSingle">
            <summary>设置 Shader.SetGlobalFloat(String propertyName, Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalIntInt32Int32">
            <summary>设置 Shader.SetGlobalInt(Int32 nameID, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalIntStringInt32">
            <summary>设置 Shader.SetGlobalInt(String propertyName, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalMatrixInt32Matrix4x4">
            <summary>设置 Shader.SetGlobalMatrix(Int32 nameID, Matrix4x4 mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalMatrixStringMatrix4x4">
            <summary>设置 Shader.SetGlobalMatrix(String propertyName, Matrix4x4 mat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalTextureStringTexture">
            <summary>设置 Shader.SetGlobalTexture(String propertyName, Texture tex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalVectorInt32Vector4">
            <summary>设置 Shader.SetGlobalVector(Int32 nameID, Vector4 vec) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimShader.SetGlobalVectorStringVector4">
            <summary>设置 Shader.SetGlobalVector(String propertyName, Vector4 vec) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSkeletonBone">
            <summary>UnityEngine.SkeletonBone 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkeletonBone.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSkeletonBone.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkeletonBone.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkeletonBone.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkeletonBone.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSkinnedCloth">
            <summary>UnityEngine.SkinnedCloth 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkinnedCloth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkinnedCloth.#ctor(UnityEngine.SkinnedCloth)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSkinnedCloth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedCloth.AllInstances.SetEnabledFadingBoolean">
            <summary>设置 SkinnedCloth.SetEnabledFading(Boolean enabled) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkinnedCloth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkinnedCloth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedCloth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedCloth.Constructor">
            <summary>设置 SkinnedCloth.SkinnedCloth() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedCloth.SetEnabledFadingBoolean">
            <summary>设置 SkinnedCloth.SetEnabledFading(Boolean enabled) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSkinnedMeshRenderer">
            <summary>UnityEngine.SkinnedMeshRenderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkinnedMeshRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkinnedMeshRenderer.#ctor(UnityEngine.SkinnedMeshRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSkinnedMeshRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.AllInstances.localBoundsGet">
            <summary>设置 SkinnedMeshRenderer.get_localBounds() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.AllInstances.localBoundsSetBounds">
            <summary>设置 SkinnedMeshRenderer.set_localBounds(Bounds value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.AllInstances.skinNormalsGet">
            <summary>设置 SkinnedMeshRenderer.get_skinNormals() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.AllInstances.skinNormalsSetBoolean">
            <summary>设置 SkinnedMeshRenderer.set_skinNormals(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkinnedMeshRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkinnedMeshRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.Constructor">
            <summary>设置 SkinnedMeshRenderer.SkinnedMeshRenderer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.localBoundsGet">
            <summary>设置 SkinnedMeshRenderer.get_localBounds() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.localBoundsSetBounds">
            <summary>设置 SkinnedMeshRenderer.set_localBounds(Bounds value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.skinNormalsGet">
            <summary>设置 SkinnedMeshRenderer.get_skinNormals() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkinnedMeshRenderer.skinNormalsSetBoolean">
            <summary>设置 SkinnedMeshRenderer.set_skinNormals(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSkybox">
            <summary>UnityEngine.Skybox 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkybox.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkybox.#ctor(UnityEngine.Skybox)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSkybox.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkybox.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSkybox.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkybox.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSkybox.Constructor">
            <summary>设置 Skybox.Skybox() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSleepTimeout">
            <summary>UnityEngine.SleepTimeout 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSleepTimeout.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSleepTimeout.#ctor(UnityEngine.SleepTimeout)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSleepTimeout.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSleepTimeout.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSleepTimeout.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSleepTimeout.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSleepTimeout.Constructor">
            <summary>设置 SleepTimeout.SleepTimeout() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSliderJoint2D">
            <summary>UnityEngine.SliderJoint2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSliderJoint2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSliderJoint2D.#ctor(UnityEngine.SliderJoint2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSliderJoint2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.AllInstances.anchorGet">
            <summary>设置 SliderJoint2D.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.AllInstances.anchorSetVector2">
            <summary>设置 SliderJoint2D.set_anchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.AllInstances.connectedAnchorGet">
            <summary>设置 SliderJoint2D.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.AllInstances.connectedAnchorSetVector2">
            <summary>设置 SliderJoint2D.set_connectedAnchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSliderJoint2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSliderJoint2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.Constructor">
            <summary>设置 SliderJoint2D.SliderJoint2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.anchorGet">
            <summary>设置 SliderJoint2D.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.anchorSetVector2">
            <summary>设置 SliderJoint2D.set_anchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.connectedAnchorGet">
            <summary>设置 SliderJoint2D.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSliderJoint2D.connectedAnchorSetVector2">
            <summary>设置 SliderJoint2D.set_connectedAnchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSocial">
            <summary>UnityEngine.Social 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSocial.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.ActiveGet">
            <summary>设置 Social.get_Active() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.ActiveSetISocialPlatform">
            <summary>设置 Social.set_Active(ISocialPlatform value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSocial.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSocial.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.CreateAchievement">
            <summary>设置 Social.CreateAchievement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.CreateLeaderboard">
            <summary>设置 Social.CreateLeaderboard() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.LoadAchievementDescriptionsActionOfIAchievementDescriptionArray">
            <summary>设置 Social.LoadAchievementDescriptions(Action`1&lt;IAchievementDescription[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.LoadAchievementsActionOfIAchievementArray">
            <summary>设置 Social.LoadAchievements(Action`1&lt;IAchievement[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.LoadScoresStringActionOfIScoreArray">
            <summary>设置 Social.LoadScores(String leaderboardID, Action`1&lt;IScore[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.LoadUsersStringArrayActionOfIUserProfileArray">
            <summary>设置 Social.LoadUsers(String[] userIDs, Action`1&lt;IUserProfile[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.ReportProgressStringDoubleActionOfBoolean">
            <summary>设置 Social.ReportProgress(String achievementID, Double progress, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.ReportScoreInt64StringActionOfBoolean">
            <summary>设置 Social.ReportScore(Int64 score, String board, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.ShowAchievementsUI">
            <summary>设置 Social.ShowAchievementsUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.ShowLeaderboardUI">
            <summary>设置 Social.ShowLeaderboardUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSocial.localUserGet">
            <summary>设置 Social.get_localUser() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSoftJointLimit">
            <summary>UnityEngine.SoftJointLimit 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSoftJointLimit.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSoftJointLimit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSoftJointLimit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSoftJointLimit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSoftJointLimit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSphereCollider">
            <summary>UnityEngine.SphereCollider 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSphereCollider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSphereCollider.#ctor(UnityEngine.SphereCollider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSphereCollider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSphereCollider.AllInstances.centerGet">
            <summary>设置 SphereCollider.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSphereCollider.AllInstances.centerSetVector3">
            <summary>设置 SphereCollider.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSphereCollider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSphereCollider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSphereCollider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSphereCollider.Constructor">
            <summary>设置 SphereCollider.SphereCollider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSphereCollider.centerGet">
            <summary>设置 SphereCollider.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSphereCollider.centerSetVector3">
            <summary>设置 SphereCollider.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSplatPrototype">
            <summary>UnityEngine.SplatPrototype 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSplatPrototype.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSplatPrototype.#ctor(UnityEngine.SplatPrototype)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSplatPrototype.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.AllInstances.normalMapGet">
            <summary>设置 SplatPrototype.get_normalMap() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.AllInstances.normalMapSetTexture2D">
            <summary>设置 SplatPrototype.set_normalMap(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.AllInstances.textureGet">
            <summary>设置 SplatPrototype.get_texture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.AllInstances.textureSetTexture2D">
            <summary>设置 SplatPrototype.set_texture(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.AllInstances.tileOffsetGet">
            <summary>设置 SplatPrototype.get_tileOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.AllInstances.tileOffsetSetVector2">
            <summary>设置 SplatPrototype.set_tileOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.AllInstances.tileSizeGet">
            <summary>设置 SplatPrototype.get_tileSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.AllInstances.tileSizeSetVector2">
            <summary>设置 SplatPrototype.set_tileSize(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSplatPrototype.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSplatPrototype.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.Constructor">
            <summary>设置 SplatPrototype.SplatPrototype() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.normalMapGet">
            <summary>设置 SplatPrototype.get_normalMap() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.normalMapSetTexture2D">
            <summary>设置 SplatPrototype.set_normalMap(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.textureGet">
            <summary>设置 SplatPrototype.get_texture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.textureSetTexture2D">
            <summary>设置 SplatPrototype.set_texture(Texture2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.tileOffsetGet">
            <summary>设置 SplatPrototype.get_tileOffset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.tileOffsetSetVector2">
            <summary>设置 SplatPrototype.set_tileOffset(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.tileSizeGet">
            <summary>设置 SplatPrototype.get_tileSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSplatPrototype.tileSizeSetVector2">
            <summary>设置 SplatPrototype.set_tileSize(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSpringJoint">
            <summary>UnityEngine.SpringJoint 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpringJoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpringJoint.#ctor(UnityEngine.SpringJoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSpringJoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpringJoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpringJoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint.Constructor">
            <summary>设置 SpringJoint.SpringJoint() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSpringJoint2D">
            <summary>UnityEngine.SpringJoint2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpringJoint2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpringJoint2D.#ctor(UnityEngine.SpringJoint2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSpringJoint2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.AllInstances.anchorGet">
            <summary>设置 SpringJoint2D.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.AllInstances.anchorSetVector2">
            <summary>设置 SpringJoint2D.set_anchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.AllInstances.connectedAnchorGet">
            <summary>设置 SpringJoint2D.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.AllInstances.connectedAnchorSetVector2">
            <summary>设置 SpringJoint2D.set_connectedAnchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpringJoint2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpringJoint2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.Constructor">
            <summary>设置 SpringJoint2D.SpringJoint2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.anchorGet">
            <summary>设置 SpringJoint2D.get_anchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.anchorSetVector2">
            <summary>设置 SpringJoint2D.set_anchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.connectedAnchorGet">
            <summary>设置 SpringJoint2D.get_connectedAnchor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpringJoint2D.connectedAnchorSetVector2">
            <summary>设置 SpringJoint2D.set_connectedAnchor(Vector2 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSprite">
            <summary>UnityEngine.Sprite 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSprite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSprite.#ctor(UnityEngine.Sprite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSprite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSprite.AllInstances.textureRectOffsetGet">
            <summary>设置 Sprite.get_textureRectOffset() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSprite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSprite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSprite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSprite.Constructor">
            <summary>设置 Sprite.Sprite() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSprite.CreateTexture2DRectVector2">
            <summary>设置 Sprite.Create(Texture2D texture, Rect rect, Vector2 pivot) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSprite.CreateTexture2DRectVector2Single">
            <summary>设置 Sprite.Create(Texture2D texture, Rect rect, Vector2 pivot, Single pixelsToUnits) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSprite.CreateTexture2DRectVector2SingleUInt32">
            <summary>设置 Sprite.Create(Texture2D texture, Rect rect, Vector2 pivot, Single pixelsToUnits, UInt32 extrude) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSprite.CreateTexture2DRectVector2SingleUInt32SpriteMeshType">
            <summary>设置 Sprite.Create(Texture2D texture, Rect rect, Vector2 pivot, Single pixelsToUnits, UInt32 extrude, SpriteMeshType meshType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSprite.textureRectOffsetGet">
            <summary>设置 Sprite.get_textureRectOffset() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSpriteRenderer">
            <summary>UnityEngine.SpriteRenderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpriteRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpriteRenderer.#ctor(UnityEngine.SpriteRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSpriteRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.AllInstances.colorGet">
            <summary>设置 SpriteRenderer.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.AllInstances.colorSetColor">
            <summary>设置 SpriteRenderer.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.AllInstances.spriteGet">
            <summary>设置 SpriteRenderer.get_sprite() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.AllInstances.spriteSetSprite">
            <summary>设置 SpriteRenderer.set_sprite(Sprite value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpriteRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSpriteRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.Constructor">
            <summary>设置 SpriteRenderer.SpriteRenderer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.colorGet">
            <summary>设置 SpriteRenderer.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.colorSetColor">
            <summary>设置 SpriteRenderer.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.spriteGet">
            <summary>设置 SpriteRenderer.get_sprite() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSpriteRenderer.spriteSetSprite">
            <summary>设置 SpriteRenderer.set_sprite(Sprite value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimStackTraceUtility">
            <summary>UnityEngine.StackTraceUtility 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimStackTraceUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimStackTraceUtility.#ctor(UnityEngine.StackTraceUtility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimStackTraceUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimStackTraceUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimStackTraceUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.Constructor">
            <summary>设置 StackTraceUtility.StackTraceUtility() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.ExtractFormattedStackTraceStackTrace">
            <summary>设置 StackTraceUtility.ExtractFormattedStackTrace(StackTrace stackTrace) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.ExtractStackTrace">
            <summary>设置 StackTraceUtility.ExtractStackTrace() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.ExtractStringFromExceptionInternalObjectStringOutStringOut">
            <summary>设置 StackTraceUtility.ExtractStringFromExceptionInternal(Object exceptiono, String&amp; message, String&amp; stackTrace) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.ExtractStringFromExceptionObject">
            <summary>设置 StackTraceUtility.ExtractStringFromException(Object exception) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.IsSystemStacktraceTypeObject">
            <summary>设置 StackTraceUtility.IsSystemStacktraceType(Object name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.PostprocessStacktraceStringBoolean">
            <summary>设置 StackTraceUtility.PostprocessStacktrace(String oldString, Boolean stripEngineInternalInformation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.SetProjectFolderString">
            <summary>设置 StackTraceUtility.SetProjectFolder(String folder) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStackTraceUtility.StaticConstructor">
            <summary>设置 StackTraceUtility.StackTraceUtility() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimStaticBatchingUtility">
            <summary>UnityEngine.StaticBatchingUtility 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimStaticBatchingUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimStaticBatchingUtility.#ctor(UnityEngine.StaticBatchingUtility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimStaticBatchingUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimStaticBatchingUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimStaticBatchingUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStaticBatchingUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStaticBatchingUtility.CombineGameObject">
            <summary>设置 StaticBatchingUtility.Combine(GameObject staticBatchRoot) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStaticBatchingUtility.CombineGameObjectArrayGameObject">
            <summary>设置 StaticBatchingUtility.Combine(GameObject[] gos, GameObject staticBatchRoot) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimStaticBatchingUtility.Constructor">
            <summary>设置 StaticBatchingUtility.StaticBatchingUtility() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSystemInfo">
            <summary>UnityEngine.SystemInfo 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSystemInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSystemInfo.#ctor(UnityEngine.SystemInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimSystemInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSystemInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimSystemInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSystemInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimSystemInfo.Constructor">
            <summary>设置 SystemInfo.SystemInfo() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTerrain">
            <summary>UnityEngine.Terrain 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrain.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrain.#ctor(UnityEngine.Terrain)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AddTreeInstanceTreeInstance">
            <summary>设置 Terrain.AddTreeInstance(TreeInstance instance) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTerrain.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.AddTreeInstanceTreeInstance">
            <summary>设置 Terrain.AddTreeInstance(TreeInstance instance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.ApplyDelayedHeightmapModification">
            <summary>设置 Terrain.ApplyDelayedHeightmapModification() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.Flush">
            <summary>设置 Terrain.Flush() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.GetPosition">
            <summary>设置 Terrain.GetPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.InstanceObjectGet">
            <summary>设置 Terrain.get_InstanceObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.InstanceObjectSetIntPtr">
            <summary>设置 Terrain.set_InstanceObject(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.Internal_AddTreeInstanceIntPtrTreeInstance">
            <summary>设置 Terrain.Internal_AddTreeInstance(IntPtr terrainInstance, TreeInstance instance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.Internal_RemoveTreesIntPtrVector2SingleInt32">
            <summary>设置 Terrain.Internal_RemoveTrees(IntPtr terrainInstance, Vector2 position, Single radius, Int32 prototypeIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.Internal_SampleHeightIntPtrVector3">
            <summary>设置 Terrain.Internal_SampleHeight(IntPtr terrainInstance, Vector3 worldPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.OnDestroy">
            <summary>设置 Terrain.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.OnDisable">
            <summary>设置 Terrain.OnDisable() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.OnEnable">
            <summary>设置 Terrain.OnEnable() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.RemoveTreesVector2SingleInt32">
            <summary>设置 Terrain.RemoveTrees(Vector2 position, Single radius, Int32 prototypeIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.SampleHeightVector3">
            <summary>设置 Terrain.SampleHeight(Vector3 worldPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.SetLightmapIndexInt32">
            <summary>设置 Terrain.SetLightmapIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.SetNeighborsTerrainTerrainTerrainTerrain">
            <summary>设置 Terrain.SetNeighbors(Terrain left, Terrain top, Terrain right, Terrain bottom) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.ShiftLightmapIndexInt32">
            <summary>设置 Terrain.ShiftLightmapIndex(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.basemapDistanceGet">
            <summary>设置 Terrain.get_basemapDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.basemapDistanceSetSingle">
            <summary>设置 Terrain.set_basemapDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.castShadowsGet">
            <summary>设置 Terrain.get_castShadows() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.castShadowsSetBoolean">
            <summary>设置 Terrain.set_castShadows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.detailObjectDensityGet">
            <summary>设置 Terrain.get_detailObjectDensity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.detailObjectDensitySetSingle">
            <summary>设置 Terrain.set_detailObjectDensity(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.detailObjectDistanceGet">
            <summary>设置 Terrain.get_detailObjectDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.detailObjectDistanceSetSingle">
            <summary>设置 Terrain.set_detailObjectDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.drawTreesAndFoliageGet">
            <summary>设置 Terrain.get_drawTreesAndFoliage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.drawTreesAndFoliageSetBoolean">
            <summary>设置 Terrain.set_drawTreesAndFoliage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.editorRenderFlagsGet">
            <summary>设置 Terrain.get_editorRenderFlags() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.editorRenderFlagsSetTerrainRenderFlags">
            <summary>设置 Terrain.set_editorRenderFlags(TerrainRenderFlags value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.heightmapMaximumLODGet">
            <summary>设置 Terrain.get_heightmapMaximumLOD() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.heightmapMaximumLODSetInt32">
            <summary>设置 Terrain.set_heightmapMaximumLOD(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.heightmapPixelErrorGet">
            <summary>设置 Terrain.get_heightmapPixelError() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.heightmapPixelErrorSetSingle">
            <summary>设置 Terrain.set_heightmapPixelError(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.lightmapIndexGet">
            <summary>设置 Terrain.get_lightmapIndex() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.lightmapIndexSetInt32">
            <summary>设置 Terrain.set_lightmapIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.lightmapSizeGet">
            <summary>设置 Terrain.get_lightmapSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.lightmapSizeSetInt32">
            <summary>设置 Terrain.set_lightmapSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.materialTemplateGet">
            <summary>设置 Terrain.get_materialTemplate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.materialTemplateSetMaterial">
            <summary>设置 Terrain.set_materialTemplate(Material value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.splatmapDistanceGet">
            <summary>设置 Terrain.get_splatmapDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.splatmapDistanceSetSingle">
            <summary>设置 Terrain.set_splatmapDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.terrainDataGet">
            <summary>设置 Terrain.get_terrainData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.terrainDataSetTerrainData">
            <summary>设置 Terrain.set_terrainData(TerrainData value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.treeBillboardDistanceGet">
            <summary>设置 Terrain.get_treeBillboardDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.treeBillboardDistanceSetSingle">
            <summary>设置 Terrain.set_treeBillboardDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.treeCrossFadeLengthGet">
            <summary>设置 Terrain.get_treeCrossFadeLength() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.treeCrossFadeLengthSetSingle">
            <summary>设置 Terrain.set_treeCrossFadeLength(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.treeDistanceGet">
            <summary>设置 Terrain.get_treeDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.treeDistanceSetSingle">
            <summary>设置 Terrain.set_treeDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.treeMaximumFullLODCountGet">
            <summary>设置 Terrain.get_treeMaximumFullLODCount() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.AllInstances.treeMaximumFullLODCountSetInt32">
            <summary>设置 Terrain.set_treeMaximumFullLODCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.ApplyDelayedHeightmapModification">
            <summary>设置 Terrain.ApplyDelayedHeightmapModification() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrain.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrain.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.Constructor">
            <summary>设置 Terrain.Terrain() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.CreateTerrainGameObjectTerrainData">
            <summary>设置 Terrain.CreateTerrainGameObject(TerrainData assignTerrain) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.Flush">
            <summary>设置 Terrain.Flush() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.GetPosition">
            <summary>设置 Terrain.GetPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.InstanceObjectGet">
            <summary>设置 Terrain.get_InstanceObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.InstanceObjectSetIntPtr">
            <summary>设置 Terrain.set_InstanceObject(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.Internal_AddTreeInstanceIntPtrTreeInstance">
            <summary>设置 Terrain.Internal_AddTreeInstance(IntPtr terrainInstance, TreeInstance instance) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.Internal_RemoveTreesIntPtrVector2SingleInt32">
            <summary>设置 Terrain.Internal_RemoveTrees(IntPtr terrainInstance, Vector2 position, Single radius, Int32 prototypeIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.Internal_SampleHeightIntPtrVector3">
            <summary>设置 Terrain.Internal_SampleHeight(IntPtr terrainInstance, Vector3 worldPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.OnDestroy">
            <summary>设置 Terrain.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.OnDisable">
            <summary>设置 Terrain.OnDisable() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.OnEnable">
            <summary>设置 Terrain.OnEnable() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.ReconnectTerrainData">
            <summary>设置 Terrain.ReconnectTerrainData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.RemoveTreesVector2SingleInt32">
            <summary>设置 Terrain.RemoveTrees(Vector2 position, Single radius, Int32 prototypeIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.SampleHeightVector3">
            <summary>设置 Terrain.SampleHeight(Vector3 worldPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.SetLightmapIndexInt32">
            <summary>设置 Terrain.SetLightmapIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.SetNeighborsTerrainTerrainTerrainTerrain">
            <summary>设置 Terrain.SetNeighbors(Terrain left, Terrain top, Terrain right, Terrain bottom) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.ShiftLightmapIndexInt32">
            <summary>设置 Terrain.ShiftLightmapIndex(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.basemapDistanceGet">
            <summary>设置 Terrain.get_basemapDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.basemapDistanceSetSingle">
            <summary>设置 Terrain.set_basemapDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.castShadowsGet">
            <summary>设置 Terrain.get_castShadows() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.castShadowsSetBoolean">
            <summary>设置 Terrain.set_castShadows(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.detailObjectDensityGet">
            <summary>设置 Terrain.get_detailObjectDensity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.detailObjectDensitySetSingle">
            <summary>设置 Terrain.set_detailObjectDensity(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.detailObjectDistanceGet">
            <summary>设置 Terrain.get_detailObjectDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.detailObjectDistanceSetSingle">
            <summary>设置 Terrain.set_detailObjectDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.drawTreesAndFoliageGet">
            <summary>设置 Terrain.get_drawTreesAndFoliage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.drawTreesAndFoliageSetBoolean">
            <summary>设置 Terrain.set_drawTreesAndFoliage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.editorRenderFlagsGet">
            <summary>设置 Terrain.get_editorRenderFlags() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.editorRenderFlagsSetTerrainRenderFlags">
            <summary>设置 Terrain.set_editorRenderFlags(TerrainRenderFlags value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.heightmapMaximumLODGet">
            <summary>设置 Terrain.get_heightmapMaximumLOD() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.heightmapMaximumLODSetInt32">
            <summary>设置 Terrain.set_heightmapMaximumLOD(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.heightmapPixelErrorGet">
            <summary>设置 Terrain.get_heightmapPixelError() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.heightmapPixelErrorSetSingle">
            <summary>设置 Terrain.set_heightmapPixelError(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.lightmapIndexGet">
            <summary>设置 Terrain.get_lightmapIndex() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.lightmapIndexSetInt32">
            <summary>设置 Terrain.set_lightmapIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.lightmapSizeGet">
            <summary>设置 Terrain.get_lightmapSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.lightmapSizeSetInt32">
            <summary>设置 Terrain.set_lightmapSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.materialTemplateGet">
            <summary>设置 Terrain.get_materialTemplate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.materialTemplateSetMaterial">
            <summary>设置 Terrain.set_materialTemplate(Material value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.splatmapDistanceGet">
            <summary>设置 Terrain.get_splatmapDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.splatmapDistanceSetSingle">
            <summary>设置 Terrain.set_splatmapDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.terrainDataGet">
            <summary>设置 Terrain.get_terrainData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.terrainDataSetTerrainData">
            <summary>设置 Terrain.set_terrainData(TerrainData value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.treeBillboardDistanceGet">
            <summary>设置 Terrain.get_treeBillboardDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.treeBillboardDistanceSetSingle">
            <summary>设置 Terrain.set_treeBillboardDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.treeCrossFadeLengthGet">
            <summary>设置 Terrain.get_treeCrossFadeLength() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.treeCrossFadeLengthSetSingle">
            <summary>设置 Terrain.set_treeCrossFadeLength(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.treeDistanceGet">
            <summary>设置 Terrain.get_treeDistance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.treeDistanceSetSingle">
            <summary>设置 Terrain.set_treeDistance(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.treeMaximumFullLODCountGet">
            <summary>设置 Terrain.get_treeMaximumFullLODCount() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrain.treeMaximumFullLODCountSetInt32">
            <summary>设置 Terrain.set_treeMaximumFullLODCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTerrainCollider">
            <summary>UnityEngine.TerrainCollider 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrainCollider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrainCollider.#ctor(UnityEngine.TerrainCollider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTerrainCollider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrainCollider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrainCollider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainCollider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainCollider.Constructor">
            <summary>设置 TerrainCollider.TerrainCollider() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTerrainData">
            <summary>UnityEngine.TerrainData 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrainData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrainData.#ctor(UnityEngine.TerrainData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTerrainData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.RemoveTreesVector2SingleInt32">
            <summary>设置 TerrainData.RemoveTrees(Vector2 position, Single radius, Int32 prototypeIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.SetAlphamapsInt32Int32SingleMdArray3">
            <summary>设置 TerrainData.SetAlphamaps(Int32 x, Int32 y, Single[,,] map) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.SetDetailLayerInt32Int32Int32Int32MdArray2">
            <summary>设置 TerrainData.SetDetailLayer(Int32 xBase, Int32 yBase, Int32 layer, Int32[,] details) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.SetHeightsDelayLODInt32Int32SingleMdArray2">
            <summary>设置 TerrainData.SetHeightsDelayLOD(Int32 xBase, Int32 yBase, Single[,] heights) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.SetHeightsInt32Int32SingleMdArray2">
            <summary>设置 TerrainData.SetHeights(Int32 xBase, Int32 yBase, Single[,] heights) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.alphamapTexturesGet">
            <summary>设置 TerrainData.get_alphamapTextures() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.sizeGet">
            <summary>设置 TerrainData.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.sizeSetVector3">
            <summary>设置 TerrainData.set_size(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.wavingGrassTintGet">
            <summary>设置 TerrainData.get_wavingGrassTint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.AllInstances.wavingGrassTintSetColor">
            <summary>设置 TerrainData.set_wavingGrassTint(Color value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrainData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTerrainData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.Constructor">
            <summary>设置 TerrainData.TerrainData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.RemoveTreesVector2SingleInt32">
            <summary>设置 TerrainData.RemoveTrees(Vector2 position, Single radius, Int32 prototypeIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.SetAlphamapsInt32Int32SingleMdArray3">
            <summary>设置 TerrainData.SetAlphamaps(Int32 x, Int32 y, Single[,,] map) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.SetDetailLayerInt32Int32Int32Int32MdArray2">
            <summary>设置 TerrainData.SetDetailLayer(Int32 xBase, Int32 yBase, Int32 layer, Int32[,] details) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.SetHeightsDelayLODInt32Int32SingleMdArray2">
            <summary>设置 TerrainData.SetHeightsDelayLOD(Int32 xBase, Int32 yBase, Single[,] heights) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.SetHeightsInt32Int32SingleMdArray2">
            <summary>设置 TerrainData.SetHeights(Int32 xBase, Int32 yBase, Single[,] heights) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.alphamapTexturesGet">
            <summary>设置 TerrainData.get_alphamapTextures() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.sizeGet">
            <summary>设置 TerrainData.get_size() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.sizeSetVector3">
            <summary>设置 TerrainData.set_size(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.wavingGrassTintGet">
            <summary>设置 TerrainData.get_wavingGrassTint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTerrainData.wavingGrassTintSetColor">
            <summary>设置 TerrainData.set_wavingGrassTint(Color value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTextAsset">
            <summary>UnityEngine.TextAsset 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextAsset.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextAsset.#ctor(UnityEngine.TextAsset)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTextAsset.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextAsset.AllInstances.ToString01">
            <summary>设置 TextAsset.ToString() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextAsset.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextAsset.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextAsset.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextAsset.Constructor">
            <summary>设置 TextAsset.TextAsset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextAsset.ToString">
            <summary>设置 TextAsset.ToString() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTextEditor">
            <summary>UnityEngine.TextEditor 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextEditor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextEditor.#ctor(UnityEngine.TextEditor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTextEditor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.Backspace">
            <summary>设置 TextEditor.Backspace() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.CanPaste">
            <summary>设置 TextEditor.CanPaste() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.ClampPos">
            <summary>设置 TextEditor.ClampPos() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.ClearCursorPos">
            <summary>设置 TextEditor.ClearCursorPos() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.Copy">
            <summary>设置 TextEditor.Copy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.Cut">
            <summary>设置 TextEditor.Cut() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.DblClickSnapTextEditorDblClickSnapping">
            <summary>设置 TextEditor.DblClickSnap(DblClickSnapping snapping) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.Delete">
            <summary>设置 TextEditor.Delete() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.DeleteLineBack">
            <summary>设置 TextEditor.DeleteLineBack() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.DeleteSelection">
            <summary>设置 TextEditor.DeleteSelection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.DeleteWordBack">
            <summary>设置 TextEditor.DeleteWordBack() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.DeleteWordForward">
            <summary>设置 TextEditor.DeleteWordForward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.DrawCursorString">
            <summary>设置 TextEditor.DrawCursor(String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.ExpandSelectGraphicalLineEnd">
            <summary>设置 TextEditor.ExpandSelectGraphicalLineEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.ExpandSelectGraphicalLineStart">
            <summary>设置 TextEditor.ExpandSelectGraphicalLineStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.FindEndOfClassificationInt32Int32">
            <summary>设置 TextEditor.FindEndOfClassification(Int32 p, Int32 dir) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.FindEndOfPreviousWordInt32">
            <summary>设置 TextEditor.FindEndOfPreviousWord(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.FindNextSeperatorInt32">
            <summary>设置 TextEditor.FindNextSeperator(Int32 startPos) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.FindPrevSeperatorInt32">
            <summary>设置 TextEditor.FindPrevSeperator(Int32 startPos) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.FindStartOfNextWordInt32">
            <summary>设置 TextEditor.FindStartOfNextWord(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.GetGraphicalLineEndInt32">
            <summary>设置 TextEditor.GetGraphicalLineEnd(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.GetGraphicalLineStartInt32">
            <summary>设置 TextEditor.GetGraphicalLineStart(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.GrabGraphicalCursorPos">
            <summary>设置 TextEditor.GrabGraphicalCursorPos() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.HandleKeyEventEvent">
            <summary>设置 TextEditor.HandleKeyEvent(Event e) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.InitKeyActions">
            <summary>设置 TextEditor.InitKeyActions() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.InsertChar">
            <summary>设置 TextEditor.Insert(Char c) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.IsOverSelectionVector2">
            <summary>设置 TextEditor.IsOverSelection(Vector2 cursorPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MouseDragSelectsWholeWordsBoolean">
            <summary>设置 TextEditor.MouseDragSelectsWholeWords(Boolean on) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveAltCursorToPositionVector2">
            <summary>设置 TextEditor.MoveAltCursorToPosition(Vector2 cursorPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveCursorToPositionVector2">
            <summary>设置 TextEditor.MoveCursorToPosition(Vector2 cursorPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveDown">
            <summary>设置 TextEditor.MoveDown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveGraphicalLineEnd">
            <summary>设置 TextEditor.MoveGraphicalLineEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveGraphicalLineStart">
            <summary>设置 TextEditor.MoveGraphicalLineStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveLeft">
            <summary>设置 TextEditor.MoveLeft() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveLineEnd">
            <summary>设置 TextEditor.MoveLineEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveLineStart">
            <summary>设置 TextEditor.MoveLineStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveParagraphBackward">
            <summary>设置 TextEditor.MoveParagraphBackward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveParagraphForward">
            <summary>设置 TextEditor.MoveParagraphForward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveRight">
            <summary>设置 TextEditor.MoveRight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveSelectionToAltCursor">
            <summary>设置 TextEditor.MoveSelectionToAltCursor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveTextEnd">
            <summary>设置 TextEditor.MoveTextEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveTextStart">
            <summary>设置 TextEditor.MoveTextStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveToEndOfPreviousWord">
            <summary>设置 TextEditor.MoveToEndOfPreviousWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveToStartOfNextWord">
            <summary>设置 TextEditor.MoveToStartOfNextWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveUp">
            <summary>设置 TextEditor.MoveUp() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveWordLeft">
            <summary>设置 TextEditor.MoveWordLeft() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.MoveWordRight">
            <summary>设置 TextEditor.MoveWordRight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.OnFocus">
            <summary>设置 TextEditor.OnFocus() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.OnLostFocus">
            <summary>设置 TextEditor.OnLostFocus() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.Paste">
            <summary>设置 TextEditor.Paste() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.ReplaceSelectionString">
            <summary>设置 TextEditor.ReplaceSelection(String replace) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SaveBackup">
            <summary>设置 TextEditor.SaveBackup() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectAll">
            <summary>设置 TextEditor.SelectAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectCurrentParagraph">
            <summary>设置 TextEditor.SelectCurrentParagraph() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectCurrentWord">
            <summary>设置 TextEditor.SelectCurrentWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectDown">
            <summary>设置 TextEditor.SelectDown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectGraphicalLineEnd">
            <summary>设置 TextEditor.SelectGraphicalLineEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectGraphicalLineStart">
            <summary>设置 TextEditor.SelectGraphicalLineStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectLeft">
            <summary>设置 TextEditor.SelectLeft() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectNone">
            <summary>设置 TextEditor.SelectNone() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectParagraphBackward">
            <summary>设置 TextEditor.SelectParagraphBackward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectParagraphForward">
            <summary>设置 TextEditor.SelectParagraphForward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectRight">
            <summary>设置 TextEditor.SelectRight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectTextEnd">
            <summary>设置 TextEditor.SelectTextEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectTextStart">
            <summary>设置 TextEditor.SelectTextStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectToEndOfPreviousWord">
            <summary>设置 TextEditor.SelectToEndOfPreviousWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectToPositionVector2">
            <summary>设置 TextEditor.SelectToPosition(Vector2 cursorPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectToStartOfNextWord">
            <summary>设置 TextEditor.SelectToStartOfNextWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectUp">
            <summary>设置 TextEditor.SelectUp() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectWordLeft">
            <summary>设置 TextEditor.SelectWordLeft() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectWordRight">
            <summary>设置 TextEditor.SelectWordRight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.SelectedTextGet">
            <summary>设置 TextEditor.get_SelectedText() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.Undo">
            <summary>设置 TextEditor.Undo() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.AllInstances.hasSelectionGet">
            <summary>设置 TextEditor.get_hasSelection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.Backspace">
            <summary>设置 TextEditor.Backspace() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextEditor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextEditor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.CanPaste">
            <summary>设置 TextEditor.CanPaste() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.ClampPos">
            <summary>设置 TextEditor.ClampPos() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.ClearCursorPos">
            <summary>设置 TextEditor.ClearCursorPos() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.Constructor">
            <summary>设置 TextEditor.TextEditor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.Copy">
            <summary>设置 TextEditor.Copy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.Cut">
            <summary>设置 TextEditor.Cut() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.DblClickSnapTextEditorDblClickSnapping">
            <summary>设置 TextEditor.DblClickSnap(DblClickSnapping snapping) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.Delete">
            <summary>设置 TextEditor.Delete() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.DeleteLineBack">
            <summary>设置 TextEditor.DeleteLineBack() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.DeleteSelection">
            <summary>设置 TextEditor.DeleteSelection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.DeleteWordBack">
            <summary>设置 TextEditor.DeleteWordBack() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.DeleteWordForward">
            <summary>设置 TextEditor.DeleteWordForward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.DrawCursorString">
            <summary>设置 TextEditor.DrawCursor(String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.ExpandSelectGraphicalLineEnd">
            <summary>设置 TextEditor.ExpandSelectGraphicalLineEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.ExpandSelectGraphicalLineStart">
            <summary>设置 TextEditor.ExpandSelectGraphicalLineStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.FindEndOfClassificationInt32Int32">
            <summary>设置 TextEditor.FindEndOfClassification(Int32 p, Int32 dir) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.FindEndOfPreviousWordInt32">
            <summary>设置 TextEditor.FindEndOfPreviousWord(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.FindNextSeperatorInt32">
            <summary>设置 TextEditor.FindNextSeperator(Int32 startPos) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.FindPrevSeperatorInt32">
            <summary>设置 TextEditor.FindPrevSeperator(Int32 startPos) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.FindStartOfNextWordInt32">
            <summary>设置 TextEditor.FindStartOfNextWord(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.GetGraphicalLineEndInt32">
            <summary>设置 TextEditor.GetGraphicalLineEnd(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.GetGraphicalLineStartInt32">
            <summary>设置 TextEditor.GetGraphicalLineStart(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.GrabGraphicalCursorPos">
            <summary>设置 TextEditor.GrabGraphicalCursorPos() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.HandleKeyEventEvent">
            <summary>设置 TextEditor.HandleKeyEvent(Event e) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.InitKeyActions">
            <summary>设置 TextEditor.InitKeyActions() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.InsertChar">
            <summary>设置 TextEditor.Insert(Char c) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.IsOverSelectionVector2">
            <summary>设置 TextEditor.IsOverSelection(Vector2 cursorPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MouseDragSelectsWholeWordsBoolean">
            <summary>设置 TextEditor.MouseDragSelectsWholeWords(Boolean on) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveAltCursorToPositionVector2">
            <summary>设置 TextEditor.MoveAltCursorToPosition(Vector2 cursorPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveCursorToPositionVector2">
            <summary>设置 TextEditor.MoveCursorToPosition(Vector2 cursorPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveDown">
            <summary>设置 TextEditor.MoveDown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveGraphicalLineEnd">
            <summary>设置 TextEditor.MoveGraphicalLineEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveGraphicalLineStart">
            <summary>设置 TextEditor.MoveGraphicalLineStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveLeft">
            <summary>设置 TextEditor.MoveLeft() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveLineEnd">
            <summary>设置 TextEditor.MoveLineEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveLineStart">
            <summary>设置 TextEditor.MoveLineStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveParagraphBackward">
            <summary>设置 TextEditor.MoveParagraphBackward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveParagraphForward">
            <summary>设置 TextEditor.MoveParagraphForward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveRight">
            <summary>设置 TextEditor.MoveRight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveSelectionToAltCursor">
            <summary>设置 TextEditor.MoveSelectionToAltCursor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveTextEnd">
            <summary>设置 TextEditor.MoveTextEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveTextStart">
            <summary>设置 TextEditor.MoveTextStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveToEndOfPreviousWord">
            <summary>设置 TextEditor.MoveToEndOfPreviousWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveToStartOfNextWord">
            <summary>设置 TextEditor.MoveToStartOfNextWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveUp">
            <summary>设置 TextEditor.MoveUp() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveWordLeft">
            <summary>设置 TextEditor.MoveWordLeft() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.MoveWordRight">
            <summary>设置 TextEditor.MoveWordRight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.OnFocus">
            <summary>设置 TextEditor.OnFocus() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.OnLostFocus">
            <summary>设置 TextEditor.OnLostFocus() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.Paste">
            <summary>设置 TextEditor.Paste() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.ReplaceSelectionString">
            <summary>设置 TextEditor.ReplaceSelection(String replace) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SaveBackup">
            <summary>设置 TextEditor.SaveBackup() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectAll">
            <summary>设置 TextEditor.SelectAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectCurrentParagraph">
            <summary>设置 TextEditor.SelectCurrentParagraph() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectCurrentWord">
            <summary>设置 TextEditor.SelectCurrentWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectDown">
            <summary>设置 TextEditor.SelectDown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectGraphicalLineEnd">
            <summary>设置 TextEditor.SelectGraphicalLineEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectGraphicalLineStart">
            <summary>设置 TextEditor.SelectGraphicalLineStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectLeft">
            <summary>设置 TextEditor.SelectLeft() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectNone">
            <summary>设置 TextEditor.SelectNone() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectParagraphBackward">
            <summary>设置 TextEditor.SelectParagraphBackward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectParagraphForward">
            <summary>设置 TextEditor.SelectParagraphForward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectRight">
            <summary>设置 TextEditor.SelectRight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectTextEnd">
            <summary>设置 TextEditor.SelectTextEnd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectTextStart">
            <summary>设置 TextEditor.SelectTextStart() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectToEndOfPreviousWord">
            <summary>设置 TextEditor.SelectToEndOfPreviousWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectToPositionVector2">
            <summary>设置 TextEditor.SelectToPosition(Vector2 cursorPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectToStartOfNextWord">
            <summary>设置 TextEditor.SelectToStartOfNextWord() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectUp">
            <summary>设置 TextEditor.SelectUp() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectWordLeft">
            <summary>设置 TextEditor.SelectWordLeft() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectWordRight">
            <summary>设置 TextEditor.SelectWordRight() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.SelectedTextGet">
            <summary>设置 TextEditor.get_SelectedText() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.Undo">
            <summary>设置 TextEditor.Undo() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.hasSelectionGet">
            <summary>设置 TextEditor.get_hasSelection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextEditor.isLetterLikeCharChar">
            <summary>设置 TextEditor.isLetterLikeChar(Char c) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTextMesh">
            <summary>UnityEngine.TextMesh 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextMesh.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextMesh.#ctor(UnityEngine.TextMesh)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTextMesh.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextMesh.AllInstances.colorGet">
            <summary>设置 TextMesh.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextMesh.AllInstances.colorSetColor">
            <summary>设置 TextMesh.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextMesh.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTextMesh.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextMesh.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextMesh.Constructor">
            <summary>设置 TextMesh.TextMesh() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextMesh.colorGet">
            <summary>设置 TextMesh.get_color() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTextMesh.colorSetColor">
            <summary>设置 TextMesh.set_color(Color value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTexture">
            <summary>UnityEngine.Texture 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture.#ctor(UnityEngine.Texture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTexture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.AllInstances.heightGet">
            <summary>设置 Texture.get_height() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.AllInstances.heightSetInt32">
            <summary>设置 Texture.set_height(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.AllInstances.texelSizeGet">
            <summary>设置 Texture.get_texelSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.AllInstances.widthGet">
            <summary>设置 Texture.get_width() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.AllInstances.widthSetInt32">
            <summary>设置 Texture.set_width(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.Constructor">
            <summary>设置 Texture.Texture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.heightGet">
            <summary>设置 Texture.get_height() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.heightSetInt32">
            <summary>设置 Texture.set_height(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.texelSizeGet">
            <summary>设置 Texture.get_texelSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.widthGet">
            <summary>设置 Texture.get_width() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture.widthSetInt32">
            <summary>设置 Texture.set_width(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTexture2D">
            <summary>UnityEngine.Texture2D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture2D.#ctor(UnityEngine.Texture2D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTexture2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.Apply">
            <summary>设置 Texture2D.Apply() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.ApplyBoolean">
            <summary>设置 Texture2D.Apply(Boolean updateMipmaps) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.CompressBoolean">
            <summary>设置 Texture2D.Compress(Boolean highQuality) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.GetPixels">
            <summary>设置 Texture2D.GetPixels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.GetPixels32">
            <summary>设置 Texture2D.GetPixels32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.GetPixelsInt32">
            <summary>设置 Texture2D.GetPixels(Int32 miplevel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.GetPixelsInt32Int32Int32Int32">
            <summary>设置 Texture2D.GetPixels(Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.PackTexturesTexture2DArrayInt32">
            <summary>设置 Texture2D.PackTextures(Texture2D[] textures, Int32 padding) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.PackTexturesTexture2DArrayInt32Int32">
            <summary>设置 Texture2D.PackTextures(Texture2D[] textures, Int32 padding, Int32 maximumAtlasSize) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.ReadPixelsRectInt32Int32">
            <summary>设置 Texture2D.ReadPixels(Rect source, Int32 destX, Int32 destY) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.ReadPixelsRectInt32Int32Boolean">
            <summary>设置 Texture2D.ReadPixels(Rect source, Int32 destX, Int32 destY, Boolean recalculateMipMaps) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.ResizeInt32Int32">
            <summary>设置 Texture2D.Resize(Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.SetPixelInt32Int32Color">
            <summary>设置 Texture2D.SetPixel(Int32 x, Int32 y, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.SetPixels32Color32Array">
            <summary>设置 Texture2D.SetPixels32(Color32[] colors) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.SetPixelsColorArray">
            <summary>设置 Texture2D.SetPixels(Color[] colors) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.SetPixelsColorArrayInt32">
            <summary>设置 Texture2D.SetPixels(Color[] colors, Int32 miplevel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.AllInstances.SetPixelsInt32Int32Int32Int32ColorArray">
            <summary>设置 Texture2D.SetPixels(Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight, Color[] colors) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.Apply">
            <summary>设置 Texture2D.Apply() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.ApplyBoolean">
            <summary>设置 Texture2D.Apply(Boolean updateMipmaps) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.CompressBoolean">
            <summary>设置 Texture2D.Compress(Boolean highQuality) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.ConstructorInt32Int32">
            <summary>设置 Texture2D.Texture2D(Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.ConstructorInt32Int32TextureFormatBoolean">
            <summary>设置 Texture2D.Texture2D(Int32 width, Int32 height, TextureFormat format, Boolean mipmap) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.ConstructorInt32Int32TextureFormatBooleanBoolean">
            <summary>设置 Texture2D.Texture2D(Int32 width, Int32 height, TextureFormat format, Boolean mipmap, Boolean linear) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.ConstructorInt32Int32TextureFormatBooleanBooleanIntPtr">
            <summary>设置 Texture2D.Texture2D(Int32 width, Int32 height, TextureFormat format, Boolean mipmap, Boolean linear, IntPtr nativeTex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.CreateExternalTextureInt32Int32TextureFormatBooleanBooleanIntPtr">
            <summary>设置 Texture2D.CreateExternalTexture(Int32 width, Int32 height, TextureFormat format, Boolean mipmap, Boolean linear, IntPtr nativeTex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.GetPixels">
            <summary>设置 Texture2D.GetPixels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.GetPixels32">
            <summary>设置 Texture2D.GetPixels32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.GetPixelsInt32">
            <summary>设置 Texture2D.GetPixels(Int32 miplevel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.GetPixelsInt32Int32Int32Int32">
            <summary>设置 Texture2D.GetPixels(Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.PackTexturesTexture2DArrayInt32">
            <summary>设置 Texture2D.PackTextures(Texture2D[] textures, Int32 padding) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.PackTexturesTexture2DArrayInt32Int32">
            <summary>设置 Texture2D.PackTextures(Texture2D[] textures, Int32 padding, Int32 maximumAtlasSize) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.ReadPixelsRectInt32Int32">
            <summary>设置 Texture2D.ReadPixels(Rect source, Int32 destX, Int32 destY) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.ReadPixelsRectInt32Int32Boolean">
            <summary>设置 Texture2D.ReadPixels(Rect source, Int32 destX, Int32 destY, Boolean recalculateMipMaps) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.ResizeInt32Int32">
            <summary>设置 Texture2D.Resize(Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.SetPixelInt32Int32Color">
            <summary>设置 Texture2D.SetPixel(Int32 x, Int32 y, Color color) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.SetPixels32Color32Array">
            <summary>设置 Texture2D.SetPixels32(Color32[] colors) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.SetPixelsColorArray">
            <summary>设置 Texture2D.SetPixels(Color[] colors) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.SetPixelsColorArrayInt32">
            <summary>设置 Texture2D.SetPixels(Color[] colors, Int32 miplevel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture2D.SetPixelsInt32Int32Int32Int32ColorArray">
            <summary>设置 Texture2D.SetPixels(Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight, Color[] colors) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTexture3D">
            <summary>UnityEngine.Texture3D 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture3D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture3D.#ctor(UnityEngine.Texture3D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTexture3D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture3D.AllInstances.Apply">
            <summary>设置 Texture3D.Apply() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture3D.AllInstances.GetPixels">
            <summary>设置 Texture3D.GetPixels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture3D.AllInstances.SetPixelsColorArray">
            <summary>设置 Texture3D.SetPixels(Color[] colors) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture3D.Apply">
            <summary>设置 Texture3D.Apply() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture3D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTexture3D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture3D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture3D.ConstructorInt32Int32Int32TextureFormatBoolean">
            <summary>设置 Texture3D.Texture3D(Int32 width, Int32 height, Int32 depth, TextureFormat format, Boolean mipmap) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture3D.GetPixels">
            <summary>设置 Texture3D.GetPixels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTexture3D.SetPixelsColorArray">
            <summary>设置 Texture3D.SetPixels(Color[] colors) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimThreadSafeAttribute">
            <summary>UnityEngine.ThreadSafeAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimThreadSafeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimThreadSafeAttribute.#ctor(UnityEngine.ThreadSafeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimThreadSafeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimThreadSafeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimThreadSafeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimThreadSafeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimThreadSafeAttribute.Constructor">
            <summary>设置 ThreadSafeAttribute.ThreadSafeAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTime">
            <summary>UnityEngine.Time 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTime.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTime.#ctor(UnityEngine.Time)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTime.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTime.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTime.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTime.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTime.Constructor">
            <summary>设置 Time.Time() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTouch">
            <summary>UnityEngine.Touch 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTouch.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTouch.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTouch.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTouch.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouch.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTouchScreenKeyboard">
            <summary>UnityEngine.TouchScreenKeyboard 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTouchScreenKeyboard.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTouchScreenKeyboard.#ctor(UnityEngine.TouchScreenKeyboard)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTouchScreenKeyboard.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTouchScreenKeyboard.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTouchScreenKeyboard.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.ConstructorStringTouchScreenKeyboardTypeBooleanBooleanBooleanBooleanString">
            <summary>设置 TouchScreenKeyboard.TouchScreenKeyboard(String text, TouchScreenKeyboardType keyboardType, Boolean autocorrection, Boolean multiline, Boolean secure, Boolean alert, String textPlaceholder) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.OpenString">
            <summary>设置 TouchScreenKeyboard.Open(String text) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.OpenStringTouchScreenKeyboardType">
            <summary>设置 TouchScreenKeyboard.Open(String text, TouchScreenKeyboardType keyboardType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.OpenStringTouchScreenKeyboardTypeBoolean">
            <summary>设置 TouchScreenKeyboard.Open(String text, TouchScreenKeyboardType keyboardType, Boolean autocorrection) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.OpenStringTouchScreenKeyboardTypeBooleanBoolean">
            <summary>设置 TouchScreenKeyboard.Open(String text, TouchScreenKeyboardType keyboardType, Boolean autocorrection, Boolean multiline) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.OpenStringTouchScreenKeyboardTypeBooleanBooleanBoolean">
            <summary>设置 TouchScreenKeyboard.Open(String text, TouchScreenKeyboardType keyboardType, Boolean autocorrection, Boolean multiline, Boolean secure) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.OpenStringTouchScreenKeyboardTypeBooleanBooleanBooleanBoolean">
            <summary>设置 TouchScreenKeyboard.Open(String text, TouchScreenKeyboardType keyboardType, Boolean autocorrection, Boolean multiline, Boolean secure, Boolean alert) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTouchScreenKeyboard.OpenStringTouchScreenKeyboardTypeBooleanBooleanBooleanBooleanString">
            <summary>设置 TouchScreenKeyboard.Open(String text, TouchScreenKeyboardType keyboardType, Boolean autocorrection, Boolean multiline, Boolean secure, Boolean alert, String textPlaceholder) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTrackedReference">
            <summary>UnityEngine.TrackedReference 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTrackedReference.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTrackedReference.#ctor(UnityEngine.TrackedReference)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTrackedReference.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.AllInstances.EqualsObject">
            <summary>设置 TrackedReference.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.AllInstances.GetHashCode01">
            <summary>设置 TrackedReference.GetHashCode() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTrackedReference.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTrackedReference.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.Constructor">
            <summary>设置 TrackedReference.TrackedReference() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.EqualityOpTrackedReferenceTrackedReference">
            <summary>设置 TrackedReference.op_Equality(TrackedReference x, TrackedReference y) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.EqualsObject">
            <summary>设置 TrackedReference.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.GetHashCode">
            <summary>设置 TrackedReference.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.ImplicitOpTrackedReferenceBoolean">
            <summary>设置 TrackedReference.op_Implicit(TrackedReference exists) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrackedReference.InequalityOpTrackedReferenceTrackedReference">
            <summary>设置 TrackedReference.op_Inequality(TrackedReference x, TrackedReference y) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTrailRenderer">
            <summary>UnityEngine.TrailRenderer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTrailRenderer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTrailRenderer.#ctor(UnityEngine.TrailRenderer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTrailRenderer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTrailRenderer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTrailRenderer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrailRenderer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTrailRenderer.Constructor">
            <summary>设置 TrailRenderer.TrailRenderer() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTransform">
            <summary>UnityEngine.Transform 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTransform.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTransform.#ctor(UnityEngine.Transform)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTransform.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.FindChildString">
            <summary>设置 Transform.FindChild(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.GetEnumerator">
            <summary>设置 Transform.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.InverseTransformDirectionSingleSingleSingle">
            <summary>设置 Transform.InverseTransformDirection(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.InverseTransformDirectionVector3">
            <summary>设置 Transform.InverseTransformDirection(Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.InverseTransformPointSingleSingleSingle">
            <summary>设置 Transform.InverseTransformPoint(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.InverseTransformPointVector3">
            <summary>设置 Transform.InverseTransformPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.LookAtTransform">
            <summary>设置 Transform.LookAt(Transform target) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.LookAtTransformVector3">
            <summary>设置 Transform.LookAt(Transform target, Vector3 worldUp) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.LookAtVector3">
            <summary>设置 Transform.LookAt(Vector3 worldPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.LookAtVector3Vector3">
            <summary>设置 Transform.LookAt(Vector3 worldPosition, Vector3 worldUp) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateAroundInternalVector3Single">
            <summary>设置 Transform.RotateAroundInternal(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateAroundLocalVector3Single">
            <summary>设置 Transform.RotateAroundLocal(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateAroundVector3Single">
            <summary>设置 Transform.RotateAround(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateAroundVector3Vector3Single">
            <summary>设置 Transform.RotateAround(Vector3 point, Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateSingleSingleSingle">
            <summary>设置 Transform.Rotate(Single xAngle, Single yAngle, Single zAngle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateSingleSingleSingleSpace">
            <summary>设置 Transform.Rotate(Single xAngle, Single yAngle, Single zAngle, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateVector3">
            <summary>设置 Transform.Rotate(Vector3 eulerAngles) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateVector3Single">
            <summary>设置 Transform.Rotate(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateVector3SingleSpace">
            <summary>设置 Transform.Rotate(Vector3 axis, Single angle, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.RotateVector3Space">
            <summary>设置 Transform.Rotate(Vector3 eulerAngles, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TransformDirectionSingleSingleSingle">
            <summary>设置 Transform.TransformDirection(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TransformDirectionVector3">
            <summary>设置 Transform.TransformDirection(Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TransformPointSingleSingleSingle">
            <summary>设置 Transform.TransformPoint(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TransformPointVector3">
            <summary>设置 Transform.TransformPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TranslateSingleSingleSingle">
            <summary>设置 Transform.Translate(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TranslateSingleSingleSingleSpace">
            <summary>设置 Transform.Translate(Single x, Single y, Single z, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TranslateSingleSingleSingleTransform">
            <summary>设置 Transform.Translate(Single x, Single y, Single z, Transform relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TranslateVector3">
            <summary>设置 Transform.Translate(Vector3 translation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TranslateVector3Space">
            <summary>设置 Transform.Translate(Vector3 translation, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.TranslateVector3Transform">
            <summary>设置 Transform.Translate(Vector3 translation, Transform relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.eulerAnglesGet">
            <summary>设置 Transform.get_eulerAngles() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.eulerAnglesSetVector3">
            <summary>设置 Transform.set_eulerAngles(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.forwardGet">
            <summary>设置 Transform.get_forward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.forwardSetVector3">
            <summary>设置 Transform.set_forward(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localEulerAnglesGet">
            <summary>设置 Transform.get_localEulerAngles() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localEulerAnglesSetVector3">
            <summary>设置 Transform.set_localEulerAngles(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localPositionGet">
            <summary>设置 Transform.get_localPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localPositionSetVector3">
            <summary>设置 Transform.set_localPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localRotationGet">
            <summary>设置 Transform.get_localRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localRotationSetQuaternion">
            <summary>设置 Transform.set_localRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localScaleGet">
            <summary>设置 Transform.get_localScale() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localScaleSetVector3">
            <summary>设置 Transform.set_localScale(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.localToWorldMatrixGet">
            <summary>设置 Transform.get_localToWorldMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.lossyScaleGet">
            <summary>设置 Transform.get_lossyScale() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.positionGet">
            <summary>设置 Transform.get_position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.positionSetVector3">
            <summary>设置 Transform.set_position(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.rightGet">
            <summary>设置 Transform.get_right() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.rightSetVector3">
            <summary>设置 Transform.set_right(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.rotationGet">
            <summary>设置 Transform.get_rotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.rotationSetQuaternion">
            <summary>设置 Transform.set_rotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.upGet">
            <summary>设置 Transform.get_up() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.upSetVector3">
            <summary>设置 Transform.set_up(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.AllInstances.worldToLocalMatrixGet">
            <summary>设置 Transform.get_worldToLocalMatrix() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTransform.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTransform.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTransform.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.Constructor">
            <summary>设置 Transform.Transform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.FindChildString">
            <summary>设置 Transform.FindChild(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.GetEnumerator">
            <summary>设置 Transform.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.InverseTransformDirectionSingleSingleSingle">
            <summary>设置 Transform.InverseTransformDirection(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.InverseTransformDirectionVector3">
            <summary>设置 Transform.InverseTransformDirection(Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.InverseTransformPointSingleSingleSingle">
            <summary>设置 Transform.InverseTransformPoint(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.InverseTransformPointVector3">
            <summary>设置 Transform.InverseTransformPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.LookAtTransform">
            <summary>设置 Transform.LookAt(Transform target) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.LookAtTransformVector3">
            <summary>设置 Transform.LookAt(Transform target, Vector3 worldUp) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.LookAtVector3">
            <summary>设置 Transform.LookAt(Vector3 worldPosition) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.LookAtVector3Vector3">
            <summary>设置 Transform.LookAt(Vector3 worldPosition, Vector3 worldUp) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateAroundInternalVector3Single">
            <summary>设置 Transform.RotateAroundInternal(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateAroundLocalVector3Single">
            <summary>设置 Transform.RotateAroundLocal(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateAroundVector3Single">
            <summary>设置 Transform.RotateAround(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateAroundVector3Vector3Single">
            <summary>设置 Transform.RotateAround(Vector3 point, Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateSingleSingleSingle">
            <summary>设置 Transform.Rotate(Single xAngle, Single yAngle, Single zAngle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateSingleSingleSingleSpace">
            <summary>设置 Transform.Rotate(Single xAngle, Single yAngle, Single zAngle, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateVector3">
            <summary>设置 Transform.Rotate(Vector3 eulerAngles) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateVector3Single">
            <summary>设置 Transform.Rotate(Vector3 axis, Single angle) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateVector3SingleSpace">
            <summary>设置 Transform.Rotate(Vector3 axis, Single angle, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.RotateVector3Space">
            <summary>设置 Transform.Rotate(Vector3 eulerAngles, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TransformDirectionSingleSingleSingle">
            <summary>设置 Transform.TransformDirection(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TransformDirectionVector3">
            <summary>设置 Transform.TransformDirection(Vector3 direction) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TransformPointSingleSingleSingle">
            <summary>设置 Transform.TransformPoint(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TransformPointVector3">
            <summary>设置 Transform.TransformPoint(Vector3 position) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TranslateSingleSingleSingle">
            <summary>设置 Transform.Translate(Single x, Single y, Single z) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TranslateSingleSingleSingleSpace">
            <summary>设置 Transform.Translate(Single x, Single y, Single z, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TranslateSingleSingleSingleTransform">
            <summary>设置 Transform.Translate(Single x, Single y, Single z, Transform relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TranslateVector3">
            <summary>设置 Transform.Translate(Vector3 translation) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TranslateVector3Space">
            <summary>设置 Transform.Translate(Vector3 translation, Space relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.TranslateVector3Transform">
            <summary>设置 Transform.Translate(Vector3 translation, Transform relativeTo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.eulerAnglesGet">
            <summary>设置 Transform.get_eulerAngles() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.eulerAnglesSetVector3">
            <summary>设置 Transform.set_eulerAngles(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.forwardGet">
            <summary>设置 Transform.get_forward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.forwardSetVector3">
            <summary>设置 Transform.set_forward(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localEulerAnglesGet">
            <summary>设置 Transform.get_localEulerAngles() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localEulerAnglesSetVector3">
            <summary>设置 Transform.set_localEulerAngles(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localPositionGet">
            <summary>设置 Transform.get_localPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localPositionSetVector3">
            <summary>设置 Transform.set_localPosition(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localRotationGet">
            <summary>设置 Transform.get_localRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localRotationSetQuaternion">
            <summary>设置 Transform.set_localRotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localScaleGet">
            <summary>设置 Transform.get_localScale() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localScaleSetVector3">
            <summary>设置 Transform.set_localScale(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.localToWorldMatrixGet">
            <summary>设置 Transform.get_localToWorldMatrix() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.lossyScaleGet">
            <summary>设置 Transform.get_lossyScale() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.positionGet">
            <summary>设置 Transform.get_position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.positionSetVector3">
            <summary>设置 Transform.set_position(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.rightGet">
            <summary>设置 Transform.get_right() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.rightSetVector3">
            <summary>设置 Transform.set_right(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.rotationGet">
            <summary>设置 Transform.get_rotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.rotationSetQuaternion">
            <summary>设置 Transform.set_rotation(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.upGet">
            <summary>设置 Transform.get_up() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.upSetVector3">
            <summary>设置 Transform.set_up(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTransform.worldToLocalMatrixGet">
            <summary>设置 Transform.get_worldToLocalMatrix() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTree">
            <summary>UnityEngine.Tree 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTree.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTree.#ctor(UnityEngine.Tree)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTree.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTree.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTree.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTree.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTree.Constructor">
            <summary>设置 Tree.Tree() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTreeInstance">
            <summary>UnityEngine.TreeInstance 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTreeInstance.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTreeInstance.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTreeInstance.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTreeInstance.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreeInstance.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTreePrototype">
            <summary>UnityEngine.TreePrototype 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTreePrototype.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTreePrototype.#ctor(UnityEngine.TreePrototype)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTreePrototype.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.AllInstances.bendFactorGet">
            <summary>设置 TreePrototype.get_bendFactor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.AllInstances.bendFactorSetSingle">
            <summary>设置 TreePrototype.set_bendFactor(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.AllInstances.prefabGet">
            <summary>设置 TreePrototype.get_prefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.AllInstances.prefabSetGameObject">
            <summary>设置 TreePrototype.set_prefab(GameObject value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTreePrototype.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTreePrototype.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.Constructor">
            <summary>设置 TreePrototype.TreePrototype() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.bendFactorGet">
            <summary>设置 TreePrototype.get_bendFactor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.bendFactorSetSingle">
            <summary>设置 TreePrototype.set_bendFactor(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.prefabGet">
            <summary>设置 TreePrototype.get_prefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTreePrototype.prefabSetGameObject">
            <summary>设置 TreePrototype.set_prefab(GameObject value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimTypes">
            <summary>UnityEngine.Types 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTypes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTypes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimTypes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTypes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimTypes.GetTypeStringString">
            <summary>设置 Types.GetType(String typeName, String assemblyName) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimUnassignedReferenceException">
            <summary>UnityEngine.UnassignedReferenceException 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnassignedReferenceException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnassignedReferenceException.#ctor(UnityEngine.UnassignedReferenceException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimUnassignedReferenceException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnassignedReferenceException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnassignedReferenceException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnassignedReferenceException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnassignedReferenceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnassignedReferenceException.Constructor">
            <summary>设置 UnassignedReferenceException.UnassignedReferenceException() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnassignedReferenceException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 UnassignedReferenceException.UnassignedReferenceException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnassignedReferenceException.ConstructorString">
            <summary>设置 UnassignedReferenceException.UnassignedReferenceException(String message) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnassignedReferenceException.ConstructorStringException">
            <summary>设置 UnassignedReferenceException.UnassignedReferenceException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimUnityException">
            <summary>UnityEngine.UnityException 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnityException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnityException.#ctor(UnityEngine.UnityException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimUnityException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnityException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnityException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnityException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimUnityException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnityException.Constructor">
            <summary>设置 UnityException.UnityException() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnityException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 UnityException.UnityException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnityException.ConstructorString">
            <summary>设置 UnityException.UnityException(String message) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimUnityException.ConstructorStringException">
            <summary>设置 UnityException.UnityException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimVector2">
            <summary>UnityEngine.Vector2 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.AdditionOpVector2Vector2">
            <summary>设置 Vector2.op_Addition(Vector2 a, Vector2 b) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimVector2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.AngleVector2Vector2">
            <summary>设置 Vector2.Angle(Vector2 from, Vector2 to) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.ClampMagnitudeVector2Single">
            <summary>设置 Vector2.ClampMagnitude(Vector2 vector, Single maxLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.DistanceVector2Vector2">
            <summary>设置 Vector2.Distance(Vector2 a, Vector2 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.DivisionOpVector2Single">
            <summary>设置 Vector2.op_Division(Vector2 a, Single d) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.DotVector2Vector2">
            <summary>设置 Vector2.Dot(Vector2 lhs, Vector2 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.EqualityOpVector2Vector2">
            <summary>设置 Vector2.op_Equality(Vector2 lhs, Vector2 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.ImplicitOpVector2Vector3">
            <summary>设置 Vector2.op_Implicit(Vector2 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.ImplicitOpVector3Vector2">
            <summary>设置 Vector2.op_Implicit(Vector3 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.InequalityOpVector2Vector2">
            <summary>设置 Vector2.op_Inequality(Vector2 lhs, Vector2 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.LerpVector2Vector2Single">
            <summary>设置 Vector2.Lerp(Vector2 from, Vector2 to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.MaxVector2Vector2">
            <summary>设置 Vector2.Max(Vector2 lhs, Vector2 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.MinVector2Vector2">
            <summary>设置 Vector2.Min(Vector2 lhs, Vector2 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.MoveTowardsVector2Vector2Single">
            <summary>设置 Vector2.MoveTowards(Vector2 current, Vector2 target, Single maxDistanceDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.MultiplyOpSingleVector2">
            <summary>设置 Vector2.op_Multiply(Single d, Vector2 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.MultiplyOpVector2Single">
            <summary>设置 Vector2.op_Multiply(Vector2 a, Single d) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.ScaleVector2Vector2">
            <summary>设置 Vector2.Scale(Vector2 a, Vector2 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.SqrMagnitudeVector2">
            <summary>设置 Vector2.SqrMagnitude(Vector2 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.SubtractionOpVector2Vector2">
            <summary>设置 Vector2.op_Subtraction(Vector2 a, Vector2 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.UnaryNegationOpVector2">
            <summary>设置 Vector2.op_UnaryNegation(Vector2 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.oneGet">
            <summary>设置 Vector2.get_one() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.rightGet">
            <summary>设置 Vector2.get_right() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.upGet">
            <summary>设置 Vector2.get_up() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector2.zeroGet">
            <summary>设置 Vector2.get_zero() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimVector3">
            <summary>UnityEngine.Vector3 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector3.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.AdditionOpVector3Vector3">
            <summary>设置 Vector3.op_Addition(Vector3 a, Vector3 b) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimVector3.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.AngleBetweenVector3Vector3">
            <summary>设置 Vector3.AngleBetween(Vector3 from, Vector3 to) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.AngleVector3Vector3">
            <summary>设置 Vector3.Angle(Vector3 from, Vector3 to) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector3.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector3.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.ClampMagnitudeVector3Single">
            <summary>设置 Vector3.ClampMagnitude(Vector3 vector, Single maxLength) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.CrossVector3Vector3">
            <summary>设置 Vector3.Cross(Vector3 lhs, Vector3 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.DistanceVector3Vector3">
            <summary>设置 Vector3.Distance(Vector3 a, Vector3 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.DivisionOpVector3Single">
            <summary>设置 Vector3.op_Division(Vector3 a, Single d) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.DotVector3Vector3">
            <summary>设置 Vector3.Dot(Vector3 lhs, Vector3 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.EqualityOpVector3Vector3">
            <summary>设置 Vector3.op_Equality(Vector3 lhs, Vector3 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.ExcludeVector3Vector3">
            <summary>设置 Vector3.Exclude(Vector3 excludeThis, Vector3 fromThat) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.InequalityOpVector3Vector3">
            <summary>设置 Vector3.op_Inequality(Vector3 lhs, Vector3 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.Internal_OrthoNormalize2Vector3RefVector3Ref">
            <summary>设置 Vector3.Internal_OrthoNormalize2(Vector3&amp; a, Vector3&amp; b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.Internal_OrthoNormalize3Vector3RefVector3RefVector3Ref">
            <summary>设置 Vector3.Internal_OrthoNormalize3(Vector3&amp; a, Vector3&amp; b, Vector3&amp; c) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.LerpVector3Vector3Single">
            <summary>设置 Vector3.Lerp(Vector3 from, Vector3 to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.MagnitudeVector3">
            <summary>设置 Vector3.Magnitude(Vector3 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.MaxVector3Vector3">
            <summary>设置 Vector3.Max(Vector3 lhs, Vector3 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.MinVector3Vector3">
            <summary>设置 Vector3.Min(Vector3 lhs, Vector3 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.MoveTowardsVector3Vector3Single">
            <summary>设置 Vector3.MoveTowards(Vector3 current, Vector3 target, Single maxDistanceDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.MultiplyOpSingleVector3">
            <summary>设置 Vector3.op_Multiply(Single d, Vector3 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.MultiplyOpVector3Single">
            <summary>设置 Vector3.op_Multiply(Vector3 a, Single d) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.NormalizeVector3">
            <summary>设置 Vector3.Normalize(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.OrthoNormalizeVector3RefVector3Ref">
            <summary>设置 Vector3.OrthoNormalize(Vector3&amp; normal, Vector3&amp; tangent) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.OrthoNormalizeVector3RefVector3RefVector3Ref">
            <summary>设置 Vector3.OrthoNormalize(Vector3&amp; normal, Vector3&amp; tangent, Vector3&amp; binormal) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.ProjectVector3Vector3">
            <summary>设置 Vector3.Project(Vector3 vector, Vector3 onNormal) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.ReflectVector3Vector3">
            <summary>设置 Vector3.Reflect(Vector3 inDirection, Vector3 inNormal) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.RotateTowardsVector3Vector3SingleSingle">
            <summary>设置 Vector3.RotateTowards(Vector3 current, Vector3 target, Single maxRadiansDelta, Single maxMagnitudeDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.ScaleVector3Vector3">
            <summary>设置 Vector3.Scale(Vector3 a, Vector3 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.SlerpVector3Vector3Single">
            <summary>设置 Vector3.Slerp(Vector3 from, Vector3 to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.SmoothDampVector3Vector3Vector3RefSingle">
            <summary>设置 Vector3.SmoothDamp(Vector3 current, Vector3 target, Vector3&amp; currentVelocity, Single smoothTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.SmoothDampVector3Vector3Vector3RefSingleSingle">
            <summary>设置 Vector3.SmoothDamp(Vector3 current, Vector3 target, Vector3&amp; currentVelocity, Single smoothTime, Single maxSpeed) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.SmoothDampVector3Vector3Vector3RefSingleSingleSingle">
            <summary>设置 Vector3.SmoothDamp(Vector3 current, Vector3 target, Vector3&amp; currentVelocity, Single smoothTime, Single maxSpeed, Single deltaTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.SqrMagnitudeVector3">
            <summary>设置 Vector3.SqrMagnitude(Vector3 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.SubtractionOpVector3Vector3">
            <summary>设置 Vector3.op_Subtraction(Vector3 a, Vector3 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.UnaryNegationOpVector3">
            <summary>设置 Vector3.op_UnaryNegation(Vector3 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.backGet">
            <summary>设置 Vector3.get_back() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.downGet">
            <summary>设置 Vector3.get_down() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.forwardGet">
            <summary>设置 Vector3.get_forward() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.fwdGet">
            <summary>设置 Vector3.get_fwd() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.leftGet">
            <summary>设置 Vector3.get_left() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.oneGet">
            <summary>设置 Vector3.get_one() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.rightGet">
            <summary>设置 Vector3.get_right() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.upGet">
            <summary>设置 Vector3.get_up() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector3.zeroGet">
            <summary>设置 Vector3.get_zero() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimVector4">
            <summary>UnityEngine.Vector4 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector4.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.AdditionOpVector4Vector4">
            <summary>设置 Vector4.op_Addition(Vector4 a, Vector4 b) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimVector4.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector4.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimVector4.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.DistanceVector4Vector4">
            <summary>设置 Vector4.Distance(Vector4 a, Vector4 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.DivisionOpVector4Single">
            <summary>设置 Vector4.op_Division(Vector4 a, Single d) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.DotVector4Vector4">
            <summary>设置 Vector4.Dot(Vector4 a, Vector4 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.EqualityOpVector4Vector4">
            <summary>设置 Vector4.op_Equality(Vector4 lhs, Vector4 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.ImplicitOpVector2Vector4">
            <summary>设置 Vector4.op_Implicit(Vector2 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.ImplicitOpVector3Vector4">
            <summary>设置 Vector4.op_Implicit(Vector3 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.ImplicitOpVector4Vector2">
            <summary>设置 Vector4.op_Implicit(Vector4 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.ImplicitOpVector4Vector3">
            <summary>设置 Vector4.op_Implicit(Vector4 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.InequalityOpVector4Vector4">
            <summary>设置 Vector4.op_Inequality(Vector4 lhs, Vector4 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.LerpVector4Vector4Single">
            <summary>设置 Vector4.Lerp(Vector4 from, Vector4 to, Single t) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.MagnitudeVector4">
            <summary>设置 Vector4.Magnitude(Vector4 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.MaxVector4Vector4">
            <summary>设置 Vector4.Max(Vector4 lhs, Vector4 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.MinVector4Vector4">
            <summary>设置 Vector4.Min(Vector4 lhs, Vector4 rhs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.MoveTowardsVector4Vector4Single">
            <summary>设置 Vector4.MoveTowards(Vector4 current, Vector4 target, Single maxDistanceDelta) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.MultiplyOpSingleVector4">
            <summary>设置 Vector4.op_Multiply(Single d, Vector4 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.MultiplyOpVector4Single">
            <summary>设置 Vector4.op_Multiply(Vector4 a, Single d) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.NormalizeVector4">
            <summary>设置 Vector4.Normalize(Vector4 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.ProjectVector4Vector4">
            <summary>设置 Vector4.Project(Vector4 a, Vector4 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.ScaleVector4Vector4">
            <summary>设置 Vector4.Scale(Vector4 a, Vector4 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.SqrMagnitudeVector4">
            <summary>设置 Vector4.SqrMagnitude(Vector4 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.SubtractionOpVector4Vector4">
            <summary>设置 Vector4.op_Subtraction(Vector4 a, Vector4 b) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.UnaryNegationOpVector4">
            <summary>设置 Vector4.op_UnaryNegation(Vector4 a) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.oneGet">
            <summary>设置 Vector4.get_one() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimVector4.zeroGet">
            <summary>设置 Vector4.get_zero() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWWW">
            <summary>UnityEngine.WWW 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWW.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWW.#ctor(UnityEngine.WWW)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWWW.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.Dispose">
            <summary>设置 WWW.Dispose() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.GetAudioClipBoolean">
            <summary>设置 WWW.GetAudioClip(Boolean threeD) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.GetAudioClipBooleanBoolean">
            <summary>设置 WWW.GetAudioClip(Boolean threeD, Boolean stream) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.audioClipGet">
            <summary>设置 WWW.get_audioClip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.dataGet">
            <summary>设置 WWW.get_data() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.responseHeadersGet">
            <summary>设置 WWW.get_responseHeaders() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.textGet">
            <summary>设置 WWW.get_text() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.textureGet">
            <summary>设置 WWW.get_texture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.AllInstances.textureNonReadableGet">
            <summary>设置 WWW.get_textureNonReadable() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWW.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWW.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWW.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.CheckSecurityOnHeadersStringArray">
            <summary>设置 WWW.CheckSecurityOnHeaders(String[] headers) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.ConstructorString">
            <summary>设置 WWW.WWW(String url) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.ConstructorStringByteArray">
            <summary>设置 WWW.WWW(String url, Byte[] postData) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.ConstructorStringByteArrayHashtable">
            <summary>设置 WWW.WWW(String url, Byte[] postData, Hashtable headers) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.ConstructorStringWWWForm">
            <summary>设置 WWW.WWW(String url, WWWForm form) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.Dispose">
            <summary>设置 WWW.Dispose() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.EscapeURLString">
            <summary>设置 WWW.EscapeURL(String s) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.FlattenedHeadersFromHashtable">
            <summary>设置 WWW.FlattenedHeadersFrom(Hashtable headers) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.GetAudioClipBoolean">
            <summary>设置 WWW.GetAudioClip(Boolean threeD) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.GetAudioClipBooleanBoolean">
            <summary>设置 WWW.GetAudioClip(Boolean threeD, Boolean stream) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.GetTextureFromURLString">
            <summary>设置 WWW.GetTextureFromURL(String url) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.LoadFromCacheOrDownloadStringInt32">
            <summary>设置 WWW.LoadFromCacheOrDownload(String url, Int32 version) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.LoadFromCacheOrDownloadStringInt32UInt32">
            <summary>设置 WWW.LoadFromCacheOrDownload(String url, Int32 version, UInt32 crc) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.ParseHTTPHeaderStringString">
            <summary>设置 WWW.ParseHTTPHeaderString(String input) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.StaticConstructor">
            <summary>设置 WWW.WWW() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.UnEscapeURLString">
            <summary>设置 WWW.UnEscapeURL(String s) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.audioClipGet">
            <summary>设置 WWW.get_audioClip() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.dataGet">
            <summary>设置 WWW.get_data() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.responseHeadersGet">
            <summary>设置 WWW.get_responseHeaders() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.textGet">
            <summary>设置 WWW.get_text() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.textureGet">
            <summary>设置 WWW.get_texture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWW.textureNonReadableGet">
            <summary>设置 WWW.get_textureNonReadable() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWWWForm">
            <summary>UnityEngine.WWWForm 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWWForm.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWWForm.#ctor(UnityEngine.WWWForm)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AddBinaryDataStringByteArray">
            <summary>设置 WWWForm.AddBinaryData(String fieldName, Byte[] contents) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AddBinaryDataStringByteArrayString">
            <summary>设置 WWWForm.AddBinaryData(String fieldName, Byte[] contents, String fileName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AddBinaryDataStringByteArrayStringString">
            <summary>设置 WWWForm.AddBinaryData(String fieldName, Byte[] contents, String fileName, String mimeType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AddFieldStringInt32">
            <summary>设置 WWWForm.AddField(String fieldName, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AddFieldStringString">
            <summary>设置 WWWForm.AddField(String fieldName, String value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWWWForm.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AllInstances.AddBinaryDataStringByteArray">
            <summary>设置 WWWForm.AddBinaryData(String fieldName, Byte[] contents) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AllInstances.AddBinaryDataStringByteArrayString">
            <summary>设置 WWWForm.AddBinaryData(String fieldName, Byte[] contents, String fileName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AllInstances.AddBinaryDataStringByteArrayStringString">
            <summary>设置 WWWForm.AddBinaryData(String fieldName, Byte[] contents, String fileName, String mimeType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AllInstances.AddFieldStringInt32">
            <summary>设置 WWWForm.AddField(String fieldName, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AllInstances.AddFieldStringString">
            <summary>设置 WWWForm.AddField(String fieldName, String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AllInstances.dataGet">
            <summary>设置 WWWForm.get_data() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.AllInstances.headersGet">
            <summary>设置 WWWForm.get_headers() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWWForm.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWWWForm.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.Constructor">
            <summary>设置 WWWForm.WWWForm() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.dataGet">
            <summary>设置 WWWForm.get_data() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWWWForm.headersGet">
            <summary>设置 WWWForm.get_headers() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWaitForEndOfFrame">
            <summary>UnityEngine.WaitForEndOfFrame 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForEndOfFrame.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForEndOfFrame.#ctor(UnityEngine.WaitForEndOfFrame)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWaitForEndOfFrame.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForEndOfFrame.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForEndOfFrame.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWaitForEndOfFrame.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWaitForEndOfFrame.Constructor">
            <summary>设置 WaitForEndOfFrame.WaitForEndOfFrame() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWaitForFixedUpdate">
            <summary>UnityEngine.WaitForFixedUpdate 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForFixedUpdate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForFixedUpdate.#ctor(UnityEngine.WaitForFixedUpdate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWaitForFixedUpdate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForFixedUpdate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForFixedUpdate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWaitForFixedUpdate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWaitForFixedUpdate.Constructor">
            <summary>设置 WaitForFixedUpdate.WaitForFixedUpdate() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWaitForSeconds">
            <summary>UnityEngine.WaitForSeconds 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForSeconds.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForSeconds.#ctor(UnityEngine.WaitForSeconds)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWaitForSeconds.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForSeconds.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWaitForSeconds.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWaitForSeconds.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWaitForSeconds.ConstructorSingle">
            <summary>设置 WaitForSeconds.WaitForSeconds(Single seconds) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWebCamDevice">
            <summary>UnityEngine.WebCamDevice 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWebCamDevice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWebCamDevice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWebCamDevice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWebCamDevice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamDevice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWebCamTexture">
            <summary>UnityEngine.WebCamTexture 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWebCamTexture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWebCamTexture.#ctor(UnityEngine.WebCamTexture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWebCamTexture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.AllInstances.GetPixels">
            <summary>设置 WebCamTexture.GetPixels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.AllInstances.GetPixels32">
            <summary>设置 WebCamTexture.GetPixels32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.AllInstances.Pause">
            <summary>设置 WebCamTexture.Pause() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.AllInstances.Play">
            <summary>设置 WebCamTexture.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.AllInstances.Stop">
            <summary>设置 WebCamTexture.Stop() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWebCamTexture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWebCamTexture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.Constructor">
            <summary>设置 WebCamTexture.WebCamTexture() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.ConstructorInt32Int32">
            <summary>设置 WebCamTexture.WebCamTexture(Int32 requestedWidth, Int32 requestedHeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.ConstructorInt32Int32Int32">
            <summary>设置 WebCamTexture.WebCamTexture(Int32 requestedWidth, Int32 requestedHeight, Int32 requestedFPS) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.ConstructorString">
            <summary>设置 WebCamTexture.WebCamTexture(String deviceName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.ConstructorStringInt32Int32">
            <summary>设置 WebCamTexture.WebCamTexture(String deviceName, Int32 requestedWidth, Int32 requestedHeight) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.ConstructorStringInt32Int32Int32">
            <summary>设置 WebCamTexture.WebCamTexture(String deviceName, Int32 requestedWidth, Int32 requestedHeight, Int32 requestedFPS) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.GetPixels">
            <summary>设置 WebCamTexture.GetPixels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.GetPixels32">
            <summary>设置 WebCamTexture.GetPixels32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.Pause">
            <summary>设置 WebCamTexture.Pause() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.Play">
            <summary>设置 WebCamTexture.Play() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWebCamTexture.Stop">
            <summary>设置 WebCamTexture.Stop() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWheelCollider">
            <summary>UnityEngine.WheelCollider 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelCollider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelCollider.#ctor(UnityEngine.WheelCollider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWheelCollider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.AllInstances.centerGet">
            <summary>设置 WheelCollider.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.AllInstances.centerSetVector3">
            <summary>设置 WheelCollider.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.AllInstances.forwardFrictionGet">
            <summary>设置 WheelCollider.get_forwardFriction() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.AllInstances.forwardFrictionSetWheelFrictionCurve">
            <summary>设置 WheelCollider.set_forwardFriction(WheelFrictionCurve value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.AllInstances.sidewaysFrictionGet">
            <summary>设置 WheelCollider.get_sidewaysFriction() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.AllInstances.sidewaysFrictionSetWheelFrictionCurve">
            <summary>设置 WheelCollider.set_sidewaysFriction(WheelFrictionCurve value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.AllInstances.suspensionSpringGet">
            <summary>设置 WheelCollider.get_suspensionSpring() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.AllInstances.suspensionSpringSetJointSpring">
            <summary>设置 WheelCollider.set_suspensionSpring(JointSpring value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelCollider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelCollider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.Constructor">
            <summary>设置 WheelCollider.WheelCollider() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.centerGet">
            <summary>设置 WheelCollider.get_center() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.centerSetVector3">
            <summary>设置 WheelCollider.set_center(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.forwardFrictionGet">
            <summary>设置 WheelCollider.get_forwardFriction() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.forwardFrictionSetWheelFrictionCurve">
            <summary>设置 WheelCollider.set_forwardFriction(WheelFrictionCurve value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.sidewaysFrictionGet">
            <summary>设置 WheelCollider.get_sidewaysFriction() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.sidewaysFrictionSetWheelFrictionCurve">
            <summary>设置 WheelCollider.set_sidewaysFriction(WheelFrictionCurve value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.suspensionSpringGet">
            <summary>设置 WheelCollider.get_suspensionSpring() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelCollider.suspensionSpringSetJointSpring">
            <summary>设置 WheelCollider.set_suspensionSpring(JointSpring value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWheelFrictionCurve">
            <summary>UnityEngine.WheelFrictionCurve 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelFrictionCurve.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWheelFrictionCurve.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelFrictionCurve.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelFrictionCurve.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelFrictionCurve.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWheelHit">
            <summary>UnityEngine.WheelHit 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelHit.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimWheelHit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelHit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimWheelHit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimWheelHit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimYieldInstruction">
            <summary>UnityEngine.YieldInstruction 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimYieldInstruction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimYieldInstruction.#ctor(UnityEngine.YieldInstruction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimYieldInstruction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimYieldInstruction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimYieldInstruction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimYieldInstruction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimYieldInstruction.Constructor">
            <summary>设置 YieldInstruction.YieldInstruction() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhone">
            <summary>UnityEngine.iPhone 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.#ctor(UnityEngine.iPhone)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhone.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.Constructor">
            <summary>设置 iPhone.iPhone() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhone.ShimNSError">
            <summary>UnityEngine.iPhone+NSError 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.ShimNSError.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.ShimNSError.#ctor(UnityEngine.iPhone.NSError)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhone.ShimNSError.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.AllInstances.codeGet">
            <summary>设置 NSError.get_code() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.AllInstances.descriptionGet">
            <summary>设置 NSError.get_description() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.AllInstances.reasonGet">
            <summary>设置 NSError.get_reason() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.ShimNSError.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.ShimNSError.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.ConstructorIntPtr">
            <summary>设置 NSError.NSError(IntPtr nativeError) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.CreateNSErrorIntPtr">
            <summary>设置 NSError.CreateNSError(IntPtr nativeError) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.codeGet">
            <summary>设置 NSError.get_code() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.descriptionGet">
            <summary>设置 NSError.get_description() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSError.reasonGet">
            <summary>设置 NSError.get_reason() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhone.ShimNSNotification">
            <summary>UnityEngine.iPhone+NSNotification 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.#ctor(UnityEngine.iPhone.NSNotification)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.AllInstances.nameGet">
            <summary>设置 NSNotification.get_name() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.ConstructorIntPtr">
            <summary>设置 NSNotification.NSNotification(IntPtr nativeNotification) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.CreateNSNotificationIntPtr">
            <summary>设置 NSNotification.CreateNSNotification(IntPtr nativeNotification) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhone.ShimNSNotification.nameGet">
            <summary>设置 NSNotification.get_name() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhoneInput">
            <summary>UnityEngine.iPhoneInput 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneInput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneInput.#ctor(UnityEngine.iPhoneInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhoneInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneInput.Constructor">
            <summary>设置 iPhoneInput.iPhoneInput() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneInput.accelerationEventsGet">
            <summary>设置 iPhoneInput.get_accelerationEvents() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneInput.touchesGet">
            <summary>设置 iPhoneInput.get_touches() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhoneSettings">
            <summary>UnityEngine.iPhoneSettings 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneSettings.#ctor(UnityEngine.iPhoneSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhoneSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneSettings.Constructor">
            <summary>设置 iPhoneSettings.iPhoneSettings() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneSettings.StartLocationServiceUpdates">
            <summary>设置 iPhoneSettings.StartLocationServiceUpdates() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneSettings.StartLocationServiceUpdatesSingle">
            <summary>设置 iPhoneSettings.StartLocationServiceUpdates(Single desiredAccuracyInMeters) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhoneUtils">
            <summary>UnityEngine.iPhoneUtils 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneUtils.#ctor(UnityEngine.iPhoneUtils)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.ShimiPhoneUtils.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.ShimiPhoneUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.Constructor">
            <summary>设置 iPhoneUtils.iPhoneUtils() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.PlayMovieStringColor">
            <summary>设置 iPhoneUtils.PlayMovie(String path, Color bgColor) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.PlayMovieStringColorInt32Int32">
            <summary>设置 iPhoneUtils.PlayMovie(String path, Color bgColor, Int32 controlMode, Int32 scalingMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.PlayMovieStringColoriPhoneMovieControlMode">
            <summary>设置 iPhoneUtils.PlayMovie(String path, Color bgColor, iPhoneMovieControlMode controlMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.PlayMovieStringColoriPhoneMovieControlModeiPhoneMovieScalingMode">
            <summary>设置 iPhoneUtils.PlayMovie(String path, Color bgColor, iPhoneMovieControlMode controlMode, iPhoneMovieScalingMode scalingMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.PlayMovieURLStringColor">
            <summary>设置 iPhoneUtils.PlayMovieURL(String url, Color bgColor) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.PlayMovieURLStringColorInt32Int32">
            <summary>设置 iPhoneUtils.PlayMovieURL(String url, Color bgColor, Int32 controlMode, Int32 scalingMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.PlayMovieURLStringColoriPhoneMovieControlMode">
            <summary>设置 iPhoneUtils.PlayMovieURL(String url, Color bgColor, iPhoneMovieControlMode controlMode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Fakes.ShimiPhoneUtils.PlayMovieURLStringColoriPhoneMovieControlModeiPhoneMovieScalingMode">
            <summary>设置 iPhoneUtils.PlayMovieURL(String url, Color bgColor, iPhoneMovieControlMode controlMode, iPhoneMovieScalingMode scalingMode) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Fakes.Shimjvalue">
            <summary>UnityEngine.jvalue 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.Shimjvalue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Fakes.Shimjvalue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Fakes.Shimjvalue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.Shimjvalue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.Shimjvalue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubAndroidJavaClass">
            <summary>UnityEngine.AndroidJavaClass 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaClass.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaClass.Dispose(System.Boolean)">
            <summary>设置 AndroidJavaObject.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubAndroidJavaClass.DisposeBoolean">
            <summary>设置 AndroidJavaObject.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaClass.InitializeStub">
            <summary>初始化 type StubAndroidJavaClass 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubAndroidJavaObject">
            <summary>UnityEngine.AndroidJavaObject 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaObject.#ctor(System.String,System.Object[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaObject.Dispose(System.Boolean)">
            <summary>设置 AndroidJavaObject.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubAndroidJavaObject.DisposeBoolean">
            <summary>设置 AndroidJavaObject.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaObject.InitializeStub">
            <summary>初始化 type StubAndroidJavaObject 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubAndroidJavaProxy">
            <summary>UnityEngine.AndroidJavaProxy 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaProxy.#ctor(UnityEngine.AndroidJavaClass)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaProxy.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaProxy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaProxy.InitializeStub">
            <summary>初始化 type StubAndroidJavaProxy 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaProxy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAndroidJavaProxy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaProxy.Invoke(System.String,UnityEngine.AndroidJavaObject[])">
            <summary>设置 AndroidJavaProxy.Invoke(String methodName, AndroidJavaObject[] javaArgs) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAndroidJavaProxy.Invoke(System.String,System.Object[])">
            <summary>设置 AndroidJavaProxy.Invoke(String methodName, Object[] args) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubAndroidJavaProxy.InvokeStringAndroidJavaObjectArray">
            <summary>设置 AndroidJavaProxy.Invoke(String methodName, AndroidJavaObject[] javaArgs) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubAndroidJavaProxy.InvokeStringObjectArray">
            <summary>设置 AndroidJavaProxy.Invoke(String methodName, Object[] args) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubAsyncOperation">
            <summary>UnityEngine.AsyncOperation 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAsyncOperation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAsyncOperation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubAsyncOperation.InitializeStub">
            <summary>初始化 type StubAsyncOperation 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAsyncOperation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubAsyncOperation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubBehaviour">
            <summary>UnityEngine.Behaviour 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubBehaviour.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubBehaviour.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubBehaviour.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubBehaviour.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubBehaviour.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubBehaviour.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubBehaviour.InitializeStub">
            <summary>初始化 type StubBehaviour 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubBehaviour.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubBehaviour.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubBehaviour.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubBehaviour.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubCloth">
            <summary>UnityEngine.Cloth 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCloth.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCloth.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCloth.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCloth.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCloth.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCloth.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCloth.InitializeStub">
            <summary>初始化 type StubCloth 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCloth.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCloth.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCloth.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCloth.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubCollider">
            <summary>UnityEngine.Collider 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCollider.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCollider.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider.InitializeStub">
            <summary>初始化 type StubCollider 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCollider.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubCollider2D">
            <summary>UnityEngine.Collider2D 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider2D.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollider2D.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider2D.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCollider2D.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider2D.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCollider2D.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider2D.InitializeStub">
            <summary>初始化 type StubCollider2D 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollider2D.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollider2D.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollider2D.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCollider2D.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubCollision">
            <summary>UnityEngine.Collision 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollision.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollision.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollision.GetEnumerator">
            <summary>设置 Collision.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubCollision.GetEnumerator01">
            <summary>设置 Collision.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollision.InitializeStub">
            <summary>初始化 type StubCollision 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollision.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollision.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubCollision2D">
            <summary>UnityEngine.Collision2D 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollision2D.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollision2D.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubCollision2D.InitializeStub">
            <summary>初始化 type StubCollision2D 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollision2D.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubCollision2D.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubComponent">
            <summary>UnityEngine.Component 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubComponent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubComponent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubComponent.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubComponent.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubComponent.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubComponent.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubComponent.InitializeStub">
            <summary>初始化 type StubComponent 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubComponent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubComponent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubComponent.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubComponent.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubConstructorSafeAttribute">
            <summary>UnityEngine.ConstructorSafeAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubConstructorSafeAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubConstructorSafeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubConstructorSafeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubConstructorSafeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubConstructorSafeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubConstructorSafeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubConstructorSafeAttribute.InitializeStub">
            <summary>初始化 type StubConstructorSafeAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubConstructorSafeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubConstructorSafeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubConstructorSafeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubConstructorSafeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubConstructorSafeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubConstructorSafeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubConstructorSafeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubConstructorSafeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubGUI">
            <summary>UnityEngine.GUI 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUI.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUI.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUI.InitializeStub">
            <summary>初始化 type StubGUI 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUI.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUI.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubGUIElement">
            <summary>UnityEngine.GUIElement 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUIElement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUIElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUIElement.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubGUIElement.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUIElement.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubGUIElement.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUIElement.InitializeStub">
            <summary>初始化 type StubGUIElement 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUIElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUIElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUIElement.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubGUIElement.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubGUILayoutUtility">
            <summary>UnityEngine.GUILayoutUtility 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUILayoutUtility.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUILayoutUtility.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUILayoutUtility.InitializeStub">
            <summary>初始化 type StubGUILayoutUtility 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUILayoutUtility.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUILayoutUtility.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubGUIUtility">
            <summary>UnityEngine.GUIUtility 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUIUtility.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUIUtility.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubGUIUtility.InitializeStub">
            <summary>初始化 type StubGUIUtility 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUIUtility.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubGUIUtility.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubImplementedInActionScriptAttribute">
            <summary>UnityEngine.ImplementedInActionScriptAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.InitializeStub">
            <summary>初始化 type StubImplementedInActionScriptAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubImplementedInActionScriptAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubJoint">
            <summary>UnityEngine.Joint 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubJoint.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubJoint.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubJoint.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint.InitializeStub">
            <summary>初始化 type StubJoint 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubJoint.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubJoint.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubJoint.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubJoint2D">
            <summary>UnityEngine.Joint2D 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint2D.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubJoint2D.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint2D.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubJoint2D.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint2D.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubJoint2D.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint2D.InitializeStub">
            <summary>初始化 type StubJoint2D 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubJoint2D.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubJoint2D.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubJoint2D.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubJoint2D.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubMaterial">
            <summary>UnityEngine.Material 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMaterial.#ctor(UnityEngine.Material)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMaterial.#ctor(UnityEngine.Shader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMaterial.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMaterial.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMaterial.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMaterial.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMaterial.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMaterial.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMaterial.InitializeStub">
            <summary>初始化 type StubMaterial 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMaterial.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMaterial.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMaterial.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMaterial.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubMissingComponentException">
            <summary>UnityEngine.MissingComponentException 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubMissingComponentException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubMissingComponentException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingComponentException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingComponentException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingComponentException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.InitializeStub">
            <summary>初始化 type StubMissingComponentException 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingComponentException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingComponentException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingComponentException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingComponentException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingComponentException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingComponentException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingComponentException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubMissingReferenceException">
            <summary>UnityEngine.MissingReferenceException 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubMissingReferenceException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubMissingReferenceException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingReferenceException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingReferenceException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingReferenceException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.InitializeStub">
            <summary>初始化 type StubMissingReferenceException 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingReferenceException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingReferenceException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingReferenceException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingReferenceException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMissingReferenceException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMissingReferenceException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMissingReferenceException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubMonoBehaviour">
            <summary>UnityEngine.MonoBehaviour 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMonoBehaviour.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMonoBehaviour.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMonoBehaviour.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMonoBehaviour.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMonoBehaviour.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMonoBehaviour.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMonoBehaviour.InitializeStub">
            <summary>初始化 type StubMonoBehaviour 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMonoBehaviour.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMonoBehaviour.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMonoBehaviour.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMonoBehaviour.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubMotion">
            <summary>UnityEngine.Motion 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMotion.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMotion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMotion.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMotion.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMotion.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMotion.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMotion.InitializeStub">
            <summary>初始化 type StubMotion 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMotion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubMotion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubMotion.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubMotion.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubObject">
            <summary>UnityEngine.Object 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubObject.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubObject.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubObject.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubObject.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubObject.InitializeStub">
            <summary>初始化 type StubObject 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubObject.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubObject.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubPhysics">
            <summary>UnityEngine.Physics 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPhysics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPhysics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPhysics.InitializeStub">
            <summary>初始化 type StubPhysics 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPhysics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPhysics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubPhysics2D">
            <summary>UnityEngine.Physics2D 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPhysics2D.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPhysics2D.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPhysics2D.InitializeStub">
            <summary>初始化 type StubPhysics2D 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPhysics2D.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPhysics2D.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubPropertyAttribute">
            <summary>UnityEngine.PropertyAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPropertyAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPropertyAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPropertyAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubPropertyAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPropertyAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubPropertyAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPropertyAttribute.InitializeStub">
            <summary>初始化 type StubPropertyAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPropertyAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPropertyAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPropertyAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubPropertyAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubPropertyAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubPropertyAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubPropertyAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubPropertyAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubRenderer">
            <summary>UnityEngine.Renderer 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRenderer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubRenderer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRenderer.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubRenderer.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRenderer.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubRenderer.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRenderer.InitializeStub">
            <summary>初始化 type StubRenderer 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubRenderer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubRenderer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRenderer.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubRenderer.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubRuntimeAnimatorController">
            <summary>UnityEngine.RuntimeAnimatorController 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRuntimeAnimatorController.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubRuntimeAnimatorController.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRuntimeAnimatorController.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubRuntimeAnimatorController.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRuntimeAnimatorController.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubRuntimeAnimatorController.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRuntimeAnimatorController.InitializeStub">
            <summary>初始化 type StubRuntimeAnimatorController 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubRuntimeAnimatorController.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubRuntimeAnimatorController.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubRuntimeAnimatorController.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubRuntimeAnimatorController.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubScriptableObject">
            <summary>UnityEngine.ScriptableObject 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubScriptableObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubScriptableObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubScriptableObject.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubScriptableObject.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubScriptableObject.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubScriptableObject.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubScriptableObject.InitializeStub">
            <summary>初始化 type StubScriptableObject 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubScriptableObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubScriptableObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubScriptableObject.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubScriptableObject.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubSkinnedMeshRenderer">
            <summary>UnityEngine.SkinnedMeshRenderer 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubSkinnedMeshRenderer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubSkinnedMeshRenderer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubSkinnedMeshRenderer.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubSkinnedMeshRenderer.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubSkinnedMeshRenderer.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubSkinnedMeshRenderer.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubSkinnedMeshRenderer.InitializeStub">
            <summary>初始化 type StubSkinnedMeshRenderer 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubSkinnedMeshRenderer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubSkinnedMeshRenderer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubSkinnedMeshRenderer.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubSkinnedMeshRenderer.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubStackTraceUtility">
            <summary>UnityEngine.StackTraceUtility 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubStackTraceUtility.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubStackTraceUtility.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubStackTraceUtility.InitializeStub">
            <summary>初始化 type StubStackTraceUtility 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubStackTraceUtility.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubStackTraceUtility.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubTextAsset">
            <summary>UnityEngine.TextAsset 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTextAsset.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTextAsset.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTextAsset.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTextAsset.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTextAsset.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTextAsset.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTextAsset.InitializeStub">
            <summary>初始化 type StubTextAsset 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTextAsset.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTextAsset.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTextAsset.ToString">
            <summary>设置 TextAsset.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTextAsset.ToString01">
            <summary>设置 TextAsset.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubTextEditor">
            <summary>UnityEngine.TextEditor 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTextEditor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTextEditor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTextEditor.InitializeStub">
            <summary>初始化 type StubTextEditor 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTextEditor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTextEditor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubTexture">
            <summary>UnityEngine.Texture 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTexture.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTexture.AttachBackingFieldToheight">
            <summary>附加委托以将 StubTexture.height 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTexture.AttachBackingFieldTowidth">
            <summary>附加委托以将 StubTexture.width 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTexture.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTexture.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTexture.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTexture.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTexture.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTexture.HeightGet">
            <summary>设置 Texture.get_height() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTexture.HeightSetInt32">
            <summary>设置 Texture.set_height(Int32 value) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTexture.InitializeStub">
            <summary>初始化 type StubTexture 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTexture.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTexture.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTexture.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTexture.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTexture.WidthGet">
            <summary>设置 Texture.get_width() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTexture.WidthSetInt32">
            <summary>设置 Texture.set_width(Int32 value) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTexture.height">
            <summary>设置 Texture.get_height() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTexture.width">
            <summary>设置 Texture.get_width() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubThreadSafeAttribute">
            <summary>UnityEngine.ThreadSafeAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubThreadSafeAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubThreadSafeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubThreadSafeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubThreadSafeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubThreadSafeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubThreadSafeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubThreadSafeAttribute.InitializeStub">
            <summary>初始化 type StubThreadSafeAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubThreadSafeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubThreadSafeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubThreadSafeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubThreadSafeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubThreadSafeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubThreadSafeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubThreadSafeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubThreadSafeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubTrackedReference">
            <summary>UnityEngine.TrackedReference 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTrackedReference.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTrackedReference.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTrackedReference.Equals(System.Object)">
            <summary>设置 TrackedReference.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTrackedReference.EqualsObject">
            <summary>设置 TrackedReference.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTrackedReference.GetHashCode">
            <summary>设置 TrackedReference.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubTrackedReference.GetHashCode01">
            <summary>设置 TrackedReference.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubTrackedReference.InitializeStub">
            <summary>初始化 type StubTrackedReference 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTrackedReference.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubTrackedReference.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubUnassignedReferenceException">
            <summary>UnityEngine.UnassignedReferenceException 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubUnassignedReferenceException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubUnassignedReferenceException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnassignedReferenceException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnassignedReferenceException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnassignedReferenceException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.InitializeStub">
            <summary>初始化 type StubUnassignedReferenceException 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnassignedReferenceException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnassignedReferenceException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnassignedReferenceException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnassignedReferenceException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnassignedReferenceException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnassignedReferenceException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnassignedReferenceException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubUnityException">
            <summary>UnityEngine.UnityException 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubUnityException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubUnityException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnityException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnityException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnityException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.InitializeStub">
            <summary>初始化 type StubUnityException 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnityException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnityException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnityException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnityException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubUnityException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubUnityException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Fakes.StubUnityException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Fakes.StubYieldInstruction">
            <summary>UnityEngine.YieldInstruction 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubYieldInstruction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubYieldInstruction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Fakes.StubYieldInstruction.InitializeStub">
            <summary>初始化 type StubYieldInstruction 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubYieldInstruction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Fakes.StubYieldInstruction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Flash.Fakes.ShimActionScript">
            <summary>UnityEngine.Flash.ActionScript 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimActionScript.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimActionScript.#ctor(UnityEngine.Flash.ActionScript)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Flash.Fakes.ShimActionScript.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimActionScript.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimActionScript.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimActionScript.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimActionScript.Constructor">
            <summary>设置 ActionScript.ActionScript() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimActionScript.ExpressionOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>设置 ActionScript.Expression(String formatString, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimActionScript.ImportString">
            <summary>设置 ActionScript.Import(String package) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimActionScript.StatementStringObjectArray">
            <summary>设置 ActionScript.Statement(String formatString, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Flash.Fakes.ShimFlashPlayer">
            <summary>UnityEngine.Flash.FlashPlayer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimFlashPlayer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimFlashPlayer.#ctor(UnityEngine.Flash.FlashPlayer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Flash.Fakes.ShimFlashPlayer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimFlashPlayer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Flash.Fakes.ShimFlashPlayer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimFlashPlayer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimFlashPlayer.Constructor">
            <summary>设置 FlashPlayer.FlashPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimFlashPlayer.GetUnityAppConstantsString">
            <summary>设置 FlashPlayer.GetUnityAppConstants(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimFlashPlayer.TargetSwfVersionGet">
            <summary>设置 FlashPlayer.get_TargetSwfVersion() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Flash.Fakes.ShimFlashPlayer.TargetVersionGet">
            <summary>设置 FlashPlayer.get_TargetVersion() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute">
            <summary>UnityEngine.Internal.DefaultValueAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.#ctor(UnityEngine.Internal.DefaultValueAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.AllInstances.EqualsObject">
            <summary>设置 DefaultValueAttribute.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.AllInstances.GetHashCode01">
            <summary>设置 DefaultValueAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.AllInstances.ValueGet">
            <summary>设置 DefaultValueAttribute.get_Value() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.ConstructorString">
            <summary>设置 DefaultValueAttribute.DefaultValueAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.EqualsObject">
            <summary>设置 DefaultValueAttribute.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.GetHashCode">
            <summary>设置 DefaultValueAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimDefaultValueAttribute.ValueGet">
            <summary>设置 DefaultValueAttribute.get_Value() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Internal.Fakes.ShimExcludeFromDocsAttribute">
            <summary>UnityEngine.Internal.ExcludeFromDocsAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.ShimExcludeFromDocsAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.ShimExcludeFromDocsAttribute.#ctor(UnityEngine.Internal.ExcludeFromDocsAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Internal.Fakes.ShimExcludeFromDocsAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.ShimExcludeFromDocsAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.ShimExcludeFromDocsAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimExcludeFromDocsAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.ShimExcludeFromDocsAttribute.Constructor">
            <summary>设置 ExcludeFromDocsAttribute.ExcludeFromDocsAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Internal.Fakes.StubDefaultValueAttribute">
            <summary>UnityEngine.Internal.DefaultValueAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.Equals(System.Object)">
            <summary>设置 DefaultValueAttribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.EqualsObject">
            <summary>设置 DefaultValueAttribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.GetHashCode">
            <summary>设置 DefaultValueAttribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.GetHashCode01">
            <summary>设置 DefaultValueAttribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.InitializeStub">
            <summary>初始化 type StubDefaultValueAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubDefaultValueAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute">
            <summary>UnityEngine.Internal.ExcludeFromDocsAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.InitializeStub">
            <summary>初始化 type StubExcludeFromDocsAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Internal.Fakes.StubExcludeFromDocsAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector">
            <summary>UnityEngine.Serialization.UnitySurrogateSelector 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.#ctor(UnityEngine.Serialization.UnitySurrogateSelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.AllInstances.ChainSelectorISurrogateSelector">
            <summary>设置 UnitySurrogateSelector.ChainSelector(ISurrogateSelector selector) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.AllInstances.GetNextSelector">
            <summary>设置 UnitySurrogateSelector.GetNextSelector() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.AllInstances.GetSurrogateTypeStreamingContextISurrogateSelectorOut">
            <summary>设置 UnitySurrogateSelector.GetSurrogate(Type type, StreamingContext context, ISurrogateSelector&amp; selector) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.Bind(System.Runtime.Serialization.ISurrogateSelector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.ChainSelectorISurrogateSelector">
            <summary>设置 UnitySurrogateSelector.ChainSelector(ISurrogateSelector selector) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.Constructor">
            <summary>设置 UnitySurrogateSelector.UnitySurrogateSelector() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.GetNextSelector">
            <summary>设置 UnitySurrogateSelector.GetNextSelector() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.ShimUnitySurrogateSelector.GetSurrogateTypeStreamingContextISurrogateSelectorOut">
            <summary>设置 UnitySurrogateSelector.GetSurrogate(Type type, StreamingContext context, ISurrogateSelector&amp; selector) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Serialization.Fakes.StubUnitySurrogateSelector">
            <summary>UnityEngine.Serialization.UnitySurrogateSelector 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Serialization.Fakes.StubUnitySurrogateSelector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.StubUnitySurrogateSelector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Serialization.Fakes.StubUnitySurrogateSelector.InitializeStub">
            <summary>初始化 type StubUnitySurrogateSelector 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.StubUnitySurrogateSelector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Serialization.Fakes.StubUnitySurrogateSelector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.ShimLocal">
            <summary>UnityEngine.SocialPlatforms.Local 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.ShimLocal.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.ShimLocal.#ctor(UnityEngine.SocialPlatforms.Local)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.CreateAchievement">
            <summary>设置 Local.CreateAchievement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.CreateDummyTextureInt32Int32">
            <summary>设置 Local.CreateDummyTexture(Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.CreateLeaderboard">
            <summary>设置 Local.CreateLeaderboard() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.LoadAchievementDescriptionsActionOfIAchievementDescriptionArray">
            <summary>设置 Local.LoadAchievementDescriptions(Action`1&lt;IAchievementDescription[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.LoadAchievementsActionOfIAchievementArray">
            <summary>设置 Local.LoadAchievements(Action`1&lt;IAchievement[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.LoadScoresStringActionOfIScoreArray">
            <summary>设置 Local.LoadScores(String leaderboardID, Action`1&lt;IScore[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.LoadUsersStringArrayActionOfIUserProfileArray">
            <summary>设置 Local.LoadUsers(String[] userIDs, Action`1&lt;IUserProfile[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.PopulateStaticData">
            <summary>设置 Local.PopulateStaticData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.ReportProgressStringDoubleActionOfBoolean">
            <summary>设置 Local.ReportProgress(String id, Double progress, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.ReportScoreInt64StringActionOfBoolean">
            <summary>设置 Local.ReportScore(Int64 score, String board, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.SetLocalPlayerScoreLeaderboard">
            <summary>设置 Local.SetLocalPlayerScore(Leaderboard board) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.ShowAchievementsUI">
            <summary>设置 Local.ShowAchievementsUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.ShowLeaderboardUI">
            <summary>设置 Local.ShowLeaderboardUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.SortScoresLeaderboard">
            <summary>设置 Local.SortScores(Leaderboard board) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.UnityEngineSocialPlatformsISocialPlatformAuthenticateILocalUserActionOfBoolean">
            <summary>设置 Local.UnityEngine.SocialPlatforms.ISocialPlatform.Authenticate(ILocalUser user, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.UnityEngineSocialPlatformsISocialPlatformGetLoadingILeaderboard">
            <summary>设置 Local.UnityEngine.SocialPlatforms.ISocialPlatform.GetLoading(ILeaderboard board) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.UnityEngineSocialPlatformsISocialPlatformLoadFriendsILocalUserActionOfBoolean">
            <summary>设置 Local.UnityEngine.SocialPlatforms.ISocialPlatform.LoadFriends(ILocalUser user, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.UnityEngineSocialPlatformsISocialPlatformLoadScoresILeaderboardActionOfBoolean">
            <summary>设置 Local.UnityEngine.SocialPlatforms.ISocialPlatform.LoadScores(ILeaderboard board, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.VerifyUser">
            <summary>设置 Local.VerifyUser() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.AllInstances.localUserGet">
            <summary>设置 Local.get_localUser() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.ShimLocal.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.ShimLocal.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.ShimLocal.Bind(UnityEngine.SocialPlatforms.ISocialPlatform)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.Constructor">
            <summary>设置 Local.Local() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.CreateAchievement">
            <summary>设置 Local.CreateAchievement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.CreateDummyTextureInt32Int32">
            <summary>设置 Local.CreateDummyTexture(Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.CreateLeaderboard">
            <summary>设置 Local.CreateLeaderboard() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.LoadAchievementDescriptionsActionOfIAchievementDescriptionArray">
            <summary>设置 Local.LoadAchievementDescriptions(Action`1&lt;IAchievementDescription[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.LoadAchievementsActionOfIAchievementArray">
            <summary>设置 Local.LoadAchievements(Action`1&lt;IAchievement[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.LoadScoresStringActionOfIScoreArray">
            <summary>设置 Local.LoadScores(String leaderboardID, Action`1&lt;IScore[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.LoadUsersStringArrayActionOfIUserProfileArray">
            <summary>设置 Local.LoadUsers(String[] userIDs, Action`1&lt;IUserProfile[]&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.PopulateStaticData">
            <summary>设置 Local.PopulateStaticData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.ReportProgressStringDoubleActionOfBoolean">
            <summary>设置 Local.ReportProgress(String id, Double progress, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.ReportScoreInt64StringActionOfBoolean">
            <summary>设置 Local.ReportScore(Int64 score, String board, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.SetLocalPlayerScoreLeaderboard">
            <summary>设置 Local.SetLocalPlayerScore(Leaderboard board) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.ShowAchievementsUI">
            <summary>设置 Local.ShowAchievementsUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.ShowLeaderboardUI">
            <summary>设置 Local.ShowLeaderboardUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.SortScoresLeaderboard">
            <summary>设置 Local.SortScores(Leaderboard board) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.StaticConstructor">
            <summary>设置 Local.Local() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.UnityEngineSocialPlatformsISocialPlatformAuthenticateILocalUserActionOfBoolean">
            <summary>设置 Local.UnityEngine.SocialPlatforms.ISocialPlatform.Authenticate(ILocalUser user, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.UnityEngineSocialPlatformsISocialPlatformGetLoadingILeaderboard">
            <summary>设置 Local.UnityEngine.SocialPlatforms.ISocialPlatform.GetLoading(ILeaderboard board) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.UnityEngineSocialPlatformsISocialPlatformLoadFriendsILocalUserActionOfBoolean">
            <summary>设置 Local.UnityEngine.SocialPlatforms.ISocialPlatform.LoadFriends(ILocalUser user, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.UnityEngineSocialPlatformsISocialPlatformLoadScoresILeaderboardActionOfBoolean">
            <summary>设置 Local.UnityEngine.SocialPlatforms.ISocialPlatform.LoadScores(ILeaderboard board, Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.VerifyUser">
            <summary>设置 Local.VerifyUser() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal._SortScoresm__0ScoreScore">
            <summary>设置 Local.&lt;SortScores&gt;m__0(Score s1, Score s2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimLocal.localUserGet">
            <summary>设置 Local.get_localUser() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.ShimRange">
            <summary>UnityEngine.SocialPlatforms.Range 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.ShimRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.ShimRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.ShimRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.ShimRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.ShimRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.StubIAchievement">
            <summary>UnityEngine.SocialPlatforms.IAchievement 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.#ctor">
            <summary>初始化 type StubIAchievement 的新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.AttachBackingFieldToid">
            <summary>附加委托以将 StubIAchievement.id 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.AttachBackingFieldTopercentCompleted">
            <summary>附加委托以将 StubIAchievement.percentCompleted 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.CompletedGet">
            <summary>设置 IAchievement.get_completed() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.HiddenGet">
            <summary>设置 IAchievement.get_hidden() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.IdGet">
            <summary>设置 IAchievement.get_id() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.IdSetString">
            <summary>设置 IAchievement.set_id(String value) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.LastReportedDateGet">
            <summary>设置 IAchievement.get_lastReportedDate() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.PercentCompletedGet">
            <summary>设置 IAchievement.get_percentCompleted() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.PercentCompletedSetDouble">
            <summary>设置 IAchievement.set_percentCompleted(Double value) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.ReportProgressActionOfBoolean">
            <summary>设置 IAchievement.ReportProgress(Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.UnityEngine#SocialPlatforms#IAchievement#ReportProgress(System.Action{System.Boolean})">
            <summary>设置 IAchievement.ReportProgress(Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.UnityEngine#SocialPlatforms#IAchievement#completed">
            <summary>设置 IAchievement.get_completed() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.UnityEngine#SocialPlatforms#IAchievement#hidden">
            <summary>设置 IAchievement.get_hidden() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.UnityEngine#SocialPlatforms#IAchievement#id">
            <summary>设置 IAchievement.get_id() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.UnityEngine#SocialPlatforms#IAchievement#lastReportedDate">
            <summary>设置 IAchievement.get_lastReportedDate() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievement.UnityEngine#SocialPlatforms#IAchievement#percentCompleted">
            <summary>设置 IAchievement.get_percentCompleted() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription">
            <summary>UnityEngine.SocialPlatforms.IAchievementDescription 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.#ctor">
            <summary>初始化 type StubIAchievementDescription 的新实例</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.AchievedDescriptionGet">
            <summary>设置 IAchievementDescription.get_achievedDescription() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.AttachBackingFieldToid">
            <summary>附加委托以将 StubIAchievementDescription.id 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.HiddenGet">
            <summary>设置 IAchievementDescription.get_hidden() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.IdGet">
            <summary>设置 IAchievementDescription.get_id() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.IdSetString">
            <summary>设置 IAchievementDescription.set_id(String value) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.ImageGet">
            <summary>设置 IAchievementDescription.get_image() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.PointsGet">
            <summary>设置 IAchievementDescription.get_points() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.TitleGet">
            <summary>设置 IAchievementDescription.get_title() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.UnachievedDescriptionGet">
            <summary>设置 IAchievementDescription.get_unachievedDescription() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.UnityEngine#SocialPlatforms#IAchievementDescription#achievedDescription">
            <summary>设置 IAchievementDescription.get_achievedDescription() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.UnityEngine#SocialPlatforms#IAchievementDescription#hidden">
            <summary>设置 IAchievementDescription.get_hidden() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.UnityEngine#SocialPlatforms#IAchievementDescription#id">
            <summary>设置 IAchievementDescription.get_id() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.UnityEngine#SocialPlatforms#IAchievementDescription#image">
            <summary>设置 IAchievementDescription.get_image() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.UnityEngine#SocialPlatforms#IAchievementDescription#points">
            <summary>设置 IAchievementDescription.get_points() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.UnityEngine#SocialPlatforms#IAchievementDescription#title">
            <summary>设置 IAchievementDescription.get_title() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIAchievementDescription.UnityEngine#SocialPlatforms#IAchievementDescription#unachievedDescription">
            <summary>设置 IAchievementDescription.get_unachievedDescription() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard">
            <summary>UnityEngine.SocialPlatforms.ILeaderboard 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.#ctor">
            <summary>初始化 type StubILeaderboard 的新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.AttachBackingFieldToid">
            <summary>附加委托以将 StubILeaderboard.id 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.AttachBackingFieldTorange">
            <summary>附加委托以将 StubILeaderboard.range 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.AttachBackingFieldTotimeScope">
            <summary>附加委托以将 StubILeaderboard.timeScope 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.AttachBackingFieldTouserScope">
            <summary>附加委托以将 StubILeaderboard.userScope 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.IdGet">
            <summary>设置 ILeaderboard.get_id() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.IdSetString">
            <summary>设置 ILeaderboard.set_id(String value) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.LoadScoresActionOfBoolean">
            <summary>设置 ILeaderboard.LoadScores(Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.LoadingGet">
            <summary>设置 ILeaderboard.get_loading() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.LocalUserScoreGet">
            <summary>设置 ILeaderboard.get_localUserScore() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.MaxRangeGet">
            <summary>设置 ILeaderboard.get_maxRange() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.RangeGet">
            <summary>设置 ILeaderboard.get_range() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.RangeSetRange">
            <summary>设置 ILeaderboard.set_range(Range value) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.ScoresGet">
            <summary>设置 ILeaderboard.get_scores() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.SetUserFilterStringArray">
            <summary>设置 ILeaderboard.SetUserFilter(String[] userIDs) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.TimeScopeGet">
            <summary>设置 ILeaderboard.get_timeScope() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.TimeScopeSetTimeScope">
            <summary>设置 ILeaderboard.set_timeScope(TimeScope value) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.TitleGet">
            <summary>设置 ILeaderboard.get_title() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#LoadScores(System.Action{System.Boolean})">
            <summary>设置 ILeaderboard.LoadScores(Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#SetUserFilter(System.String[])">
            <summary>设置 ILeaderboard.SetUserFilter(String[] userIDs) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UserScopeGet">
            <summary>设置 ILeaderboard.get_userScope() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UserScopeSetUserScope">
            <summary>设置 ILeaderboard.set_userScope(UserScope value) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#id">
            <summary>设置 ILeaderboard.get_id() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#loading">
            <summary>设置 ILeaderboard.get_loading() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#localUserScore">
            <summary>设置 ILeaderboard.get_localUserScore() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#maxRange">
            <summary>设置 ILeaderboard.get_maxRange() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#range">
            <summary>设置 ILeaderboard.get_range() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#scores">
            <summary>设置 ILeaderboard.get_scores() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#timeScope">
            <summary>设置 ILeaderboard.get_timeScope() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#title">
            <summary>设置 ILeaderboard.get_title() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILeaderboard.UnityEngine#SocialPlatforms#ILeaderboard#userScope">
            <summary>设置 ILeaderboard.get_userScope() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.StubILocalUser">
            <summary>UnityEngine.SocialPlatforms.ILocalUser 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.#ctor">
            <summary>初始化 type StubILocalUser 的新实例</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.AuthenticateActionOfBoolean">
            <summary>设置 ILocalUser.Authenticate(Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.AuthenticatedGet">
            <summary>设置 ILocalUser.get_authenticated() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.FriendsGet">
            <summary>设置 ILocalUser.get_friends() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.IdGet">
            <summary>设置 IUserProfile.get_id() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.ImageGet">
            <summary>设置 IUserProfile.get_image() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.IsFriendGet">
            <summary>设置 IUserProfile.get_isFriend() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.LoadFriendsActionOfBoolean">
            <summary>设置 ILocalUser.LoadFriends(Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.StateGet">
            <summary>设置 IUserProfile.get_state() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnderageGet">
            <summary>设置 ILocalUser.get_underage() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#ILocalUser#Authenticate(System.Action{System.Boolean})">
            <summary>设置 ILocalUser.Authenticate(Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#ILocalUser#LoadFriends(System.Action{System.Boolean})">
            <summary>设置 ILocalUser.LoadFriends(Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UserNameGet">
            <summary>设置 IUserProfile.get_userName() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#ILocalUser#authenticated">
            <summary>设置 ILocalUser.get_authenticated() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#ILocalUser#friends">
            <summary>设置 ILocalUser.get_friends() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#IUserProfile#id">
            <summary>设置 IUserProfile.get_id() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#IUserProfile#image">
            <summary>设置 IUserProfile.get_image() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#IUserProfile#isFriend">
            <summary>设置 IUserProfile.get_isFriend() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#IUserProfile#state">
            <summary>设置 IUserProfile.get_state() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#ILocalUser#underage">
            <summary>设置 ILocalUser.get_underage() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubILocalUser.UnityEngine#SocialPlatforms#IUserProfile#userName">
            <summary>设置 IUserProfile.get_userName() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.StubIScore">
            <summary>UnityEngine.SocialPlatforms.IScore 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIScore.#ctor">
            <summary>初始化 type StubIScore 的新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIScore.AttachBackingFieldToleaderboardID">
            <summary>附加委托以将 StubIScore.leaderboardID 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIScore.AttachBackingFieldTovalue">
            <summary>附加委托以将 StubIScore.value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.DateGet">
            <summary>设置 IScore.get_date() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.FormattedValueGet">
            <summary>设置 IScore.get_formattedValue() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.LeaderboardIDGet">
            <summary>设置 IScore.get_leaderboardID() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.LeaderboardIDSetString">
            <summary>设置 IScore.set_leaderboardID(String value) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.RankGet">
            <summary>设置 IScore.get_rank() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.ReportScoreActionOfBoolean">
            <summary>设置 IScore.ReportScore(Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIScore.UnityEngine#SocialPlatforms#IScore#ReportScore(System.Action{System.Boolean})">
            <summary>设置 IScore.ReportScore(Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.UserIDGet">
            <summary>设置 IScore.get_userID() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.ValueGet">
            <summary>设置 IScore.get_value() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIScore.ValueSetInt64">
            <summary>设置 IScore.set_value(Int64 value) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIScore.UnityEngine#SocialPlatforms#IScore#date">
            <summary>设置 IScore.get_date() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIScore.UnityEngine#SocialPlatforms#IScore#formattedValue">
            <summary>设置 IScore.get_formattedValue() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIScore.UnityEngine#SocialPlatforms#IScore#leaderboardID">
            <summary>设置 IScore.get_leaderboardID() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIScore.UnityEngine#SocialPlatforms#IScore#rank">
            <summary>设置 IScore.get_rank() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIScore.UnityEngine#SocialPlatforms#IScore#userID">
            <summary>设置 IScore.get_userID() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIScore.UnityEngine#SocialPlatforms#IScore#value">
            <summary>设置 IScore.get_value() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform">
            <summary>UnityEngine.SocialPlatforms.ISocialPlatform 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.#ctor">
            <summary>初始化 type StubISocialPlatform 的新实例</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.AuthenticateILocalUserActionOfBoolean">
            <summary>设置 ISocialPlatform.Authenticate(ILocalUser user, Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.CreateAchievement">
            <summary>设置 ISocialPlatform.CreateAchievement() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.CreateLeaderboard">
            <summary>设置 ISocialPlatform.CreateLeaderboard() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.GetLoadingILeaderboard">
            <summary>设置 ISocialPlatform.GetLoading(ILeaderboard board) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.LoadAchievementDescriptionsActionOfIAchievementDescriptionArray">
            <summary>设置 ISocialPlatform.LoadAchievementDescriptions(Action`1&lt;IAchievementDescription[]&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.LoadAchievementsActionOfIAchievementArray">
            <summary>设置 ISocialPlatform.LoadAchievements(Action`1&lt;IAchievement[]&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.LoadFriendsILocalUserActionOfBoolean">
            <summary>设置 ISocialPlatform.LoadFriends(ILocalUser user, Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.LoadScoresILeaderboardActionOfBoolean">
            <summary>设置 ISocialPlatform.LoadScores(ILeaderboard board, Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.LoadScoresStringActionOfIScoreArray">
            <summary>设置 ISocialPlatform.LoadScores(String leaderboardID, Action`1&lt;IScore[]&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.LoadUsersStringArrayActionOfIUserProfileArray">
            <summary>设置 ISocialPlatform.LoadUsers(String[] userIDs, Action`1&lt;IUserProfile[]&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.LocalUserGet">
            <summary>设置 ISocialPlatform.get_localUser() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.ReportProgressStringDoubleActionOfBoolean">
            <summary>设置 ISocialPlatform.ReportProgress(String achievementID, Double progress, Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.ReportScoreInt64StringActionOfBoolean">
            <summary>设置 ISocialPlatform.ReportScore(Int64 score, String board, Action`1&lt;Boolean&gt; callback) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.ShowAchievementsUI">
            <summary>设置 ISocialPlatform.ShowAchievementsUI() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.ShowLeaderboardUI">
            <summary>设置 ISocialPlatform.ShowLeaderboardUI() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#Authenticate(UnityEngine.SocialPlatforms.ILocalUser,System.Action{System.Boolean})">
            <summary>设置 ISocialPlatform.Authenticate(ILocalUser user, Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#CreateAchievement">
            <summary>设置 ISocialPlatform.CreateAchievement() 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#CreateLeaderboard">
            <summary>设置 ISocialPlatform.CreateLeaderboard() 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#GetLoading(UnityEngine.SocialPlatforms.ILeaderboard)">
            <summary>设置 ISocialPlatform.GetLoading(ILeaderboard board) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#LoadAchievementDescriptions(System.Action{UnityEngine.SocialPlatforms.IAchievementDescription[]})">
            <summary>设置 ISocialPlatform.LoadAchievementDescriptions(Action`1&lt;IAchievementDescription[]&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#LoadAchievements(System.Action{UnityEngine.SocialPlatforms.IAchievement[]})">
            <summary>设置 ISocialPlatform.LoadAchievements(Action`1&lt;IAchievement[]&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#LoadFriends(UnityEngine.SocialPlatforms.ILocalUser,System.Action{System.Boolean})">
            <summary>设置 ISocialPlatform.LoadFriends(ILocalUser user, Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#LoadScores(UnityEngine.SocialPlatforms.ILeaderboard,System.Action{System.Boolean})">
            <summary>设置 ISocialPlatform.LoadScores(ILeaderboard board, Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#LoadScores(System.String,System.Action{UnityEngine.SocialPlatforms.IScore[]})">
            <summary>设置 ISocialPlatform.LoadScores(String leaderboardID, Action`1&lt;IScore[]&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#LoadUsers(System.String[],System.Action{UnityEngine.SocialPlatforms.IUserProfile[]})">
            <summary>设置 ISocialPlatform.LoadUsers(String[] userIDs, Action`1&lt;IUserProfile[]&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#ReportProgress(System.String,System.Double,System.Action{System.Boolean})">
            <summary>设置 ISocialPlatform.ReportProgress(String achievementID, Double progress, Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#ReportScore(System.Int64,System.String,System.Action{System.Boolean})">
            <summary>设置 ISocialPlatform.ReportScore(Int64 score, String board, Action`1&lt;Boolean&gt; callback) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#ShowAchievementsUI">
            <summary>设置 ISocialPlatform.ShowAchievementsUI() 的 存根</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#ShowLeaderboardUI">
            <summary>设置 ISocialPlatform.ShowLeaderboardUI() 的 存根</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubISocialPlatform.UnityEngine#SocialPlatforms#ISocialPlatform#localUser">
            <summary>设置 ISocialPlatform.get_localUser() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile">
            <summary>UnityEngine.SocialPlatforms.IUserProfile 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.#ctor">
            <summary>初始化 type StubIUserProfile 的新实例</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.IdGet">
            <summary>设置 IUserProfile.get_id() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.ImageGet">
            <summary>设置 IUserProfile.get_image() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.IsFriendGet">
            <summary>设置 IUserProfile.get_isFriend() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.StateGet">
            <summary>设置 IUserProfile.get_state() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.UserNameGet">
            <summary>设置 IUserProfile.get_userName() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.UnityEngine#SocialPlatforms#IUserProfile#id">
            <summary>设置 IUserProfile.get_id() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.UnityEngine#SocialPlatforms#IUserProfile#image">
            <summary>设置 IUserProfile.get_image() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.UnityEngine#SocialPlatforms#IUserProfile#isFriend">
            <summary>设置 IUserProfile.get_isFriend() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.UnityEngine#SocialPlatforms#IUserProfile#state">
            <summary>设置 IUserProfile.get_state() 的 stub</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubIUserProfile.UnityEngine#SocialPlatforms#IUserProfile#userName">
            <summary>设置 IUserProfile.get_userName() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Fakes.StubLocal">
            <summary>UnityEngine.SocialPlatforms.Local 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubLocal.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubLocal.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Fakes.StubLocal.InitializeStub">
            <summary>初始化 type StubLocal 的新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubLocal.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Fakes.StubLocal.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform">
            <summary>UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.#ctor(UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.Bind(UnityEngine.SocialPlatforms.ISocialPlatform)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.Constructor">
            <summary>设置 GameCenterPlatform.GameCenterPlatform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.ResetAllAchievementsActionOfBoolean">
            <summary>设置 GameCenterPlatform.ResetAllAchievements(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.ShowDefaultAchievementCompletionBannerBoolean">
            <summary>设置 GameCenterPlatform.ShowDefaultAchievementCompletionBanner(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.GameCenter.Fakes.ShimGameCenterPlatform.ShowLeaderboardUIStringTimeScope">
            <summary>设置 GameCenterPlatform.ShowLeaderboardUI(String leaderboardID, TimeScope timeScope) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.GameCenter.Fakes.StubGameCenterPlatform">
            <summary>UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.GameCenter.Fakes.StubGameCenterPlatform.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.GameCenter.Fakes.StubGameCenterPlatform.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.GameCenter.Fakes.StubGameCenterPlatform.InitializeStub">
            <summary>初始化 type StubGameCenterPlatform 的新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.GameCenter.Fakes.StubGameCenterPlatform.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.GameCenter.Fakes.StubGameCenterPlatform.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement">
            <summary>UnityEngine.SocialPlatforms.Impl.Achievement 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.#ctor(UnityEngine.SocialPlatforms.Impl.Achievement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.ReportProgressActionOfBoolean">
            <summary>设置 Achievement.ReportProgress(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.SetCompletedBoolean">
            <summary>设置 Achievement.SetCompleted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.SetHiddenBoolean">
            <summary>设置 Achievement.SetHidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.SetLastReportedDateDateTime">
            <summary>设置 Achievement.SetLastReportedDate(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.ToString01">
            <summary>设置 Achievement.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.completedGet">
            <summary>设置 Achievement.get_completed() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.hiddenGet">
            <summary>设置 Achievement.get_hidden() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.idGet">
            <summary>设置 Achievement.get_id() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.idSetString">
            <summary>设置 Achievement.set_id(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.lastReportedDateGet">
            <summary>设置 Achievement.get_lastReportedDate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.percentCompletedGet">
            <summary>设置 Achievement.get_percentCompleted() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.AllInstances.percentCompletedSetDouble">
            <summary>设置 Achievement.set_percentCompleted(Double value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.Bind(UnityEngine.SocialPlatforms.IAchievement)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.Constructor">
            <summary>设置 Achievement.Achievement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.ConstructorStringDouble">
            <summary>设置 Achievement.Achievement(String id, Double percent) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.ConstructorStringDoubleBooleanBooleanDateTime">
            <summary>设置 Achievement.Achievement(String id, Double percentCompleted, Boolean completed, Boolean hidden, DateTime lastReportedDate) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.ReportProgressActionOfBoolean">
            <summary>设置 Achievement.ReportProgress(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.SetCompletedBoolean">
            <summary>设置 Achievement.SetCompleted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.SetHiddenBoolean">
            <summary>设置 Achievement.SetHidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.SetLastReportedDateDateTime">
            <summary>设置 Achievement.SetLastReportedDate(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.ToString">
            <summary>设置 Achievement.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.completedGet">
            <summary>设置 Achievement.get_completed() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.hiddenGet">
            <summary>设置 Achievement.get_hidden() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.idGet">
            <summary>设置 Achievement.get_id() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.idSetString">
            <summary>设置 Achievement.set_id(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.lastReportedDateGet">
            <summary>设置 Achievement.get_lastReportedDate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.percentCompletedGet">
            <summary>设置 Achievement.get_percentCompleted() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievement.percentCompletedSetDouble">
            <summary>设置 Achievement.set_percentCompleted(Double value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription">
            <summary>UnityEngine.SocialPlatforms.Impl.AchievementDescription 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.#ctor(UnityEngine.SocialPlatforms.Impl.AchievementDescription)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.SetImageTexture2D">
            <summary>设置 AchievementDescription.SetImage(Texture2D image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.ToString01">
            <summary>设置 AchievementDescription.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.achievedDescriptionGet">
            <summary>设置 AchievementDescription.get_achievedDescription() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.hiddenGet">
            <summary>设置 AchievementDescription.get_hidden() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.idGet">
            <summary>设置 AchievementDescription.get_id() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.idSetString">
            <summary>设置 AchievementDescription.set_id(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.imageGet">
            <summary>设置 AchievementDescription.get_image() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.pointsGet">
            <summary>设置 AchievementDescription.get_points() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.titleGet">
            <summary>设置 AchievementDescription.get_title() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.AllInstances.unachievedDescriptionGet">
            <summary>设置 AchievementDescription.get_unachievedDescription() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.Bind(UnityEngine.SocialPlatforms.IAchievementDescription)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.ConstructorStringStringTexture2DStringStringBooleanInt32">
            <summary>设置 AchievementDescription.AchievementDescription(String id, String title, Texture2D image, String achievedDescription, String unachievedDescription, Boolean hidden, Int32 points) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.SetImageTexture2D">
            <summary>设置 AchievementDescription.SetImage(Texture2D image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.ToString">
            <summary>设置 AchievementDescription.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.achievedDescriptionGet">
            <summary>设置 AchievementDescription.get_achievedDescription() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.hiddenGet">
            <summary>设置 AchievementDescription.get_hidden() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.idGet">
            <summary>设置 AchievementDescription.get_id() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.idSetString">
            <summary>设置 AchievementDescription.set_id(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.imageGet">
            <summary>设置 AchievementDescription.get_image() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.pointsGet">
            <summary>设置 AchievementDescription.get_points() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.titleGet">
            <summary>设置 AchievementDescription.get_title() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimAchievementDescription.unachievedDescriptionGet">
            <summary>设置 AchievementDescription.get_unachievedDescription() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard">
            <summary>UnityEngine.SocialPlatforms.Impl.Leaderboard 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.#ctor(UnityEngine.SocialPlatforms.Impl.Leaderboard)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.GetUserFilter">
            <summary>设置 Leaderboard.GetUserFilter() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.LoadScoresActionOfBoolean">
            <summary>设置 Leaderboard.LoadScores(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.SetLocalUserScoreIScore">
            <summary>设置 Leaderboard.SetLocalUserScore(IScore score) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.SetMaxRangeUInt32">
            <summary>设置 Leaderboard.SetMaxRange(UInt32 maxRange) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.SetScoresIScoreArray">
            <summary>设置 Leaderboard.SetScores(IScore[] scores) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.SetTitleString">
            <summary>设置 Leaderboard.SetTitle(String title) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.SetUserFilterStringArray">
            <summary>设置 Leaderboard.SetUserFilter(String[] userIDs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.ToString01">
            <summary>设置 Leaderboard.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.idGet">
            <summary>设置 Leaderboard.get_id() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.idSetString">
            <summary>设置 Leaderboard.set_id(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.loadingGet">
            <summary>设置 Leaderboard.get_loading() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.localUserScoreGet">
            <summary>设置 Leaderboard.get_localUserScore() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.maxRangeGet">
            <summary>设置 Leaderboard.get_maxRange() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.rangeGet">
            <summary>设置 Leaderboard.get_range() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.rangeSetRange">
            <summary>设置 Leaderboard.set_range(Range value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.scoresGet">
            <summary>设置 Leaderboard.get_scores() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.timeScopeGet">
            <summary>设置 Leaderboard.get_timeScope() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.timeScopeSetTimeScope">
            <summary>设置 Leaderboard.set_timeScope(TimeScope value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.titleGet">
            <summary>设置 Leaderboard.get_title() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.userScopeGet">
            <summary>设置 Leaderboard.get_userScope() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.AllInstances.userScopeSetUserScope">
            <summary>设置 Leaderboard.set_userScope(UserScope value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.Bind(UnityEngine.SocialPlatforms.ILeaderboard)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.Constructor">
            <summary>设置 Leaderboard.Leaderboard() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.GetUserFilter">
            <summary>设置 Leaderboard.GetUserFilter() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.LoadScoresActionOfBoolean">
            <summary>设置 Leaderboard.LoadScores(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.SetLocalUserScoreIScore">
            <summary>设置 Leaderboard.SetLocalUserScore(IScore score) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.SetMaxRangeUInt32">
            <summary>设置 Leaderboard.SetMaxRange(UInt32 maxRange) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.SetScoresIScoreArray">
            <summary>设置 Leaderboard.SetScores(IScore[] scores) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.SetTitleString">
            <summary>设置 Leaderboard.SetTitle(String title) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.SetUserFilterStringArray">
            <summary>设置 Leaderboard.SetUserFilter(String[] userIDs) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.ToString">
            <summary>设置 Leaderboard.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.idGet">
            <summary>设置 Leaderboard.get_id() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.idSetString">
            <summary>设置 Leaderboard.set_id(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.loadingGet">
            <summary>设置 Leaderboard.get_loading() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.localUserScoreGet">
            <summary>设置 Leaderboard.get_localUserScore() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.maxRangeGet">
            <summary>设置 Leaderboard.get_maxRange() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.rangeGet">
            <summary>设置 Leaderboard.get_range() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.rangeSetRange">
            <summary>设置 Leaderboard.set_range(Range value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.scoresGet">
            <summary>设置 Leaderboard.get_scores() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.timeScopeGet">
            <summary>设置 Leaderboard.get_timeScope() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.timeScopeSetTimeScope">
            <summary>设置 Leaderboard.set_timeScope(TimeScope value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.titleGet">
            <summary>设置 Leaderboard.get_title() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.userScopeGet">
            <summary>设置 Leaderboard.get_userScope() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLeaderboard.userScopeSetUserScope">
            <summary>设置 Leaderboard.set_userScope(UserScope value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser">
            <summary>UnityEngine.SocialPlatforms.Impl.LocalUser 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.#ctor(UnityEngine.SocialPlatforms.Impl.LocalUser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances.AuthenticateActionOfBoolean">
            <summary>设置 LocalUser.Authenticate(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances.LoadFriendsActionOfBoolean">
            <summary>设置 LocalUser.LoadFriends(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances.SetAuthenticatedBoolean">
            <summary>设置 LocalUser.SetAuthenticated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances.SetFriendsIUserProfileArray">
            <summary>设置 LocalUser.SetFriends(IUserProfile[] friends) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances.SetUnderageBoolean">
            <summary>设置 LocalUser.SetUnderage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances.authenticatedGet">
            <summary>设置 LocalUser.get_authenticated() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances.friendsGet">
            <summary>设置 LocalUser.get_friends() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AllInstances.underageGet">
            <summary>设置 LocalUser.get_underage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.AuthenticateActionOfBoolean">
            <summary>设置 LocalUser.Authenticate(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.Bind(UnityEngine.SocialPlatforms.ILocalUser)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.Bind(UnityEngine.SocialPlatforms.IUserProfile)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.Constructor">
            <summary>设置 LocalUser.LocalUser() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.LoadFriendsActionOfBoolean">
            <summary>设置 LocalUser.LoadFriends(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.SetAuthenticatedBoolean">
            <summary>设置 LocalUser.SetAuthenticated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.SetFriendsIUserProfileArray">
            <summary>设置 LocalUser.SetFriends(IUserProfile[] friends) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.SetUnderageBoolean">
            <summary>设置 LocalUser.SetUnderage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.authenticatedGet">
            <summary>设置 LocalUser.get_authenticated() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.friendsGet">
            <summary>设置 LocalUser.get_friends() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimLocalUser.underageGet">
            <summary>设置 LocalUser.get_underage() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore">
            <summary>UnityEngine.SocialPlatforms.Impl.Score 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.#ctor(UnityEngine.SocialPlatforms.Impl.Score)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.ReportScoreActionOfBoolean">
            <summary>设置 Score.ReportScore(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.SetDateDateTime">
            <summary>设置 Score.SetDate(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.SetFormattedValueString">
            <summary>设置 Score.SetFormattedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.SetRankInt32">
            <summary>设置 Score.SetRank(Int32 rank) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.SetUserIDString">
            <summary>设置 Score.SetUserID(String userID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.ToString01">
            <summary>设置 Score.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.dateGet">
            <summary>设置 Score.get_date() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.formattedValueGet">
            <summary>设置 Score.get_formattedValue() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.leaderboardIDGet">
            <summary>设置 Score.get_leaderboardID() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.leaderboardIDSetString">
            <summary>设置 Score.set_leaderboardID(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.rankGet">
            <summary>设置 Score.get_rank() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.userIDGet">
            <summary>设置 Score.get_userID() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.valueGet">
            <summary>设置 Score.get_value() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.AllInstances.valueSetInt64">
            <summary>设置 Score.set_value(Int64 value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.Bind(UnityEngine.SocialPlatforms.IScore)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.Constructor">
            <summary>设置 Score.Score() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.ConstructorStringInt64">
            <summary>设置 Score.Score(String leaderboardID, Int64 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.ConstructorStringInt64StringDateTimeStringInt32">
            <summary>设置 Score.Score(String leaderboardID, Int64 value, String userID, DateTime date, String formattedValue, Int32 rank) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.ReportScoreActionOfBoolean">
            <summary>设置 Score.ReportScore(Action`1&lt;Boolean&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.SetDateDateTime">
            <summary>设置 Score.SetDate(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.SetFormattedValueString">
            <summary>设置 Score.SetFormattedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.SetRankInt32">
            <summary>设置 Score.SetRank(Int32 rank) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.SetUserIDString">
            <summary>设置 Score.SetUserID(String userID) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.ToString">
            <summary>设置 Score.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.dateGet">
            <summary>设置 Score.get_date() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.formattedValueGet">
            <summary>设置 Score.get_formattedValue() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.leaderboardIDGet">
            <summary>设置 Score.get_leaderboardID() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.leaderboardIDSetString">
            <summary>设置 Score.set_leaderboardID(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.rankGet">
            <summary>设置 Score.get_rank() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.userIDGet">
            <summary>设置 Score.get_userID() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.valueGet">
            <summary>设置 Score.get_value() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimScore.valueSetInt64">
            <summary>设置 Score.set_value(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile">
            <summary>UnityEngine.SocialPlatforms.Impl.UserProfile 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.#ctor(UnityEngine.SocialPlatforms.Impl.UserProfile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.SetImageTexture2D">
            <summary>设置 UserProfile.SetImage(Texture2D image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.SetIsFriendBoolean">
            <summary>设置 UserProfile.SetIsFriend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.SetStateUserState">
            <summary>设置 UserProfile.SetState(UserState state) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.SetUserIDString">
            <summary>设置 UserProfile.SetUserID(String id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.SetUserNameString">
            <summary>设置 UserProfile.SetUserName(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.ToString01">
            <summary>设置 UserProfile.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.idGet">
            <summary>设置 UserProfile.get_id() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.imageGet">
            <summary>设置 UserProfile.get_image() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.isFriendGet">
            <summary>设置 UserProfile.get_isFriend() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.stateGet">
            <summary>设置 UserProfile.get_state() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.AllInstances.userNameGet">
            <summary>设置 UserProfile.get_userName() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.Bind(UnityEngine.SocialPlatforms.IUserProfile)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.Constructor">
            <summary>设置 UserProfile.UserProfile() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.ConstructorStringStringBoolean">
            <summary>设置 UserProfile.UserProfile(String name, String id, Boolean friend) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.ConstructorStringStringBooleanUserStateTexture2D">
            <summary>设置 UserProfile.UserProfile(String name, String id, Boolean friend, UserState state, Texture2D image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.SetImageTexture2D">
            <summary>设置 UserProfile.SetImage(Texture2D image) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.SetIsFriendBoolean">
            <summary>设置 UserProfile.SetIsFriend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.SetStateUserState">
            <summary>设置 UserProfile.SetState(UserState state) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.SetUserIDString">
            <summary>设置 UserProfile.SetUserID(String id) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.SetUserNameString">
            <summary>设置 UserProfile.SetUserName(String name) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.ToString">
            <summary>设置 UserProfile.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.idGet">
            <summary>设置 UserProfile.get_id() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.imageGet">
            <summary>设置 UserProfile.get_image() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.isFriendGet">
            <summary>设置 UserProfile.get_isFriend() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.stateGet">
            <summary>设置 UserProfile.get_state() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.ShimUserProfile.userNameGet">
            <summary>设置 UserProfile.get_userName() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement">
            <summary>UnityEngine.SocialPlatforms.Impl.Achievement 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.#ctor(System.String,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.#ctor(System.String,System.Double,System.Boolean,System.Boolean,System.DateTime)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.InitializeStub">
            <summary>初始化 type StubAchievement 的新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.ToString">
            <summary>设置 Achievement.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievement.ToString01">
            <summary>设置 Achievement.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievementDescription">
            <summary>UnityEngine.SocialPlatforms.Impl.AchievementDescription 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievementDescription.#ctor(System.String,System.String,UnityEngine.Texture2D,System.String,System.String,System.Boolean,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievementDescription.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievementDescription.InitializeStub">
            <summary>初始化 type StubAchievementDescription 的新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievementDescription.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievementDescription.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievementDescription.ToString">
            <summary>设置 AchievementDescription.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Impl.Fakes.StubAchievementDescription.ToString01">
            <summary>设置 AchievementDescription.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.StubLeaderboard">
            <summary>UnityEngine.SocialPlatforms.Impl.Leaderboard 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubLeaderboard.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubLeaderboard.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubLeaderboard.InitializeStub">
            <summary>初始化 type StubLeaderboard 的新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubLeaderboard.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubLeaderboard.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubLeaderboard.ToString">
            <summary>设置 Leaderboard.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Impl.Fakes.StubLeaderboard.ToString01">
            <summary>设置 Leaderboard.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.StubLocalUser">
            <summary>UnityEngine.SocialPlatforms.Impl.LocalUser 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubLocalUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubLocalUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubLocalUser.InitializeStub">
            <summary>初始化 type StubLocalUser 的新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubLocalUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubLocalUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubLocalUser.ToString">
            <summary>设置 UserProfile.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Impl.Fakes.StubLocalUser.ToString01">
            <summary>设置 UserProfile.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore">
            <summary>UnityEngine.SocialPlatforms.Impl.Score 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.#ctor(System.String,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.#ctor(System.String,System.Int64,System.String,System.DateTime,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.InitializeStub">
            <summary>初始化 type StubScore 的新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.ToString">
            <summary>设置 Score.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Impl.Fakes.StubScore.ToString01">
            <summary>设置 Score.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile">
            <summary>UnityEngine.SocialPlatforms.Impl.UserProfile 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.#ctor(System.String,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.#ctor(System.String,System.String,System.Boolean,UnityEngine.SocialPlatforms.UserState,UnityEngine.Texture2D)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.InitializeStub">
            <summary>初始化 type StubUserProfile 的新实例</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.ToString">
            <summary>设置 UserProfile.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.SocialPlatforms.Impl.Fakes.StubUserProfile.ToString01">
            <summary>设置 UserProfile.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngineInternal.Fakes.ShimGenericStack">
            <summary>UnityEngineInternal.GenericStack 的填充码类型</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimGenericStack.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimGenericStack.#ctor(UnityEngineInternal.GenericStack)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngineInternal.Fakes.ShimGenericStack.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimGenericStack.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimGenericStack.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimGenericStack.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimGenericStack.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimGenericStack.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimGenericStack.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimGenericStack.Constructor">
            <summary>设置 GenericStack.GenericStack() 的 填充码</summary>
        </member>
        <member name="T:UnityEngineInternal.Fakes.ShimReproduction">
            <summary>UnityEngineInternal.Reproduction 的填充码类型</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimReproduction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimReproduction.#ctor(UnityEngineInternal.Reproduction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngineInternal.Fakes.ShimReproduction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimReproduction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimReproduction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimReproduction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimReproduction.Constructor">
            <summary>设置 Reproduction.Reproduction() 的 填充码</summary>
        </member>
        <member name="T:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute">
            <summary>UnityEngineInternal.TypeInferenceRuleAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.#ctor(UnityEngineInternal.TypeInferenceRuleAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.AllInstances.ToString01">
            <summary>设置 TypeInferenceRuleAttribute.ToString() 的 填充码</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.ConstructorString">
            <summary>设置 TypeInferenceRuleAttribute.TypeInferenceRuleAttribute(String rule) 的 填充码</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.ConstructorTypeInferenceRules">
            <summary>设置 TypeInferenceRuleAttribute.TypeInferenceRuleAttribute(TypeInferenceRules rule) 的 填充码</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.ShimTypeInferenceRuleAttribute.ToString">
            <summary>设置 TypeInferenceRuleAttribute.ToString() 的 填充码</summary>
        </member>
        <member name="T:UnityEngineInternal.Fakes.StubGenericStack">
            <summary>UnityEngineInternal.GenericStack 的存根类型</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubGenericStack.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.Clear">
            <summary>设置 Stack.Clear() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.Clear01">
            <summary>设置 Stack.Clear() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.Clone">
            <summary>设置 Stack.Clone() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.Clone01">
            <summary>设置 Stack.Clone() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.Contains(System.Object)">
            <summary>设置 Stack.Contains(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.ContainsObject">
            <summary>设置 Stack.Contains(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.CopyTo(System.Array,System.Int32)">
            <summary>设置 Stack.CopyTo(Array array, Int32 index) 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.CopyToArrayInt32">
            <summary>设置 Stack.CopyTo(Array array, Int32 index) 的 stub</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubGenericStack.Count">
            <summary>设置 Stack.get_Count() 的 stub</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.CountGet">
            <summary>设置 Stack.get_Count() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.GetEnumerator">
            <summary>设置 Stack.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.GetEnumerator01">
            <summary>设置 Stack.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.InitializeStub">
            <summary>初始化 type StubGenericStack 的新实例</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubGenericStack.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubGenericStack.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubGenericStack.IsSynchronized">
            <summary>设置 Stack.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.IsSynchronizedGet">
            <summary>设置 Stack.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.Peek">
            <summary>设置 Stack.Peek() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.Peek01">
            <summary>设置 Stack.Peek() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.Pop">
            <summary>设置 Stack.Pop() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.Pop01">
            <summary>设置 Stack.Pop() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.Push(System.Object)">
            <summary>设置 Stack.Push(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.PushObject">
            <summary>设置 Stack.Push(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubGenericStack.SyncRoot">
            <summary>设置 Stack.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.SyncRootGet">
            <summary>设置 Stack.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubGenericStack.ToArray">
            <summary>设置 Stack.ToArray() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubGenericStack.ToArray01">
            <summary>设置 Stack.ToArray() 的 stub</summary>
        </member>
        <member name="T:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute">
            <summary>UnityEngineInternal.TypeInferenceRuleAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.#ctor(UnityEngineInternal.TypeInferenceRules)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.InitializeStub">
            <summary>初始化 type StubTypeInferenceRuleAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.ToString">
            <summary>设置 TypeInferenceRuleAttribute.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.ToString01">
            <summary>设置 TypeInferenceRuleAttribute.ToString() 的 stub</summary>
        </member>
        <member name="P:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngineInternal.Fakes.StubTypeInferenceRuleAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
    </members>
</doc>
